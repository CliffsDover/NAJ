$$$!$$$ AGS ROOMEDIT EXPORTED FILE
$$$!$$$ DS 0
 // dialog script file
@S  // dialog startup entry point

@1  // option 1


@2  // option 2


@3  // option 3


@4  // option 4


@5  // option 5

@6  // option 6

@7  // option 7


@8  // option 8


@9  // option 9


@10  // option 10


@11  // option 11


@12  // option 12


@13  // option 13


@14  // option 14


@15  // option 15


@16  // option 16


@17  // option 17


@18  // option 18

@19  // option 19


@20  // option 20


@21  // option 21
@22  // option 22
@23  // option 23
@24  // option 24
$$$!$$$ DS 1
// dialog script file
@S  // dialog startup entry point
return

@1  // option 1

set-speech-view MAIN 2
MAIN: Any second thoughts about this...
MAIN: ... Grandpa did lock me in the closet once.
set-speech-view MOM 5
MOM: You were playing hide and seek!
set-speech-view MAIN 60
MAIN: ... I survived on a cream egg left over from Easter!
return

@2  // option 2

@3  // option 3

set-speech-view MAIN 2
MAIN: ... doing some vacuuming?
MOM: Yep!
set-speech-view MOM 86
MOM: Grandpa let Knuckles out of his cage this morning...
set-speech-view MOM 88
MOM: ... he made a mess!
return

@4  // option 4
@5  // option 5

set-speech-view MAIN 2
MAIN: Have you seen Rufus?
set-speech-view MAIN 64
MAIN: ... I'm a little worried about him if Grandma's around!
set-speech-view MOM 5
MOM: I've been keeping an eye on him...
MOM: ... he's sleeping in the laundry room right now.
return

@6  // option 6


@7  // option 7


@8  // option 8

@9  // option 9
@10  // option 10


@11  // option 11
@12  // option 12
@13  // option 13

@14  // option 14


@15  // option 15


@16  // option 16


@17  // option 17


@18  // option 18
@19  // option 19
@20  // option 20

set-speech-view MAIN 2
MAIN: Knuckles got out of his cage!
set-speech-view MOM 5
MOM: I guess I need to go put him away then...
option-off 20
run-script 17

stop

@21  // option 21

set-speech-view MAIN 2
MAIN: Knuckles got out of his cage again!
set-speech-view MOM 5
MOM: I guess I need to go put him away then...
option-off 21
run-script 17

stop

@22  // option 22
@23  // option 23
@24  // option 24
@25  // option 25
@26  // option 26
@27  // option 27
@28  // option 28

set-speech-view MAIN 2
MAIN: Guess I'll be going.
MOM: Okey-doke.
run-script 101
stop

@29  // option 29
@30  // option 30

set-speech-view MAIN 2
MAIN: Guess I'll be going.
set-speech-view MOM 5
MOM: You and Grandpa are going to have so much fun today!
run-script 101
stop

$$$!$$$ DS 2
// dialog script file
@S  // dialog startup entry point

return

@1  // option 1

set-speech-view MAIN 2
MAIN: Where did you leave your hearing aid?
run-script 11
set-speech-view GRANDPA 121
GRANDPA: ... I CAN'T HEAR A THING WITHOUT MY HEARING AID!

return

@2  // option 2
@3  // option 3

set-speech-view MAIN 2
MAIN: What happened to your cane?
run-script 11
set-speech-view GRANDPA 119
GRANDPA: ... NOT GETTING ANY OF THAT!
set-speech-view GRANDPA 116
GRANDPA: ...
GRANDPA: ... NEXT TIME THAT DURNED BIRD COMES AFTER ME...
set-speech-view GRANDPA 11
GRANDPA: ... OL' GRAMPS'LL BE READY FOR HIM!
run-script 12

option-off 3
option-on 5
return

@4  // option 4
@5  // option 5

set-speech-view MAIN 2
MAIN: Cool knife, could I see it?
run-script 11
set-speech-view GRANDPA 11
GRANDPA: ... YOU WANT IT AGAIN?
run-script 12
option-on 3
option-off 5

return

@6  // option 6
@7  // option 7
@8  // option 8
@9  // option 9

set-speech-view MAIN 2
MAIN: So, what's on TV?
run-script 11
set-speech-view GRANDPA 11
GRANDPA: ... I'M GETTING VIDEO, NO AUDIO!
GRANDPA: ...
GRANDPA: ... BY THE WAY...
set-speech-view GRANDPA 119
GRANDPA: ... DON'T GO LETTING THAT CAT AROUND HERE...
set-speech-view GRANDPA 121
GRANDPA: ... GRANDMA'S COOKIN' GRUB IN THE KITCHEN!
MAIN: ...
GRANDPA: YOU KNOW HOW THOSE TWO CAN GET!

return

@10  // option 10
@11  // option 11

set-speech-view MAIN 2
MAIN: I earned a DOLLAR from Grandma!
run-script 11
set-speech-view GRANDPA 121
GRANDPA: WHAT WAS THAT, BOY?
return

@15  // option 15
@16  // option 16
@17  // option 17
@18  // option 18
@19  // option 19
@20  // option 20
@21  // option 21
@22  // option 22
@23  // option 23
@24  // option 24
@25  // option 25
@26  // option 26
@27  // option 27
@28  // option 28
@29  // option 29
@30  // option 30

set-speech-view MAIN 2
MAIN: I need to get going here...
run-script 11
set-speech-view GRANDPA 121
GRANDPA: ... WHAT WAS THAT?
run-script 100
stop

@12  // option 12
@13  // option 13
@14  // option 14
$$$!$$$ DS 3
// dialog script file

@S  // dialog startup entry point
return


@1  // option 1

set-speech-view MAIN 2
MAIN: I heard you took Grandpa to the park this morning...
run-script 4

option-off 1
option-on 3

return

@2  // opti on 2

@3  // option 3

set-speech-view MAIN 2
MAIN: ... so he bought another cane?
THURSTON: Well, no...
THURSTON: ... but he bought a pocket knife for self-defense!
set-speech-view MAIN 67
MAIN: ... Grandpa's never been known as a rational thinker. 

option-off-forever 3
option-on 4

return


@4  // option 4

set-speech-view MAIN 2
MAIN: ... a pocket knife?
set-speech-view MAIN 67
MAIN: That's 1d4 points of damage at best...
THURSTON: Oh, that reminds me...
THURSTON: ... your wood sword got put in my room somehow.
set-speech-view MAIN 2
MAIN: ...
MAIN: Dexcalibur!?
THURSTON: ... here take it.
run-script 5
option-off-forever 4
option-on 1
return

@5  // option 5

set-speech-view MAIN 2
MAIN: Grandma and Grandpa are visiting today!
THURSTON: ... I had no idea until they barged in this morning.
option-on 15
return

@6  // option 6

@7  // option 7

set-speech-view MAIN 2
MAIN: Could you help me out here?
set-speech-view MAIN 60
MAIN: I have high-stakes Slackmaster action scheduled for today...
set-speech-view MAIN 67
MAIN: ... I can't waste time patronizing relatives!
THURSTON: ...
THURSTON: ... I don't think you can get out.
THURSTON: Mom's in the other hallway, and Grandma and Grandpa are downstairs!

option-on 9
option-off 7
return

@8  // option 8

@9  // option 9

set-speech-view MAIN 2
MAIN: ... but Morry and Anderson are already waiting for me!
THURSTON: ... for a GAME?

option-off 9
option-on 10
return

@10  // option 10

set-speech-view MAIN 67
MAIN: What would it take for you to get me out of this?
THURSTON: ...
THURSTON: ... I'd do anything for Grandma's brownies...
THURSTON: ... too bad she couldn't bake any today.

option-off 10
option-on 7
return

@11  // option 11

@12  // option 12

@13  // option 13

@14  // option 14
@15  // option 15

set-speech-view MAIN 2
MAIN: I'll leave you to your seclusion.
THURSTON: ... have fun!

run-script 100
stop


$$$!$$$ DS 4
// dialog script file
@S  // dialog startup entry point

return
@1  // option 1

set-speech-view MAIN 2
MAIN: How much is the Haute Dog?
HIRELING: Special matinee price!
HIRELING: ... only ONE dollar!

return

@2  // option 2

set-speech-view MAIN 2
MAIN: I'd like to buy a Haute Dog!
HIRELING: Great!
HIRELING: That'll be ONE dollar.
MAIN: ...
set-speech-view MAIN 64
MAIN: Um... I don't have it.
HIRELING: Surely you can afford A DOLLAR...
HIRELING: ... for the FINEST junk cuisine has to offer!

return

@3  // option 3

set-speech-view MAIN 2
MAIN: You're quite the salesman.
HIRELING: I guess so...
HIRELING: ... but our 7-Layer Haute Dog nearly sells itself!
MAIN: ...
set-speech-view MAIN 67
MAIN: Right...
HIRELING: ...
HIRELING: ... plus I work on commission.
set-speech-view MAIN 2
MAIN: That explains it.

option-off 3
option-on 5
return

@4  // option 4
@5  // option 5

set-speech-view MAIN 2
MAIN: How can you be so excited about a hotdog?
MAIN: It's still junk food...
HIRELING: How can YOU not be EXCITED by this AMAZING DEAL!
HIRELING: ... LOOK at it...
run-script 15
HIRELING: Now doesn't that look delicious?
MAIN: ...
set-speech-view MAIN 67
MAIN: I guess so...
set-speech-view MAIN 64
MAIN: ... for a hotdog.
run-script 16

option-off 5
option-on 3
return

@6  // option 6
@7  // option 7

set-speech-view MAIN 2
MAIN: I'd like to buy a Haute Dog!
HIRELING: Great!
HIRELING: That'll be ONE dollar.
run-script 7
run-script 100
stop

@8  // option 8
@9  // option 9
@10  // option 10
@11  // option 11
@12  // option 12
@13  // option 13
@14  // option 14

set-speech-view MAIN 67
MAIN: Nevermind.
HIRELING: ... come back SOON! This SPECIAL PRICE won't last LONG!
run-script 100
stop
$$$!$$$ DS 5
// dialog script file

@S  // dialog startup entry point
return

@1  // option 1

set-speech-view MAIN 2
MAIN: You liked role playing games?
set-speech-view TRAINER 150
TRAINER: Err, no...
set-speech-view TRAINER 26
TRAINER: ... only nerds do that stuff.
MAIN: ...
TRAINER: All I wanted from life was to be bigger, stronger, faster...
TRAINER: ... a nice six-pack to stare at in the mirror...
TRAINER: Any of this sound familiar, lad?
MAIN: I hope you're kidding.
TRAINER: I can tell it's eating you up inside...
set-speech-view TRAINER 148
TRAINER: ... I'll tell you what, mister...
set-speech-view TRAINER 146
TRAINER: ... YOU get yourself a membership at this club...
set-speech-view TRAINER 26
TRAINER: ... and I'll PERSONALLY see to your fitness needs!
set-speech-view TRAINER 146
TRAINER: We'll have your peers GREEN with envy...
TRAINER: ... and the girls falling all over themselves for...
set-speech-view TRAINER 26
TRAINER: ... What was the name?
MAIN: ...
set-speech-view MAIN 67
MAIN: Jackson, but--
set-speech-view TRAINER 146
TRAINER: ... BIG ACTION JACKSON!
set-speech-view TRAINER 26
TRAINER: I LIKE the sound of that...
option-off 1
option-off 2
option-off 3
option-off 4
option-on 5
option-on 6
option-on 7
option-on 8
return


@2  // option 2

set-speech-view MAIN 2
MAIN: You didn't have a dainty ponytail?
set-speech-view TRAINER 150
TRAINER: Err, no...  
set-speech-view TRAINER 26
TRAINER: ... it's exotic by the way.
MAIN: ...
TRAINER: All I wanted from life was to be bigger, stronger, faster...
TRAINER: ... to examine every bit of muscle in the mirror...
TRAINER: Any of this sound familiar, lad?
MAIN: I hope you're kidding.
TRAINER: I can tell it's eating you up inside...
set-speech-view TRAINER 148
TRAINER: ... I'll tell you what, mister...
set-speech-view TRAINER 146
TRAINER: ... YOU get yourself a membership at this club...
set-speech-view TRAINER 26
TRAINER: ... and I'll PERSONALLY see to all your fitness needs!
set-speech-view TRAINER 146
TRAINER: We'll have your peers GREEN with envy...
TRAINER: ... and the girls falling all over themselves for...
set-speech-view TRAINER 26
TRAINER: ... What was the name?
set-speech-view MAIN 67
MAIN: ...
MAIN: Jackson, but--
set-speech-view TRAINER 146
TRAINER: ... BIG ACTION JACKSON!
set-speech-view TRAINER 26
TRAINER: I LIKE the sound of that...
option-off 1
option-off 2
option-off 3
option-off 4
option-on 5
option-on 6
option-on 7
option-on 8
return


@3  // option 3

set-speech-view MAIN 2
MAIN: You weren't undergoing treatment for melanoma?
set-speech-view TRAINER 150
TRAINER: Err, no...  
set-speech-view TRAINER 26
TRAINER: ... I don't even eat melons!
MAIN: ...
TRAINER: All I wanted from life was to be bigger, stronger, faster...
TRAINER: ... to examine every bit of muscle in the mirror...
TRAINER: Any of this sound familiar, lad?
MAIN: I hope you're kidding.
TRAINER: I can tell it's eating you up inside...
set-speech-view TRAINER 148
TRAINER: ... I'll tell you what, mister...
set-speech-view TRAINER 146
TRAINER: ... YOU get yourself a membership at this club...
set-speech-view TRAINER 26
TRAINER: ... and I'll PERSONALLY see to all your fitness needs!
set-speech-view TRAINER 146
TRAINER: We'll have your peers GREEN with envy...
TRAINER: ... and the girls falling all over themselves for...
set-speech-view TRAINER 26
TRAINER: ... What was the name?
set-speech-view MAIN 67
MAIN: ...
MAIN: Jackson, but--
set-speech-view TRAINER 146
TRAINER: ... BIG ACTION JACKSON!
set-speech-view TRAINER 26
TRAINER: I LIKE the sound of that...
option-off 1
option-off 2
option-off 3
option-off 4
option-on 5
option-on 6
option-on 7
option-on 8
return


@4  // option 4

set-speech-view MAIN 2
MAIN: You were a skinny little weakeling?
set-speech-view TRAINER 150 
TRAINER: Err, no... 
set-speech-view TRAINER 26
TRAINER: I'm nordic you know...
MAIN: ...
TRAINER: All I wanted from life was to be bigger, stronger, faster...
TRAINER: ... to examine every bit of muscle in the mirror...
TRAINER: Any of this sound familiar, lad?
MAIN: I hope you're kidding.
TRAINER: I can tell it's eating you up inside...
set-speech-view TRAINER 148
TRAINER: ... I'll tell you what, mister...
set-speech-view TRAINER 146
TRAINER: ... YOU get yourself a membership at this club...
set-speech-view TRAINER 26
TRAINER: ... and I'll PERSONALLY see to all your fitness needs!
set-speech-view TRAINER 146
TRAINER: We'll have your peers GREEN with envy...
TRAINER: ... and the girls falling all over themselves for...
set-speech-view TRAINER 26
TRAINER: ... What was the name?
set-speech-view MAIN 67
MAIN: ...
MAIN: Jackson, but--
set-speech-view TRAINER 146
TRAINER: ... BIG ACTION JACKSON!
set-speech-view TRAINER 26
TRAINER: I LIKE the sound of that...
option-off 1
option-off 2
option-off 3
option-off 4
option-on 5
option-on 6
option-on 7
option-on 8
return



@5  // option 5

set-speech-view MAIN 2
MAIN: You could give me 18 double-odd strength?
set-speech-view TRAINER 146
TRAINER: Interested, eh?
set-speech-view TRAINER 26
TRAINER: I thought so... 
TRAINER: ... I have a knack for these types of closet cases.
set-speech-view MAIN 67
MAIN: ...
MAIN: ... I suppose I could role-play some interest in this place...
set-speech-view TRAINER 146
TRAINER: I KNEW you were interested!
set-speech-view TRAINER 26
TRAINER: Let's give you a tour of our facilities...
TRAINER: ... you can see everything 25-Hour Fitness has to offer!
option-off-forever 5
option-off-forever 6
option-off-forever 8
option-on 11
option-on 13
option-on 15

set-globalint 9 1
run-script 18
new-room 24

@6  // option 6

set-speech-view MAIN 67
MAIN: I just need to run in for a second...
TRAINER: Sorry, members only...
TRAINER: ... that's the rule around here!
return

@7  // option 7

set-speech-view MAIN 2
MAIN: How could I get a membership here?
set-speech-view TRAINER 150
TRAINER: Uh, hehe.
set-speech-view TRAINER 26
TRAINER: I'd recommend a few sessions with a FITNESS PROFESSIONAL first!
return

@8  // option 8

set-speech-view MAIN 2
MAIN: I'm not interested...
set-speech-view TRAINER 26
TRAINER: Come back if you change your mind!

run-script 100
stop


@9  // option 9
@10  // option 10

set-speech-view MAIN 2
MAIN: Could I resume my workout now?
set-speech-view TRAINER 26
TRAINER: Let's get to it!

set-globalint 9 2
run-script 18
new-room 24

@11  // option 11

set-speech-view MAIN 2
MAIN: Could I go on that tour again?
set-speech-view TRAINER 146
TRAINER: Sure!
set-speech-view TRAINER 26
TRAINER: I KNEW you were interested!

set-globalint 9 1
run-script 18
new-room 24

@12  // option 12
@13  // option 13

set-speech-view MAIN 2
MAIN: Could I check out the locker rooms?
set-speech-view TRAINER 26
TRAINER: Sorry, we need to protect our members' privacy!
return

@14  // option 14
@15  // option 15

set-speech-view MAIN 2
MAIN: Nevermind.
set-speech-view TRAINER 26
TRAINER: Today's a great day to get fit!
run-script 100
stop
@16  // option 16
@17  // option 17
@18  // option 18
@19  // option 19
@20  // option 20
@21  // option 21
@22  // option 22
@23  // option 23
@24  // option 24
@25  // option 25
@26  // option 26
@27  // option 27
@28  // option 28
@29  // option 29
@30  // option 30
$$$!$$$ DS 6
// dialog script file
@S  // dialog startup entry point
return


@1  // option 1

set-speech-view MAIN 2
MAIN: Have you seen Grandpa's hearing aid anywhere?
THURSTON: Hmm... let me check...
THURSTON: He was in here earlier this morning...
THURSTON: ...
THURSTON: Yep!  It's right here on my dresser!
MAIN: Great!
MAIN: I just need to give that to him real quick...
run-script 23
THURSTON: I'll tell you what...
THURSTON: You know how much I love Grandma's brownies, right?
MAIN: ...
MAIN: ... yeah?
THURSTON: Well, why don't you bring me some of those brownies...
THURSTON: ... and I'll TRADE you the hearing aid!
option-off-forever 1
option-off 2
option-off 3
option-off 15
option-on 4
option-on 5
option-on 6
option-on 13
return

@2  // option 2

run-script 24
option-off 2
return

@3  // option 3

@4  // option 4

set-speech-view MAIN 60
MAIN: This is extortion!
THURSTON: You know how Grandma is with her cooking...
THURSTON: ... she won't let you go in there and just take them!
option-off 4
return

@5  // option 5

set-speech-view MAIN 67
MAIN: Why don't YOU get your brownies?
THURSTON: I have Grandpa's hearing aid...
THURSTON: ... you need Grandpa's hearing aid...
THURSTON: ...
THURSTON: ... I need brownies!
option-off 5
return

@6  // option 6

set-speech-view MAIN 67
MAIN: Why can't you just give me the hearing aid?
THURSTON: It gives me an excuse not to talk to Grandpa...
THURSTON: ... a privelege not easily given up!
option-off 6
return

@7  // option 7
@8  // option 8
@9  // option 9
@10  // option 10
@11  // option 11
@12  // option 12
@13  // option 13

set-speech-view MAIN 67
MAIN: I like your style, Thurston...
set-speech-view MAIN 2
MAIN: Fair enough!
MAIN: I will bring you the brownies...
MAIN: ... and you will give me the hearing aid, correct?
THURSTON: Yep!
set-speech-view MAIN 67
MAIN: Agreed.
option-off 13
option-on 15
set-globalint 52 1

run-script 100
stop

@14  // option 14
@15  // option 15

set-speech-view MAIN 2
MAIN: I need to get going...
THURSTON: Later...

run-script 100
stop
$$$!$$$ DS 7
// dialog script file
@S  // dialog startup entry point
return

@1  // option 1

set-speech-view MAIN 60
MAIN: Why is our game cancelled!
set-speech-view CLIFF 14
CLIFF: Morry and Anderson both couldn't make it here!
option-on 15
option-off 1
return

@2  // option 2

@3  // option 3

@4  // option 4

set-speech-view MAIN 60
MAIN: Where's Anderson?
set-speech-view CLIFF 97
CLIFF: ... the only martial arts place I can think of...
set-speech-view CLIFF 14
CLIFF: ... is the Dojo on the other side of town.
return

@5  // option 5

set-speech-view MAIN 60
MAIN: Where's Morry?
set-speech-view CLIFF 14
CLIFF: He could be at the 25 Hour Fitness downtown...
CLIFF: ... but you need a membership to get in there!
return

@6  // option 6

@7  // option 7

set-speech-view MAIN 62
MAIN: ... curses!
set-speech-view CLIFF 91
CLIFF: Relax man...
option-on 8
option-off 7
return

@8  // option 8

set-speech-view MAIN 62
MAIN: ... blast!
set-speech-view CLIFF 91
CLIFF: Woah...
set-speech-view CLIFF 91
CLIFF: ... easy there.

option-off 8
option-on 7
return


@9  // option 9


@10  // option 10

set-speech-view MAIN 69
MAIN: I'll round them up like a pair of 10-siders!
set-speech-view CLIFF 91
CLIFF: You do that.
option-off-forever 10
option-on 30
return

@11  // option 11
@12  // option 12
@13  // option 13
@14  // option 14
@15  // option 15

MAIN: I'll round those two up like a pair of 10-siders!
set-speech-view CLIFF 91
CLIFF: You do that...
option-on 1
option-off 15
option-off 7
option-off 8
option-on 30
return

@16  // option 16
@17  // option 17
@18  // option 18
@19  // option 19
@20  // option 20
@21  // option 21
@22  // option 22
@23  // option 23
@24  // option 24
@25  // option 25
@26  // option 26
@27  // option 27
@28  // option 28
@29  // option 29
@30  // option 30

set-speech-view MAIN 2
MAIN: I'm off!
set-speech-view CLIFF 14
CLIFF: See ya...
run-script 100
stop


$$$!$$$ DS 8
// dialog script file
@S  // dialog startup entry point
return

@1  // option 1

set-speech-view MAIN 2
MAIN: What are you building here?
run-script 9

option-off 1
option-on 3
run-script 100
stop

@2  // option 2

set-speech-view MAIN 2
MAIN: What's with the walkie talkie?
set-speech-view WORKER 29
WORKER: My boss likes to MOTIVATE remotely...
set-speech-view WORKER 103
WORKER: ... sometimes he can get...
run-script 6
TALKIE: ... I'M NOT PAYING YOU TO TALK!
WORKER: ...
set-speech-view WORKER 108
WORKER: ... distracting.

run-script 100
stop

@3  // option 3

run-script 10

option-off 3
option-on 1
run-script 100
stop

@4  // option 4
@5  // option 5
@6  // option 6
@7  // option 7
@8  // option 8
@9  // option 9
@10  // option 10

set-speech-view MAIN 2
MAIN: Could you let me back there?
set-speech-view WORKER 103
WORKER: ... with an accident bound to happen?
set-speech-view WORKER 29
WORKER: No way!
return

@11  // option 11
@12  // option 12
@13  // option 13
@14  // option 14
@15  // option 15
@16  // option 16
@17  // option 17
@18  // option 18
@19  // option 19
@20  // option 20

set-speech-view MAIN 2
MAIN: Well I need to get going here...
set-speech-view WORKER 29
WORKER: Ok, see ya later.
run-script 100

stop


$$$!$$$ DS 9
// dialog script file
@S  // dialog startup entry point
return

@1  // option 1

set-speech-view MAIN 2
MAIN: What's cookin' Grandma?
run-script 13
option-off 1
option-on 2
return

@2  // option 2

set-speech-view MAIN 64
MAIN: What kind of stew is it?
set-speech-view GRANDMA 43
GRANDMA: Pork butt!
MAIN: ...
set-speech-view MAIN 67
MAIN: ... oh boy.
option-off 2
option-on 1
return

@3  // option 3

@4  // option 4

set-speech-view MAIN 2
MAIN: I heard you were making brownies today!
set-speech-view GRANDMA 43
GRANDMA: I was!
set-speech-view GRANDMA 130
GRANDMA: ... but the store was completely out of my secret ingredient!
GRANDMA: ...
set-speech-view GRANDMA 43
GRANDMA: ... Thurston was crushed when he found out!
option-off 4
option-on 5
return

@5  // option 5

set-speech-view MAIN 2
MAIN: Which ingredient were you missing for the brownies?
set-speech-view GRANDMA 130
GRANDMA: What!? 
set-speech-view GRANDMA 43
GRANDMA: ... give out my secret ingredient?
set-speech-view GRANDMA 128
GRANDMA: I don't think so buster.
option-off 5
option-on 4
return

@6  // option 6

@7  // option 7

set-speech-view MAIN 2
MAIN: Are the brownies ready yet?
set-speech-view GRANDMA 43
GRANDMA: ... let me finish chopping these veggies first!
return

@8  // option 8

@9  // option 9

@10  // option 10
@11  // option 11
@12  // option 12

set-speech-view MAIN 2
MAIN: Have you seen Rufus around?
set-speech-view GRANDMA 43
GRANDMA: ...
set-speech-view GRANDMA 130
GRANDMA: ... I don't want him in here, Jackson!
set-speech-view GRANDMA 43
GRANDMA: He's always trying to get into my award winning food!
set-speech-view MAIN 64
MAIN: ... he's just friendly!
return

@13  // option 13
@14  // option 14

set-speech-view MAIN 2
MAIN: How do you turn the dishwasher on?
set-speech-view GRANDMA 43
GRANDMA: Make sure the latch is closed!

@15  // option 15
@16  // option 16
@17  // option 17
@18  // option 18
@19  // option 19
@20  // option 20

set-speech-view MAIN 2
MAIN: I need to get going here.
set-speech-view GRANDMA 43
GRANDMA: ... don't let Rufus in here on your way out!
run-script 100
stop
$$$!$$$ DS 10
// dialog script file
@S  // dialog startup entry point
return

@1  // option 1

set-speech-view MAIN 2
MAIN: That bird has Grandpa's cane!
set-speech-view MAIN 2
COFFEE: ...
set-speech-view COFFEE 17
COFFEE: Maybe it'll drop if he takes off?
set-speech-view COFFEE 139
COFFEE: I don't see how he could fly with it...
run-script 25

option-off-forever 1
option-on 5
return

@2  // option 2

set-speech-view MAIN 2
MAIN: What kind of drinks are those?
set-speech-view COFFEE 142
COFFEE: Oh, they're part of my routine...
set-speech-view COFFEE 17
COFFEE: ... I get up real early to buy a 4-pack of these Mocha Coffee drinks at the store!
set-speech-view COFFEE 139
COFFEE: I drink two of'em in the morning for breakfast...
set-speech-view COFFEE 17
COFFEE: ... and the other two with whatever I have for lunch.
COFFEE: They really help me get through the day...
COFFEE: ...
set-speech-view COFFEE 139
COFFEE: ... plus I'm probably hooked on the caffeine.
run-script 25

option-off-forever 2
option-on 6
return

@3  // option 3

set-speech-view MAIN 2
MAIN: Have you tried a 'Haute Dog', yet?
set-speech-view COFFEE 142
COFFEE: No way, I eat more healthy than that!
set-speech-view COFFEE 139
COFFEE: I tried one of the new Kaboom! energy bars today...
set-speech-view COFFEE 139
COFFEE: ... they were running a special at the store...
COFFEE: ... I figured, 'That's a good deal, why not try it?'
COFFEE: ...
set-speech-view COFFEE 139
COFFEE: ... Eww!
run-script 25

option-off 3
option-on 7
return

@4  // option 4
@5  // option 5

set-speech-view MAIN 2
MAIN: I need to get that cane down!
set-speech-view MAIN 2
COFFEE: ...
set-speech-view COFFEE 17
COFFEE: Maybe it'll drop when he takes off?
return

@6  // option 6

set-speech-view MAIN 2
MAIN: Could I have one of your drinks?
set-speech-view COFFEE 17
COFFEE: Sorry...
set-speech-view COFFEE 136
COFFEE: ... that's my last one!
set-speech-view COFFEE 17
return

@7  // option 7

MAIN: ... was the Kaboom! energy bar any good?
set-speech-view COFFEE 139
COFFEE: Let's just say it didn't SIT too well with my ROUTINE...
run-script 25
option-off 7
option-on 3
return

@8  // option 8
@9  // option 9
@10  // option 10
@11  // option 11
@12  // option 12
@13  // option 13
@14  // option 14

set-speech-view MAIN 2
MAIN: I need to get going here...
COFFEE: See ya later!
run-script 100
stop

@15  // option 15

$$$!$$$ DS 11
// dialog script file
@S  // dialog startup entry point
@1  // option 1
@2  // option 2
@3  // option 3
@4  // option 4
@5  // option 5
@6  // option 6
@7  // option 7
@8  // option 8
@9  // option 9
@10  // option 10
@11  // option 11
@12  // option 12
@13  // option 13
@14  // option 14
@15  // option 15
@16  // option 16
@17  // option 17
@18  // option 18
@19  // option 19
@20  // option 20
$$$!$$$ DS 12
// dialog script file
@S  // dialog startup entry point
return


@1  // option 1

set-speech-view MAIN 2
MAIN: What are you doing in here!?
MORRY: ... I thought I'd get a power workout in today.
MAIN: ...
set-speech-view MAIN 60
MAIN: This isn't exercising...
set-speech-view MAIN 62
MAIN: ... you relaxed in here the whole time!
return
option-off 1
option-on 2

@2  // option 2

set-speech-view MAIN 2
MAIN: We've got dungeons to conquer, villains to slay!
MORRY: ...
MORRY: ... I'm too comfortable to think about that stuff.
return
option-on 1
option-off 2

@3  // option 3

set-speech-view MAIN 2
MAIN: Put some clothes on, man!
MORRY: ... you're plainly jealous of this physique.
return

@4  // option 4

run-script 27
return

@5  // option 5
@6  // option 6
@7  // option 7
@8  // option 8
@9  // option 9
@10  // option 10
@11  // option 11
@12  // option 12
@13  // option 13
@14  // option 14
@15  // option 15

set-speech-view MAIN 67
MAIN: Don't get too comfortable...
set-speech-view MAIN 69
MAIN: ... I'll be back for you!
run-script 100
stop

$$$!$$$ DS 13
// dialog script file
@S  // dialog startup entry point
return

@1  // option 1

set-speech-view MAIN 64
MAIN: It's ... great?
set-speech-view TRAINER 156
TRAINER: Isn't it though!

option-off-forever 1
option-on 10
return

@2  // option 2

set-speech-view MAIN 2
MAIN: Could I look around more on my own?
set-speech-view TRAINER 156
TRAINER: Ho-ho! Anxious to get started, huh?
MAIN: ...
set-speech-view TRAINER 40
TRAINER: Unfortunately, you need to either be a member...
TRAINER: ... or have an appointment with a FITNESS PROFESSIONAL...
set-speech-view TRAINER 40
TRAINER: ... to be on the club floor or in the locker rooms.

option-off-forever 2
option-on 8
return

@3  // option 3

set-speech-view MAIN 60
MAIN: I'm not here to exercise you n00b!
set-speech-view TRAINER 156
TRAINER: ...
set-speech-view TRAINER 158
TRAINER: ...
set-speech-view TRAINER 40
TRAINER: ... I'm needed in the lobby.
MAIN: ...

run-script 19
new-room 18

@4  // option 4
set-speech-view MAIN 2
MAIN: How could I get a temporary membership?
set-speech-view TRAINER 156
TRAINER: You need a session with a FITNESS PROFESSIONAL...
set-speech-view TRAINER 40
TRAINER: ... like myself!
return

@5  // option 5
@6  // option 6
@7  // option 7
@8  // option 8

set-speech-view MAIN 2
MAIN: I just need a minute to see if my friend is in here...
set-speech-view TRAINER 40
TRAINER: ...
TRAINER: If you're not serious about fitness...
TRAINER: ... you need to wait in the lobby!

option-off-forever 8
option-on 4

return

@9  // option 9
@10  // option 10

set-speech-view MAIN 2
MAIN: Is this it?
set-speech-view TRAINER 158
TRAINER: Well, there IS the locker room and suana...
set-speech-view TRAINER 40
TRAINER: ... but that's not really part of the tour.
set-speech-view TRAINER 156
TRAINER: ... you need to beef up, boy!
return

@11  // option 11
@12  // option 12
@13  // option 13
@14  // option 14

@15  // option 15
@16  // option 16
@17  // option 17
@18  // option 18
@19  // option 19
@20  // option 20

set-speech-view MAIN 2
MAIN: I've seen enough for now...
TRAINER: Alrighty then...
run-script 19

new-room 18
$$$!$$$ DS 14
// dialog script file
@S  // dialog startup entry point
return

@1  // option 1

set-speech-view MAIN 2
MAIN: Could I move on to another exercise?
set-speech-view TRAINER 40
TRAINER: As your personal trainer, I don't recommend it...
set-speech-view TRAINER 156
TRAINER: ... you can work every muscle group on these fitness balls!
return

@2  // option 2

set-speech-view MAIN 2
MAIN: I'm not sure how I should use this thing.
set-speech-view TRAINER 156
TRAINER: Hop on!
set-speech-view TRAINER 40
TRAINER: ... I'm a professional!
set-speech-view MAIN 67
MAIN: ...
MAIN: ... I need a minute to warm up first.
return

@3  // option 3

set-speech-view MAIN 2
MAIN: I need a break!
set-speech-view TRAINER 40
TRAINER: As your personal trainer, I don't recommend it...
set-speech-view TRAINER 158
TRAINER: ... but it's your free session!
run-script 19
option-off 28

new-room 18

@4  // option 4
@5  // option 5
@6  // option 6
@7  // option 7
@8  // option 8
@9  // option 9
@10  // option 10

set-speech-view MAIN 2
MAIN: Nevermind.
set-speech-view TRAINER 158
TRAINER: Ok!

run-script 100
stop

$$$!$$$ DS 15
// dialog script file
@S  // dialog startup entry point

return

@1  // option 1

set-speech-view MAIN 2
MAIN: What are you listening to?
set-speech-view CLIFF 14
CLIFF: ... just some mix CD's I burned at home.
set-speech-view CLIFF 91
CLIFF: The TV hasn't been working...
set-speech-view CLIFF 14
CLIFF: ... so I brought in my portable CD player!

return

@2  // option 2

set-speech-view MAIN 2
MAIN: What's with the cooler...
set-speech-view CLIFF 91
MAIN: ... this counter is normally covered in wrapper and foil!
CLIFF: That's my lunch for today!
CLIFF: ... eating junk food without TV doesn't feel right!

return

@3  // option 3

set-speech-view MAIN 2
MAIN: I'm ready for battle!
set-speech-view CLIFF 14
CLIFF: We're waiting on Morry and Anderson!

return

@4  // option 4

set-speech-view MAIN 2
MAIN: I'm ready for battle!
set-speech-view CLIFF 14
CLIFF: We're waiting on Morry!

return

@5  // option 5

set-speech-view MAIN 2
MAIN: I'm ready for battle!
set-speech-view CLIFF 14
CLIFF: We're waiting on Anderson!

return

@6  // option 6
@7  // option 7

set-speech-view MAIN 2
MAIN: Could I borrow that cooler?
set-speech-view CLIFF 14
CLIFF: That's all I have to eat!

return

@8  // option 8
@9  // option 9
@10  // option 10

set-speech-view MAIN 2
MAIN: I'm off!
set-speech-view CLIFF 14
CLIFF: See ya...
run-script 100
stop

$$$!$$$ DS 16
// dialog script file
@S  // dialog startup entry point

return

@1  // option 1

MAIN: When does class finish?
STEVE: We're just getting started here...
STEVE: ... I'll hammer some discipline into you students, yet!

return

@2  // option 2

MAIN: Break that board again!
STEVE: I don't want to waste another board!
STEVE: ...
STEVE: ... bring one with you next time...
STEVE: ... I'll smash it in two!

return

@3  // option 3

run-script 28
stop

@4  // option 4

MAIN: ... I think there's a draft in here.
MAIN: Could I close the door?
STEVE: ...
STEVE: Leave my doorstop alone!

return

@5  // option 5
@6  // option 6
@7  // option 7
@8  // option 8
@9  // option 9

MAIN: I need to go to the bathroom...
STEVE: ...
STEVE: ... alright, you'll need to go outside to find one...

option-off-forever 9
option-on 10

run-script 100
stop

@10  // option 10


MAIN: I need to go to the bathroom again...
STEVE: ... again?
STEVE: ...
STEVE: Alright, if nature calls...

run-script 100
stop
$$$!$$$ DS 17
// dialog script file

@S  // dialog startup entry point
return

@1  // option 1

set-speech-view MAIN 2
MAIN: Where did you leave your hearing aid?
run-script 11
set-speech-view GRANDPA 184
GRANDPA: ... I CAN'T HEAR A THING WITHOUT MY HEARING AID!

return

@2  // option 2
@3  // option 3

set-speech-view MAIN 2
MAIN: You're just standing there...
run-script 11
set-speech-view GRANDPA 184
GRANDPA: YOU AREN'T GETTING BY ME!
return

@4  // option 4
@5  // option 5

set-speech-view MAIN 2
MAIN: How many extra batteries did you bring?
run-script 11
MAIN: ...
MAIN: ... I should know better.

return

@6  // option 6
@7  // option 7

set-speech-view MAIN 2
MAIN: I earned a DOLLAR from Grandma!
run-script 11
set-speech-view GRANDPA 187
GRANDPA: WHAT WAS THAT, BOY?
return

@8  // option 8
@9  // option 9
@10  // option 10

set-speech-view MAIN 2
MAIN: I need to get going here...
run-script 11
set-speech-view GRANDPA 187
GRANDPA: ... WHAT WAS THAT?
run-script 100
stop
$$$!$$$ DS 18
// dialog script file
@S  // dialog startup entry point
return

@1  // option 1
@2  // option 2
@3  // option 3
@4  // option 4
@5  // option 5
@6  // option 6
@7  // option 7
@8  // option 8
@9  // option 9
@10  // option 10
$$$!$$$ DS 19
// dialog script file
@S  // dialog startup entry point
return

@1  // option 1

set-speech-view MAIN 2
MAIN: Could I move on to another exercise?
set-speech-view TRAINER 40
TRAINER: As your personal trainer, I don't recommend it...
return

@2  // option 2

set-speech-view MAIN 2
MAIN: I'm not sure how I should use this thing.
set-speech-view TRAINER 156
TRAINER: Hop on!
set-speech-view TRAINER 40
TRAINER: ... I'm a professional!
set-speech-view MAIN 67
MAIN: ...
MAIN: ... I need a minute to warm up first.
return

@3  // option 3

set-speech-view MAIN 2
MAIN: I need a break!
set-speech-view TRAINER 40
TRAINER: As your personal trainer, I don't recommend it...
set-speech-view TRAINER 158
TRAINER: ... but it's your free session!
run-script 19
option-off 28

new-room 18

@4  // option 4
@5  // option 5
@6  // option 6
@7  // option 7
@8  // option 8
@9  // option 9
@10  // option 10

set-speech-view MAIN 2
MAIN: Nevermind.
set-speech-view TRAINER 158
TRAINER: Ok!

run-script 100
stop
@11  // option 11
@12  // option 12
$$$!$$$ ROOM room1.crm
$$$!$$$ RS
// room script file

int WindowFree= 0;	// Set to 1 when the window is open the first time, 2 when it is open
        
        
int currentX;


function object1_c() {
  // script for object1: Look at object

FaceLocation(MAIN, 243, 43);
Wait(10);
  
DisplaySpeechNoBlock(MAIN, "Finally, a way out!", 1);
DisplaySpeechNoBlock(MAIN, "I need to figure out a way down though...", 2);
}



function hotspot1_a() {
  // script for hotspot1: Use inventory on hotspot
  
if(WindowFree== 1) {						// if window is open

	MoveCharacterBlocking(MAIN, 254, 94, 0);
	character[MAIN].loop= 1;
	Wait(30);
	
	SetMusicMasterVolume(30);
	PlayMusic(5);
	Wait(30);
	StartCutscene(5);
	GUIOff(2);
	
	Wait(40);
	DisplaySpeech(MAIN, "This bird's gotta fly!");
	Wait(10);
	character[MAIN].x= 243;
	character[MAIN].y= 95;
	SetCharacterView(MAIN, 3); 
	SetWalkBehindBase(3, 0);				// edge of bed so the rope looks right
	PlaySound(4);
	AnimateCharacterEx(MAIN, 5, 6, 0, 0 , 1);
	SetWalkBehindBase(3, 110);				// set the walkbehind back to normal
	ObjectOn(5);
	LoseInventory(3);
	character[MAIN].room= 23;
	ReleaseCharacterView(MOM);
	character[MOM].room= 1;
	character[MOM].x= -40;
	character[MOM].y= 112;
	MoveCharacterBlocking(MOM, 61, 113, 1);
	SetCharacterView(MOM, 89);				// angry talk
	SetCharacterSpeechView(MOM, 80);
	Wait(10);
	DisplaySpeech(MOM, "Not so fast there buster!");
	Wait(10);
	ReleaseCharacterView(MOM);				// normal
	SetCharacterSpeechView(MOM, 5);
	MoveCharacterBlocking(MOM, 195, 107, 0);
	character[MOM].loop= 2;
	Wait(10);
	character[MOM].loop= 6;
	Wait(10);
	PlaySound(4);
	ObjectOff(5);
	ReleaseCharacterView(MOM);
	character[MOM].loop= 2;
	Wait(10);
	PlaySound(20);
	DisplaySpeechAt(160, 40, 160, MAIN, "Whaaaaaaaaa-UUGGH");
	Wait(10);
	DisplaySpeech(MOM, "Oh don't be such a baby.");
	Wait(10);
	MoveCharacterBlocking(MOM, 245, 97, 0);
	character[MOM].loop= 3;
	Wait(10);
	SetGlobalInt(12, 3);					// go to the proper cutscene

	ReleaseCharacterView(MOM);
	character[MOM].x= 630;
	character[MOM].y= 120;
	character[MOM].room= 3;
	character[MOM].talkview= 12;
	character[MOM].loop= 2;
	SetCharacterTransparency(MOM, 0);
	SetGlobalInt(1, 1);					// set moms state to in living room
	SetGlobalInt(3, 1);					// set thurstons state to in shower
	EndCutscene();
	
	FadeOut(1);
	Wait(30);
	StopMusic();
	Wait(30);
	SetScreenTransition(TRANSITION_BOXOUT);
	NewRoom(22);
}

else {

	FaceLocation(MAIN, 258, 87);
	Wait(10);
  	DisplaySpeechNoBlock(MAIN, "There's nowhere to climb to.", 1);
}
}


function room_c() {
  // script for room: Player enters screen (after fadein)  
  
if(GetGlobalInt(12)== 0) {
	  
	/* begin acting */
	Wait(30);
	PlayMusic(1);
	PlayMusicQueued(2);
	PlayMusicQueued(3);
	SetMusicMasterVolume(90);
	Wait(30);
	SetObjectView(0, 52);					// animate window
	AnimateObject(0, 15, 5, 0);
	Wait(30);
	DisplaySpeech(MOM, "Jackson...?");
	Wait(30);
	DisplaySpeech(MOM, "... are you there?");
	Wait(30);
	ObjectOff(6);						// door opens
	MoveCharacterBlocking(MOM, 78, 112, 1);
	Wait(10);
	DisplaySpeech(MOM, "Time to get up!");
	Wait(30);
	SetCharacterView(MOM, 84);				// MOM happy
	int temp= DisplaySpeechBackground(MOM, "Grandma and Grandpa are here!");
	SetCharacterView(MOM, 5);
	AnimateCharacter(MOM, character[MOM].loop, 5, 1);
	Wait(20);
	DisplaySpeechBackground(MAIN, "... Zzz-snorrrt!!");
	SetCharacterView(MAIN, 3);
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	Wait(30);
	ReleaseCharacterView(MOM);
	DisplaySpeech(MOM, "They're downstairs waiting for you!");
	Wait(30);
	temp= DisplaySpeechBackground(MAIN, "Sleeper...");
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	Wait(10);
	temp= DisplaySpeechBackground(MAIN, "... must ...");
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	Wait(10);
	ReleaseCharacterView(MOM);				// MOM normal
	SetCharacterSpeechView(MOM, 5);
	Wait(30);
	DisplaySpeechBackground(MAIN, "... AWAKEN!");
	Wait(20);
	AnimateCharacterEx(MAIN, 3, 5, 0, 0, 1);
	ReleaseCharacterView(MAIN);
	character[MAIN].loop= 2;
	character[MAIN].x= 298;
	character[MAIN].y= 116;
	ObjectOn(7);						// turn on pillow
	Wait(10);
	character[MAIN].loop= 0;
	Wait(10);
	character[MAIN].loop= 1;
	SetCharacterView(MAIN, 74);
	SetCharacterSpeechView(MAIN, 67);			// MAIN bored
	Wait(10);						/* out of bed */
	DisplaySpeech(MAIN, "Grandma and Grandpa...?");			
	Wait(10);
	MoveCharacterBlocking(MAIN, 223, 122, 1);
	Wait(10);
	SetCharacterSpeechView(MAIN, 64);
	DisplaySpeech(MAIN, "... visiting again?");
	SetCharacterView(MAIN, 63);				// MAIN sad
	Wait(10);
	SetCharacterView(MOM, 84);				// MOM happy
	Wait(10);
	DisplaySpeech(MOM, "Grandpa can't wait to see you!");
	Wait(10);
	SetGlobalInt(12, 1);					// flag to check when cutting to grandpa downstairs
	SetCharacterTransparency(MAIN, 100);
	NewRoom(3);						// cut to grandpa
	SetMusicMasterVolume(30);
}

else if(GetGlobalInt(12)== 1) {
	
	Wait(20);
	character[MAIN].loop= 0;
	Wait(10);
	ReleaseCharacterView(MAIN);
	MoveCharacterBlocking(MAIN, 260, 125, 0);
	SetCharacterView(MAIN, 74);				// MAIN bored
	SetCharacterSpeechView(MAIN, 67);
	Wait(20);
	DisplaySpeech(MAIN, "...I'm supposed to meet Morry and Anderson over at the Gameshop today.");
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	Wait(10);
	DisplaySpeech(MAIN, "We're starting the new Slackmaster campaign Gamekeep designed for us...");
	Wait(10);
	int temp= DisplaySpeechBackground(MAIN, "... copious amounts of gold, experience, and hack 'n slash action, guaranteed!");
	SetCharacterView(MAIN, 2);
	AnimateCharacter(MAIN, character[MAIN].loop, 5, 1);
	Wait(60);
	SetCharacterView(MAIN, 69);				// MAIN arm up
	AnimateCharacterEx(MAIN, character[MAIN].loop, 5, 0, 0, 1);
	SetCharacterView(MAIN, 2);				// MAIN normal
	AnimateCharacter(MAIN, character[MAIN].loop, 5, 1);
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	Wait(10);
	MoveCharacter(MAIN, 48, 114);
	Wait(10);
	temp= DisplaySpeechBackground(MAIN, "... now, if you'll excuse me...");
	Wait(60);
	ReleaseCharacterView(MOM);
	MoveCharacterBlocking(MOM, character[MOM].x + 60, character[MOM].y, 0);
	character[MOM].loop= 0;
	Wait(10);
	character[MOM].loop= 1;
	Wait(10);
	ReleaseCharacterView(MOM);
	SetCharacterSpeechView(MOM, 5);
	
	if(IsOverlayValid(temp)) {
	
		RemoveOverlay(temp);
	}
	
	SetCharacterView(MOM, 89);				// MOM angry
	SetCharacterSpeechView(MOM, 80);
	Wait(10);
	temp= DisplaySpeechBackground(MOM, "... just a moment there, mister!");
	SetCharacterView(MOM, 80);
	AnimateCharacter(MOM, character[MOM].loop, 5, 1);
	Wait(10);
	StopMoving(MAIN);
	Wait(10);
	character[MAIN].loop= 0;
	Wait(10);
	character[MAIN].loop= 2;
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	SetCharacterView(MOM, 87);				// MOM normal
	SetCharacterSpeechView(MOM, 86);
	Wait(10);
	DisplaySpeech(MOM, "Grandpa lost his cane while he was at the park with Thurston...");
	SetCharacterView(MOM, 85);
	SetCharacterSpeechView(MOM, 88);
	Wait(10);
	DisplaySpeech(MOM, "... and Grandma can't find all the ingredients she needs for a recipe...");
	SetCharacterView(MOM, 87);
	SetCharacterSpeechView(MOM, 86);
	Wait(10);
	DisplaySpeech(MOM, "I know you wanted to do some QUESTING today...");
	ReleaseCharacterView(MOM);
	SetCharacterSpeechView(MOM, 5);
	Wait(10);
	DisplaySpeech(MOM, "... but you need to hop in the shower...");
	Wait(10);
	DisplaySpeechBackground(MAIN, "but--");
	SetCharacterView(MAIN, 64);
	character[MAIN].frame= 2;
	Wait(30);
	ReleaseCharacterView(MAIN);
	SetCharacterView(MAIN, 63);
	DisplaySpeech(MOM, "...  clean up...");
	Wait(10);
	temp= DisplaySpeechBackground(MAIN, "surely you--");
	SetCharacterView(MAIN, 64);
	AnimateCharacter(MAIN, character[MAIN].loop, 5, 1);
	Wait(30);
	RemoveOverlay(temp);
	ReleaseCharacterView(MAIN);
	SetCharacterView(MAIN, 63);
	Wait(10);
	DisplaySpeech(MOM, "... and spend some good, quality TIME in REALITY with your FAMILY!");
	MoveCharacterDirect(MOM, -40, 110);
	Wait(10);
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	MoveCharacter(MAIN, 207, 123);
	Wait(30);
	temp= DisplaySpeechBackground(MOM, "... I'll be in the other hallway!");
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	MoveCharacterBlocking(MOM, -40, 100, 1);
	character[MOM].room= 5;
	SetGlobalInt(1, 0);					// set Mom's state to vacuuming hallway
	Wait(10);
	MoveCharacterBlocking(MAIN, 207, 123, 0);
	character[MAIN].loop= 2;
	Wait(10);
	ChangeCharacterView(MAIN, 72);				// angry
	SetCharacterSpeechView(MAIN, 60);
	Wait(10);
	DisplaySpeech(MAIN, "... fury, angst, rebellion...");
	Wait(10);
	character[MAIN].loop= 0;
	Wait(10);
	DisplaySpeech(MAIN, "There must be a way OUT of here...");
	SetCharacterView(MAIN, 62);
	AnimateCharacter(MAIN, character[MAIN].loop, 5, 1);
	temp= DisplaySpeechBackground(MAIN, "... without being sand-bagged by these kin!");
	Wait(40);
	SetCharacterView(MAIN, 60);
	AnimateCharacter(MAIN, character[MAIN].loop, 5, 1);
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}

	ChangeCharacterView(MAIN, 1);				// normal
	SetCharacterSpeechView(MAIN, 2);
	Wait(10);
	character[MAIN].loop= 1;
	Wait(20);
	
	GUIOn(2);
	SetGlobalInt(5, 5);
	SetGlobalInt(12, 2);
	
	SetCursorMode(0);
	SetDefaultCursor();
	
	EndCutscene();
}

else if(GetGlobalInt(5)== 0) {

	MoveCharacterBlocking(MAIN, 67, 114, 1);			// if he came from hallway
	SetGlobalInt(5, 5);
}


}

function object6_a() {
  // script for object6: Look at object
  
DisplaySpeech(MAIN, "Hey, it's Dexcalibur!");
DisplaySpeech(MAIN, "I haven't seen him since my last live action D&D sesh!");
}

function object6_b() {
  // script for object6: Pick up object
  
MoveCharacterBlocking(MAIN, 274, 99, 0);
SetCharacterView(MAIN, 2);
AnimateCharacter(MAIN, 5, 10, 0);
ObjectOff(6);
AddInventory(4);
Wait(10);
PlaySound(5);
ReleaseCharacterView(MAIN);
character[MAIN].loop= 1;
DisplaySpeech(MAIN, "Ahh Dexcalibur...");
DisplaySpeech(MAIN, "It feels good to have you in my grasp once again.");
DisplaySpeech(MAIN, "It seemed like so many sesh's ago that I held you last.");
}


function object7_a() {
  // script for object7: Interact with object
  
MoveCharacterToObject(MAIN, 8);
SetCharacterView(MAIN, 2);
AnimateCharacter(MAIN, 4, 10, 0);
DisplaySpeech(MAIN, "Ooomph.");
Wait(10);
ReleaseCharacterView(MAIN);
character[MAIN].loop= 2;
DisplaySpeech(MAIN, "It's stuck.");
}

function object7_b() {
  // script for object7: Use inventory on object
  
MoveCharacterBlocking(MAIN, 302, 106, 0);
Wait(20);
FaceLocation(MAIN, 450, 85);
Wait(20);
SetObjectView(7, 3);
SetCharacterTransparency(MAIN, 100);
AnimateObject(7, 1, 4, 0);
Wait(160);
ObjectOn(4);
ObjectOff(7);
WindowFree= 2;
SetCharacterTransparency(MAIN, 0);
DisplaySpeech(MAIN, "Alright!  It's open now.");
}

function object7_c() {
  // script for object7: Use inventory on object
  
DisplaySpeech(MAIN, "The lock is loosened and open now.");
DisplaySpeech(MAIN, "I think the window is just stuck in the sill.");
}

function object8_a() {
  // script for object8: Use inventory on object
  
if(WindowFree== 2) {
  
	MoveCharacterBlocking(MAIN, 302, 97, 0);
	MoveCharacterBlocking(MAIN, 361, 106, 1);
	character[MAIN].loop= 1;
	Wait(20);
	StartCutscene(5);
	GUIOff(2);
	
	Wait(40);
	LoseInventory(3);
	SetCharacterView(MAIN, 3);
	SetCharacterBaseline(MAIN, 200);
	AnimateCharacterEx(MAIN, 5, 4, 0, 0, 1);
	SetCharacterBaseline(MAIN, 0);  
	ObjectOn(5); 
	SetCharacterTransparency(MAIN, 100);
	Wait(10);
	ObjectOn(9);
	character[MOM].x= 80;
	character[MOM].y= 140;
	character[MOM].room= 1;
	SetCharacterTransparency(MOM, 0);
	MoveCharacterBlocking(MOM, 138, 148, 1);
	DisplaySpeech(MOM, "Not so fast there buster.");
	MoveCharacterBlocking(MOM, 302, 97, 0);
	Wait(10);
	character[MOM].loop= 4;
	character[MOM].frame= 1;
	Wait(15);
	ObjectOff(5);
	character[MOM].loop= 2;
	character[MOM].frame= 0;
	Wait(10);
	DisplaySpeechBackground(MAIN, "My cranium!");
	ShakeScreen(1);
	ReleaseViewport();
	NewRoom(2);
}

else {
  	DisplaySpeech(MAIN, "I need to get the window open first.");
}
}

function object9_a() {
  // script for object9: Interact with object
  
if(ACTION== CLOSE) {
  	MoveCharacterBlocking(MAIN, 139, 142, 0);
      FaceLocation(MAIN, 0, 72);
      Wait(10);
      SetCharacterView(MAIN, 2);
      AnimateCharacter(MAIN, 5, 10, 0);
      PlaySound(1);
      Wait(10);
      ObjectOff(9);
      ReleaseCharacterView(MAIN);
      character[MAIN].loop= 1;
}

else if(ACTION== USE) {
  	MoveCharacterBlocking(MAIN, 62, 150, 0);
      FaceLocation(MAIN, 0, 137);
  	NewRoomEx(11, 183, 87);
}

else if(ACTION== OPEN) {
  	FaceLocation(MAIN, 0, 137);
      DisplaySpeech(MAIN, "It's already open.");
}
}

function hotspot1_b() {
  // script for hotspot1: Look at hotspot

MoveCharacterBlocking(MAIN, 201, 109, 0);
character[MAIN].loop= 2;
Wait(10);

DisplaySpeechNoBlock(MAIN, "I believe it's a king size.", 1);


}

function hotspot4_a() {
  // script for hotspot4: Look at hotspot

FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);

DisplaySpeechNoBlock(MAIN, "That's a choice setup.", 1);

}

function hotspot4_b() {
  // script for hotspot4: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);

DisplaySpeechNoBlock(MAIN, "I don't want to lug that around.", 1);
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "They fill up some empty space on the wall.", 1);
}

function hotspot8_a() {
  // script for hotspot8: Look at hotspot

FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "The captain's seat.", 1);
}

function hotspot5_b() {
  // script for hotspot5: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I've kind of got them in order...", 1);

}

function object2_b() {
  // script for object2: Look at object

MoveCharacterBlocking(MAIN, 200, 97, 0);
character[MAIN].loop= 2;
Wait(10);

DisplaySpeechNoBlock(MAIN, "It's only open a crack.", 1);  
DisplaySpeechNoBlock(MAIN, "The window is still stuck in the frame.", 2);
}

function object9_b() {
  // script for object9: Look at object
  
DisplaySpeech(MAIN, "There's the hallway.");
}

function object8_b() {
  // script for object8: Look at object
  
DisplaySpeech(MAIN, "Ok, I've completely stripped the bed down now.");
}

function object8_c() {
  // script for object8: Pick up object
  
DisplaySpeech(MAIN, "I think this bed has given me enough.");
}

function object0_a() {
  // script for object0: Look at object

FaceLocation(MAIN, 243, 43);
Wait(10);
  
DisplaySpeechNoBlock(MAIN, "I'm not sure I've ever opened it...", 1);
DisplaySpeechNoBlock(MAIN, "Why disrupt the wonderful musk cultivating in here?", 2);
}

function object0_b() {
  // script for object0: Interact object

if(ACTION== OPEN || ACTION== USE) {  

	MoveCharacterBlocking(MAIN, 232, 97, 0);
	character[MAIN].loop= 3;
	Wait(10);
	
	if(GetGlobalInt(35)== 0) {				// hasn't tried opening window
	
		Wait(10);
		GUIOff(2);
		StartCutscene(5);
		Wait(20);
		DisplaySpeech(MAIN, "I wonder if this still opens...", 1);
	}
	
	Wait(30);
	character[MAIN].loop= 7;
	character[MAIN].frame= 1;
	PlaySound(19);
	int temp= DisplaySpeechBackground(MAIN, "Oooomph.");
	Wait(10);
	
	while(character[MAIN].y > 94) {				// push
	
		character[MAIN].y -= 1;
		Wait(1);
	}
	
	while(character[MAIN].y < 97) {
	
		character[MAIN].y += 1;
		Wait(1);
	}
	
	Wait(10);
	
	if(IsOverlayValid(temp)) {
	
		RemoveOverlay(temp);
	}
	
	Wait(30);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
	
	if(GetGlobalInt(35)== 0) {				// hasn't tried opening window
	  
		Wait(30);
		character[MAIN].loop= 7;
		character[MAIN].frame= 1;
		Wait(10);
		PlaySound(19);
		temp= DisplaySpeechBackground(MAIN, "Have at you!");
		Wait(10);
		while(character[MAIN].y > 94) {				// push

			character[MAIN].y -= 1;
			Wait(1);
		}
		
		while(character[MAIN].y < 97) {
		
			character[MAIN].y += 1;
			Wait(1);
		}
	
		character[MAIN].loop= 3;
		character[MAIN].frame= 0;
		Wait(10);
		
		if(IsOverlayValid(temp)) {
		
			RemoveOverlay(temp);
		}

		Wait(30);
		character[MAIN].loop= 1;
		Wait(10);
	}
	
	Wait(10);
	DisplaySpeech(MAIN, "It's no use...");
	MoveCharacterBlocking(MAIN, 196, 103, 0);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... the lock is shut tight with dirt and grime.", 1);
	Wait(10);
	
	if(GetGlobalInt(35)== 0) {
	
		Wait(30);
		SetGlobalInt(35, 1);				// set state to having tried to open the window
		GUIOn(2);
		EndCutscene();
	}
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 244, 43);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function object4_a() {
  // script for object4: Look at object

MoveCharacterBlocking(MAIN, 217, 119, 0);
character[MAIN].loop= 2;
Wait(10);
  
DisplaySpeechNoBlock(MAIN, "It portrays a pitched space battle.", 1);
}

function object4_b() {
  // script for object4: Pick up object
  
MoveCharacterBlocking(MAIN, 217, 119, 0);
character[MAIN].loop= 2;
Wait(10);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(15);
PlaySound(4);
ObjectOff(4);
AddInventory(1); 
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(10);
DisplaySpeechNoBlock(MAIN, "... I'm afraid this battlestation is fully operational!", 1);
}

function object2_c() {
  // script for object2: Use inventory on object
  
MoveCharacterBlocking(MAIN, 189, 100, 0);
character[MAIN].loop= 2;
Wait(30);

SetMusicMasterVolume(30);
PlayMusic(5);
Wait(30);

GUIOff(2);
StartCutscene(5);

Wait(40);
DisplaySpeech(MAIN, "Dexcalibur might not have enough POWER to pry open this window...");
Wait(10);
SetCharacterView(MAIN, 75);				// look right
SetCharacterSpeechView(MAIN, 71);
character[MAIN].loop= 2;
Wait(10);
DisplaySpeech(MAIN, "... I might just have to provide a little of my own.");
SetCharacterView(MAIN, 75);
Wait(10);
ReleaseCharacterView(MAIN);				// normal
SetCharacterSpeechView(MAIN, 2);
character[MAIN].loop= 0;
int temp= DisplaySpeechBackground(MAIN, "I don't play a DARK PALADDIN with 18-DOUBLE-ODD strength for nothing!");
SetCharacterView(MAIN, 69);
AnimateCharacter(MAIN, character[MAIN].loop, 5, 1);
Wait(60);
SetCharacterView(MAIN, 2);
AnimateCharacter(MAIN, character[MAIN].loop, 5, 1);

while(IsOverlayValid(temp)) {

	Wait(1);
}

ReleaseCharacterView(MAIN);
Wait(10);
character[MAIN].loop= 2;
Wait(10);
SetCharacterView(MAIN, 3);
character[MAIN].x= 223;
character[MAIN].y= 105;
AnimateCharacterEx(MAIN, 0, 7, 0, 0, 1);
character[MAIN].x= 189;
character[MAIN].y= 100;
ObjectOn(1);
ObjectOff(2);
WindowFree= 1;
ReleaseCharacterView(MAIN);
character[MAIN].loop= 2;
SetCharacterView(MAIN, 74);				// bored talk
SetCharacterSpeechView(MAIN, 67);
Wait(20);
DisplaySpeech(MAIN, "Thank you Dexcalibur, but that was all DARK PALADDIN on that one...");
Wait(10);
ReleaseCharacterView(MAIN);				// normal
SetCharacterSpeechView(MAIN, 2);
MoveCharacterBlocking(MAIN, 247, 99, 0);
character[MAIN].loop= 3;
Wait(10);
DisplaySpeechNoBlock(MAIN, "... now if I could just figure out how to get down from here?", 1);
Wait(30);

SetMusicMasterVolume(90);
PlayMusic(1);
PlayMusicQueued(2);
PlayMusicQueued(3);
Wait(30);

GUIOn(2);
EndCutscene();
}


function room_b() {
  // script for room: Player enters screen (before fadein)



SetObjectView(9, 52);					// animate monitor
AnimateObject(9, 14, 3, 1);
  
if(GetGlobalInt(12)== 0) {					// first time he enters screen, but needs to be before fade in
	
	PlayMusic(1);
	PlayMusicQueued(2);
	PlayMusicQueued(3);
	SetMusicMasterVolume(90);
	
	StartCutscene(5);
	GUIOff(2);
	
	SetScreenTransition(TRANSITION_CROSSFADE);
	SetCharacterView(MAIN, 3);
	SetCharacterIdle(MAIN, 61, 4);				// revert from intro
	character[MAIN].talkview= 1;
	character[MAIN].x= 264;
	character[MAIN].y= 112;
	SetGlobalInt(5, 5);					// in bedroom
	AnimateCharacter(MAIN, 2, 10, 1);
	
	SetObjectGraphic(0, 968);				// window is dirty
	SetTimer(1, 1500);

	character[MOM].room= 1;					// place mom
	character[MOM].x= -40;
	character[MOM].y= 110;
	SetCharacterIdle(MOM, 6, 4);
}

else if(GetGlobalInt(12)== 1) {					// still in the intro

	SetCharacterTransparency(MAIN, 0);			// make him visible before screen fade in from living room
	character[MOM].room= 1;
	SetMusicMasterVolume(90);
}

else {

	character[MAIN].x= 0;
	character[MAIN].y= 110;
	character[MAIN].loop= 2;
}

if(IsObjectOn(6)) {						// if door is on, disable doorway hotspot

	DisableHotspot(10);
}

else {

	EnableHotspot(10);
}
}



function hotspot10_a() {
  // script for hotspot10: Interact hotspot

if(ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 38, 111, 0);
	MoveCharacterBlocking(MAIN, 2, 110, 1);
	NewRoom(11);
}

else if(ACTION== CLOSE) {
  
	MoveCharacterBlocking(MAIN, 70, 112, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(1);
	ObjectOn(6);
	DisableHotspot(10);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

else if(ACTION== OPEN) {
  
	FaceLocation(MAIN, 36, 108);
	Wait(10);
	DisplaySpeech(MAIN, "It's already open.");
}
}

function object3_a() {
  // script for object3: Pick up object
  
MoveCharacterBlocking(MAIN, 217, 119, 0);
character[MAIN].loop= 2;
Wait(20);
StartCutscene(5);
GUIOff(2);

Wait(40);
DisplaySpeech(MAIN, "... I haven't changed my sheets since...");
Wait(40);
AnimateCharacter(MAIN, 11, 0, 0);
Wait(80);
character[MAIN].loop= 11;
DisplaySpeech(MAIN, "... since...");
character[MAIN].frame= 1;
Wait(80);
character[MAIN].frame= 0;
Wait(40);
character[MAIN].loop= 2;
Wait(20);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(10);
PlaySound(4);
ObjectOff(3);
AddInventory(2);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
DisplaySpeechNoBlock(MAIN, "... better not to think about it.", 1);

GUIOn(2);
EndCutscene();
}

function object6_c() {
  // script for object6: Interact object
  
if(ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 70, 112, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(0);
	ObjectOff(6);
	EnableHotspot(10);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	MoveCharacterBlocking(MAIN, 45, 112, 1);
	NewRoom(11);
}

if(ACTION== OPEN) {
  
	MoveCharacterBlocking(MAIN, 70, 112, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(0);
	ObjectOff(6);
	EnableHotspot(10);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

if(ACTION== CLOSE) {
  
	FaceLocation(MAIN, 50, 112);
	Wait(10);
	DisplaySpeech(MAIN, "It's already closed.");
}
}

function object0_d() {
  // script for object0: Use inventory on object
  
MoveCharacterBlocking(MAIN, 225, 98, 0);
character[MAIN].loop= 3;
SetTimer(1, -1);					// disable window idle 
Wait(20);
StartCutscene(5);
GUIOff(2);

Wait(40);
DisplaySpeech(MAIN, "This should get that dirt and grime off the lock...");
Wait(10);
character[MAIN].loop= 7;
character[MAIN].frame= 1;
PlaySound(39);
Wait(40);
SetObjectGraphic(0, 100);
character[MAIN].loop= 3;
character[MAIN].frame= 0;
DisplaySpeech(MAIN, "... and now the window should...");
Wait(10);
character[MAIN].loop= 7;
character[MAIN].frame= 1;
Wait(20);
PlaySound(19);
DisplaySpeechBackground(MAIN, "OOF");

while(character[MAIN].y> 93) {

	character[MAIN].y--;
	Wait(1);
}

while(character[MAIN].y< 98) {

	character[MAIN].y++;
	Wait(1);
}

Wait(30);
character[MAIN].loop= 3;
character[MAIN].frame= 0;
DisplaySpeech(MAIN, "... with just a little push...", 1);
Wait(10);
character[MAIN].loop= 7;
character[MAIN].frame= 1;
Wait(50);
PlaySound(19);
DisplaySpeechBackground(MAIN, "UUURRRRRGGGH!");

while(character[MAIN].y> 88) {

	character[MAIN].y--;
	Wait(1);
}

PlaySound(9);
ObjectOff(0);
ObjectOn(2);
Wait(10);

while(character[MAIN].y< 98) {

	character[MAIN].y+= 2;
	Wait(1);
}

character[MAIN].loop= 3;
character[MAIN].frame= 0;
SetCharacterView(MAIN, 72);
SetCharacterSpeechView(MAIN, 60);
Wait(20);
DisplaySpeech(MAIN, "... only open a crack.");
Wait(10);
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 2);
MoveCharacterBlocking(MAIN, 265, 98, 0);
character[MAIN].loop= 3;
Wait(10);
DisplaySpeech(MAIN, "I can't seem to open it any further...");
Wait(10);
DisplaySpeechNoBlock(MAIN, "... it's stuck in the frame!", 1);
ReleaseCharacterView(MAIN);
MoveCharacterBlocking(MAIN, 225, 98, 0);
SetCharacterView(MAIN, 2);
AnimateCharacter(MAIN, 1, 5, 1);
Wait(20);

GUIOn(2);
EndCutscene();
}


function object8_d() {
  // script for object8: Look at object
  
MoveCharacterBlocking(MAIN, 123, 107, 0);
character[MAIN].loop= 1;
Wait(10);

if(GetGlobalInt(15)== 0) {			// if Mom's put his dice away and he hasn't already picked them up

	DisplaySpeechNoBlock(MAIN, "My old dice are in there.", 1);
}

else {
 
	DisplaySpeechNoBlock(MAIN, "It's empty.", 1);
}
}

function object8_e() {
  // script for object8: Pick up object
  
MoveCharacterBlocking(MAIN, 123, 107, 0);
character[MAIN].loop= 1;
Wait(10);

if(GetGlobalInt(15)== 0) {						// if we aren't in beginning of the game

	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(4);
	AddInventory(21);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	SetGlobalInt(15, 1);						// dice are picked up
}

else {

	DisplaySpeechNoBlock(MAIN, "It's empty.", 1);
}

}

function object8_f() {
  // script for object8: Interact object
  
if(ACTION== CLOSE || ACTION== PUSH || ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 123, 107, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(7);
	ObjectOff(8);
	Wait(10);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

else if(ACTION== OPEN || ACTION== PULL) {

	FaceLocation(MAIN, 100, 76);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}
}

function hotspot2_a() {
  // script for hotspot2: Interact hotspot
  
if(ACTION== OPEN || ACTION== USE || ACTION== PULL) {
	
	if(IsObjectOn(8)) {
	
		FaceLocation(MAIN, 100, 76);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
	}
	
	else {
	
		MoveCharacterBlocking(MAIN, 123, 107, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		PlaySound(6);
		ObjectOn(8);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
		Wait(20);
	
		if(GetGlobalInt(15)== 0) {
		  
			DisplaySpeechNoBlock(MAIN, "My old dice are in here!", 1);
		}
	}
}

else if(ACTION== CLOSE || ACTION== PUSH) {

	FaceLocation(MAIN, 100, 76);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}


function room_a() {
  // script for room: Repeatedly execute

CheckSpeech();

if(IsTimerExpired(1)) {

	if(IsObjectOn(0)) {					// if window hasn't been opened
	
		SetObjectView(0, 52);
		AnimateObject(0, 15, 5, 2);			// run butterfly idle
		SetTimer(1, 1000);
	}
}

}


function hotspot3_a() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);
  
DisplaySpeechNoBlock(MAIN, "Nothing too interesting there.", 1);
}

function hotspot2_b() {
  // script for hotspot2: Look at hotspot
  
MoveCharacterBlocking(MAIN, 101, 75, 0);
character[MAIN].loop= 3;
Wait(10);

if(IsObjectOn(8)) {

	DisplaySpeechNoBlock(MAIN, "I don't keep anything interesting in the others.", 1);
}

else {

	DisplaySpeechNoBlock(MAIN, "I'm not sure what's in those.", 1);
}
}

function hotspot3_b() {
  // script for hotspot3: Pick up hotspot
  
MoveCharacterBlocking(MAIN, 75, 131, 0);
character[MAIN].loop= 0;
Wait(10);

DisplaySpeechNoBlock(MAIN, "I don't think I'll need anything from there.", 1);
}

function hotspot5_a() {
  // script for hotspot5: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);

DisplaySpeechNoBlock(MAIN, "I'm letting those appreciate...", 1);
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);

DisplaySpeechNoBlock(MAIN, "I've got the biggest tower in the neighborhood.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);

DisplaySpeechNoBlock(MAIN, "It leads out to the hall.", 1);
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);

DisplaySpeechNoBlock(MAIN, "I don't keep anything important that far away from my computer.", 1);
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
MoveCharacterBlocking(MAIN, 178, 97, 0);
character[MAIN].loop= 1;
Wait(10);

DisplaySpeechNoBlock(MAIN, "It's empty.", 1);
}

function object3_b() {
  // script for object3: Look at object
  
MoveCharacterBlocking(MAIN, 266, 119, 0);
character[MAIN].loop= 3;
Wait(10);

DisplaySpeechNoBlock(MAIN, "I guess it's been a while since I changed sheets.", 1);
}

function object6_d() {
  // script for object6: Look at object
  
MoveCharacterBlocking(MAIN, 72, 114, 0);
character[MAIN].loop= 1;
Wait(10);

DisplaySpeechNoBlock(MAIN, "It leads out to the hallway.", 1);
}

function object7_d() {
  // script for object7: Look at object
  
if(character[MAIN].x< 220) {
  
	MoveCharacterBlocking(MAIN, 220, 125, 0);
	character[MAIN].loop= 2;
	Wait(10);
}

else {

	FaceLocation(MAIN, 320, 72);
}

DisplaySpeechNoBlock(MAIN, "That's an impressive face print and drool stain combination...", 1);
DisplaySpeechNoBlock(MAIN, "Even by my standards.", 2);
DisplaySpeechNoBlock(MAIN, "I hope that's dry by tonight.", 3);
}

function object2_a() {
  // script for object2: Interact object
  
if(ACTION== OPEN || ACTION== USE) {  

	MoveCharacterBlocking(MAIN, 232, 97, 0);
	character[MAIN].loop= 3;
	Wait(10);
	character[MAIN].loop= 7;
	character[MAIN].frame= 1;
	DisplaySpeechNoBlock(MAIN, "Oooomph.", 1);
	Wait(40);
	ReleaseCharacterView(MAIN);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
	Wait(20);
	DisplaySpeechNoBlock(MAIN, "It's no use.", 2);
	Wait(20);
	GUIOn(2);
	DisplaySpeechNoBlock(MAIN, "The lock is shut tight with dirt and grime.", 3);
	MoveCharacterBlocking(MAIN, 196, 103, 0);
}

else if(ACTION== PUSH) {

	MoveCharacterBlocking(MAIN, 232, 97, 0);
	character[MAIN].loop= 3;
	Wait(10);
	character[MAIN].loop= 7;
	character[MAIN].frame= 1;
	DisplaySpeechNoBlock(MAIN, "Oooomph.", 1);
	Wait(40);
	ReleaseCharacterView(MAIN);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
	Wait(20);
	DisplaySpeechNoBlock(MAIN, "It's no use.", 2);
	Wait(20);
	GUIOn(2);
}

}

function object1_a() {
  // script for object1: Interact object
  
if(ACTION== USE) {

	FaceLocation(MAIN, 243, 43);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I can't just jump out the window.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 243, 43);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's alread open.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 243, 43);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "Not after I spent all that time getting it open!", 1);
	DisplaySpeechNoBlock(MAIN, "This room could use a little fresh air anyways.", 2);
}
}

function object0_c() {
  // script for object0: Pick up object
  
FaceLocation(MAIN, 244, 43);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It should only open and close.", 1);
}

function object3_c() {
  // script for object3: Interact object
  
if(ACTION== USE) {

	FaceLocation(MAIN, 283, 91);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I just got up.", 1);
}

else if(ACTION== PULL) {
	
	MoveCharacterBlocking(MAIN, 217, 119, 0);
	character[MAIN].loop= 2;
	Wait(20);
	StartCutscene(5);
	GUIOff(2);
	
	Wait(40);
	DisplaySpeech(MAIN, "I haven't changed my sheets since...");
	Wait(40);
	AnimateCharacter(MAIN, 11, 0, 0);
	Wait(80);
	character[MAIN].loop= 11;
	DisplaySpeech(MAIN, "... since...");
	character[MAIN].frame= 1;
	Wait(80);
	character[MAIN].frame= 0;
	Wait(40);
	character[MAIN].loop= 2;
	Wait(20);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(4);
	ObjectOff(3);
	AddInventory(2);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	DisplaySpeechNoBlock(MAIN, "... better not to think about it.", 1);
	
	GUIOn(2);
	EndCutscene();
}
}


function hotspot1_c() {
  // script for hotspot1: Use inventory on hotspot

if(IsObjectOn(1)) {
  
	FaceLocation(MAIN, 218, 84);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "That wouldn't be long enough.", 1);
}

else {

	FaceLocation(MAIN, 218, 84);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't feel like making my bed.", 1);
}
}

function hotspot1_d() {
  // script for hotspot1: Use inventory on hotspot
  
if(IsObjectOn(1)) {
  
	FaceLocation(MAIN, 218, 84);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "That wouldn't be long enough.", 1);
}

else {

	FaceLocation(MAIN, 218, 84);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't feel like making my bed.", 1);
}
}

function hotspot6_b() {
  // script for hotspot6: Interact hotspot
  
if(ACTION== USE) {
 
	FaceLocation(MAIN, 85, 60);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have time to get on ol' Bessie right now.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 85, 60);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "She's already been tweaked and optimized...", 1);
	DisplaySpeechNoBlock(MAIN, "... for maximum performance and stealth!", 2);
}
}

function hotspot6_c() {
  // script for hotspot6: Pick up hotspot
  
FaceLocation(MAIN, 85, 60);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's not a laptop.", 1);
}

function hotspot2_c() {
  // script for hotspot2: Pick up hotspot
  
FaceLocation(MAIN, 101, 75);
Wait(10);
DisplaySpeechNoBlock(MAIN, "There's nothing in important in those.", 1);
}

function object7_e() {
  // script for object7: Pick up object
  
FaceLocation(MAIN, 320, 72);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't know...", 1);
DisplaySpeechNoBlock(MAIN, "... that pillow looks pretty used.", 2);
}



function object0_e() {
  // script for object0: Use inventory on object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't necessarily need to batter my way through...", 1);
}

function object0_f() {
  // script for object0: Use inventory on object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's not going to help me open the window.", 1);
}

function object0_g() {
  // script for object0: Use inventory on object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "This won't help me open the window.", 1);
}

function object0_h() {
  // script for object0: Use inventory on object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "This won't help me open the window.", 1);
}


function object2_d() {
  // script for object2: Use inventory on object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I think I cleaned it up enough already.", 1);
}

function object1_b() {
  // script for object1: Use inventory on object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "There's no place to tie it on the window sill.", 1);
}


function hotspot4_c() {
  // script for hotspot4: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't feel like listening to anything.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have a CD in there right now.", 1);
}

else if(ACTION== CLOSE) {


	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function object9_c() {
  // script for object9: Look at object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);

DisplaySpeechNoBlock(MAIN, "I don't think it can help me this time.", 1);
}

function object9_d() {
  // script for object9: Interact object
  
if(ACTION== USE) {
 
	FaceLocation(MAIN, 85, 60);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have time to get on ol' Bessie right now...", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 85, 60);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "She's already been tweaked and optimized...", 1);
	DisplaySpeechNoBlock(MAIN, "... for maximum performance and stealth!", 2);
}
}

function object9_e() {
  // script for object9: Pick up object
  
FaceLocation(MAIN, 85, 60);
Wait(10);
DisplaySpeech(MAIN, "It's not a laptop.", 1);
}

function object4_c() {
  // script for object4: Interact object
  
if(ACTION== PULL) {

	MoveCharacterBlocking(MAIN, 217, 119, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(15);
	PlaySound(4);
	ObjectOff(4);
	AddInventory(1); 
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... I'm afraid this battlestation is fully operational!", 1);
}

else if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeech(MAIN, "... I can't go back to sleep now!");
}
}

function hotspot8_b() {
  // script for hotspot8: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have time to sit down at the computer now.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I like that where it is.", 1);
}
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot
  
if(ACTION== USE || ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm already dressed.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "All the drawers are closed.", 1);
}
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "They're loud enough for me...", 1);
}

function hotspot12_b() {
  // script for hotspot12: Interact hotspot
  
if(ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't want to take those apart.", 1);
}
}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "The harsh, volcanic landscape of primordial Earth.", 1);
}

function hotspot13_b() {
  // script for hotspot13: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't want to take it down.", 1);
}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "A small island.", 1);
}

function hotspot14_b() {
  // script for hotspot14: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't want to take it down.", 1);
}

function hotspot15_a() {
  // script for hotspot15: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);

DisplaySpeechNoBlock(MAIN, "I don't think it can help me this time.", 1);

}

function hotspot15_b() {
  // script for hotspot15: Interact hotspot
  
if(ACTION== USE) {
 
	FaceLocation(MAIN, 85, 60);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have time to get on ol' Bessie right now...", 1);
}
}

function hotspot15_c() {
  // script for hotspot15: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's too heavy to carry around.", 1);
}

function hotspot16_a() {
  // script for hotspot16: Look at hotspot
  
FaceLocation(MAIN, mouse.x, 113);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't turn it on much.", 1);
}

function hotspot16_b() {
  // script for hotspot16: Interact hotspot

FaceLocation(MAIN, mouse.x, 113);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's bright enough in here.", 1);
}

function hotspot16_c() {
  // script for hotspot16: Use inventory on hotspot
  
FaceLocation(MAIN, mouse.x, 113);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's too high up for me to tie this to.", 1);
}

function hotspot17_a() {
  // script for hotspot17: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's just big enough for my computer to sit on.", 1);
}

function hotspot17_b() {
  // script for hotspot17: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "There's nothing I need to do at my desk right now.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I should try the drawers...", 1);
}
}

function hotspot17_c() {
  // script for hotspot17: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "There's nothing interesting on it.", 1);
}

function hotspot18_a() {
  // script for hotspot18: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's just some of the science fiction I've read!", 1);
}

function hotspot18_b() {
  // script for hotspot18: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't have time to start on a book.", 1);
}

function hotspot18_c() {
  // script for hotspot18: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have time to start on a book.", 1);
}
}

function hotspot19_a() {
  // script for hotspot19: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's a half-empty soda can.", 1);
}

function hotspot19_b() {
  // script for hotspot19: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'll throw it away later.", 1);
}

function hotspot19_c() {
  // script for hotspot19: Interact hotspot

if(ACTION== USE) {
	  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not drinking it anymore.", 1);
}
}

function hotspot7_b() {
  // script for hotspot7: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I like them where they are.", 1);
}

function hotspot12_c() {
  // script for hotspot12: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I won't need to take those with me.", 1);
}

$$$!$$$ ROOM room10.crm
$$$!$$$ RS
// text script for room

import int GrandmaIdle;					// flag while grandma is idle
import int GrandmaIdleSpeech;
int GrandmaIdleCounter;

function object0_a() {
  // script for object0: Interact with object
  
if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 55, 107, 0);
	MoveCharacterBlocking(MAIN, 45, 107, 1);
	NewRoom(3);
}

else if(ACTION== OPEN || ACTION== PUSH) {

	FaceLocation(MAIN, 37, 60);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}

else if(ACTION== CLOSE || ACTION== PULL) {

	FaceLocation(MAIN, 37, 60);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's held open by the doorstop.", 1);
}
}


function room_a() {
  // script for room: Player enters screen (after fadein)

/*** CUTSCENES **************************************************************************/

if(GetGlobalInt(6)== 4) {							// rufus comes in the kitchen

	MoveCharacterBlocking(CAT, 37, 127, 1);
	Wait(20);
	character[CAT].loop= 2;
	Wait(40);
	MoveCharacterBlocking(CAT, 148, 110, 0);
	SetCharacterBaseline(CAT, 200);
	character[CAT].x= 149;
	character[CAT].y= 92;
	character[CAT].loop= 1;
	Wait(10);
	character[GRANDMA].loop= 1;
	Wait(20);
	SetCharacterView(GRANDMA, 129);
	SetCharacterSpeechView(GRANDMA, 130);
	SetCharacterIdle(GRANDMA, 131, 4);
	Wait(10);
	PlayMusicQueued(7);
	Wait(10);
	DisplaySpeech(GRANDMA, "... Rufus!");
	Wait(10);
	character[CAT].loop= 0;
	Wait(10);
	character[CAT].loop= 2;
	Wait(40);
	DisplaySpeech(GRANDMA, "We meet... again.");
	Wait(10);
	DisplayThought(CAT, "Meeow.");
	Wait(20);
	NewRoom(3);
}

else if(GetGlobalInt(36)== 2) {						// cutting back from shower
	
	Wait(20);
	DisplaySpeechNoBlock(MAIN, "Impressive.", 1);
	Wait(20);
	SetGlobalInt(36, 3);
	
	GUIOn(2);
	EndCutscene();
}


/*** NORMAL EVENTS ****************************************************************************/

else {
	  
	if(GetGlobalInt(17)== 1) {					// if washing machine on
	
		PlayAmbientSound(1, 36, 100, 302, 94);
	}
	 

	
	if(GetGlobalInt(5)== 1) {					// from livingroom

		MoveCharacterBlocking(MAIN, 34, 123, 1);
		MoveCharacter(MAIN, 45, 127);
		Wait(10);
		
		if(GetGlobalInt(2)!= 2) {				// door animation
		  
			PlaySound(30);
			ObjectOff(5);
			ObjectOn(0);
			Wait(15);
			ObjectOff(0);
			EnableHotspot(1);
		}
		
		SetGlobalInt(5, 8);
	}


/*** CUTSCENES *********************************************************************************/


	if(GetGlobalInt(66)== 0 && GetGlobalInt(32)== 0) {		// if he hasn't talked to grandma yet
	
		MoveCharacter(MAIN, 65, 135);
		GUIOff(2);
		StartCutscene(5);
		
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(30);
		ReleaseCharacterView(GRANDMA);
		character[GRANDMA].loop= 5;
		Wait(10);
		character[GRANDMA].loop= 1;
		SetCharacterBaseline(GRANDMA, 126);		// she's now behind the counter normally
		Wait(10);
		SetCharacterView(GRANDMA, 125);
		Wait(20);
		DisplaySpeech(GRANDMA, "Look who woke up this morning!");
		SetCharacterView(MAIN, 74);
		SetCharacterSpeechView(MAIN, 67);
		Wait(10);
		DisplaySpeech(MAIN, "Hey Grandma.");
		SetCharacterView(MAIN, 74);
		Wait(10);
		SetCharacterView(GRANDMA, 127);
		SetCharacterSpeechView(GRANDMA, 128);
		DisplaySpeech(GRANDMA, "You can nose around some...");
		ReleaseCharacterView(GRANDMA);
		SetCharacterSpeechView(GRANDMA, 43);
		Wait(10);
		SetCharacterView(MAIN, 74);
		SetCharacterSpeechView(MAIN, 67);
		DisplaySpeech(GRANDMA, "... but don't start getting into things!");
		Wait(30);
		DisplaySpeech(GRANDMA, "You'll only spoil your appetite!");
		Wait(10);
		SetCharacterView(GRANDMA, 42);
		SetCharacterBaseline(GRANDMA, 132);				// set baseline back for chopping animation
		AnimateCharacterEx(GRANDMA, 4, 5, 0, 0, 1);
		AnimateCharacter(GRANDMA, 5, 5, 1);				// animate her cutting
		Wait(10);
		SetTimer(2, 500);
		SetGlobalInt(66, 1);						// talked to her once
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
		SetMusicMasterVolume(90);
		Wait(30);
		
		GUIOn(2);
		EndCutscene();				
	}
		
	if(GetGlobalInt(52)== 1 && GetGlobalInt(30)== 2 && GetGlobalInt(32)== 0) {	// if she's making brownies (set in thurston dialog)
	
		if(character[MAIN].inv[17]> 0) {				// if he's already gotten grease on the sponge
		  
			Wait(10);
			SetMusicMasterVolume(30);
			Wait(30);
			character[GRANDMA].loop= 0;
			Wait(10);
			character[GRANDMA].loop= 1;
			Wait(10);
			DisplaySpeech(GRANDMA, "Oh no you don't!");
			Wait(20);
			DisplaySpeech(GRANDMA, "... I know you're coming for the brownies...");
			DisplaySpeech(GRANDMA, "... and they're not ready yet, so out, out, OUT!");
			Wait(10);
			SetGlobalInt(80, 0);
			ProcessClick(50, 50, 2);
			SetGlobalInt(52, 2);					// flag so he'll say something in livingroom, then reset back to 1
			DisplaySpeechBackground(MAIN, "... Ok! Ok!");
			Wait(30);
		}
	}
}
}


function room_b() {
  // script for room: Player enters screen (before fadein)


/*** CUTSCENES **************************************************************************/

if(GetGlobalInt(6)== 4) {						// rufus cutscene
		
	ReleaseCharacterView(GRANDMA);
	character[GRANDMA].x= 283;
	character[GRANDMA].y= 129;
	character[GRANDMA].loop= 2;
	ObjectOff(7);					// turn off cutting board with veggies
	ObjectOn(3);					// turn on normal cutting board
  
	character[CAT].x= 34;
	character[CAT].y= 106;
	character[CAT].loop= 0;
	ObjectOn(6);							// door cracked
	ObjectOn(1);							// brownies on
	ObjectOn(3);							// cutting board on
	ObjectOff(4);
	SetObjectView(2, 52);						// animate bubbling pot
	AnimateObject(2, 4, 7, 2);					// animate pot
	SetTimer(1, 500);						// timer for pot bubbling animation
}

else if(GetGlobalInt(36)== 2) {						// from shower cutscene
	
	SetCharacterTransparency(MAIN, 0);
	SetTimer(2, 300);					// grandma's idle	
	character[GRANDMA].x= 208;
	character[GRANDMA].y= 121;
	SetCharacterBaseline(GRANDMA, 132);			// so she's ontop of counter
	ReleaseCharacterView(GRANDMA);
	AnimateCharacter(GRANDMA, 5, 5, 1);			// animate her cutting
	GrandmaIdle= 0;
	PlayAmbientSound(1, 36, 100, 302, 94);
}

/*** NORMAL ROOM EVENTS ****************************************************************/

else {
	  
	if(GetGlobalInt(5)== 1) {						// from livingroom
	
		character[MAIN].x= 34;
		character[MAIN].y= 107;
		character[MAIN].loop= 2;
		
		if(GetGlobalInt(2)== 2) {					// if swinging door is propped open
	
			ObjectOn(6);
			ObjectOff(0);
		}
		
		else {
		
			ObjectOn(5);
			ObjectOff(0);
			DisableHotspot(1);
		}

		SetMusicRepeat(1);
		PlayMusic(4);
	}
	
	if(GetGlobalInt(32)== 0) {						// if grandma is in kitchen
	
		if(IsObjectOn(4)== 0) {							// disable door hotspot if its on
		
			ObjectOn(4);
			DisableHotspot(6);
		}
		
		else {
		
			DisableHotspot(6);
		}
	
		if(GetGlobalInt(52)== 0) {					// chopping veggies

			SetTimer(2, 300);					// grandma's idle
			GrandmaIdle= 0;
			character[GRANDMA].x= 208;
			character[GRANDMA].y= 121;
			SetCharacterBaseline(GRANDMA, 132);			// so she's ontop of counter
			ReleaseCharacterView(GRANDMA);
			AnimateCharacter(GRANDMA, 5, 5, 1);			// animate her cutting
			GrandmaIdle= 0;
			EnableHotspot(1);					// turn on random responses
		}

		else if(GetGlobalInt(52)== 1 && GetGlobalInt(30)== 2) {		// if she's making brownies (set in thurston dialog)
		
			if(character[MAIN].inv[17]> 0) {			// not locked out of kitchen without grease on the sponge
			
				ReleaseCharacterView(GRANDMA);
				character[GRANDMA].x= 283;
				character[GRANDMA].y= 129;
				character[GRANDMA].loop= 2;
				ObjectOff(7);					// turn off cutting board with veggies
				ObjectOn(3);					// turn on normal cutting board
				GUIOff(2);
				StartCutscene(5);
				SetTimer(2, 0);
				GrandmaIdle= 0;
				SetMusicMasterVolume(30);
			}
		}
	}
	
	else if(GetGlobalInt(32)== 1) {						// if grandma chased rufus
	  
		ObjectOn(1);							// turn on brownies	
		ObjectOn(3);							// turn on cutting board
		ObjectOff(7);							// turn off special cutting board
		ObjectOff(4);							// door is off
		EnableHotspot(6);
		DisableRegion(1);
		SetGlobalInt(32, 2);						// set state to been in kitchen after rufus chased
		SetTimer(2, 0);
		GrandmaIdle= 0;
	}
	
	SetObjectView(2, 52);							// animate bubbling pot
	AnimateObject(2, 4, 7, 2);						// animate pot
	SetTimer(1, 500);							// timer for pot bubbling animation
}
}

function object6_a() {
  // script for object6: Pick up object

if(character[MAIN].inv[7]== 0) {  				// if he doesn't already have a drink
	MoveCharacterBlocking(MAIN, 175, 75, 0);
	FaceLocation(MAIN, 0, 72);
	Wait(10);
	SetCharacterView(MAIN, 2);
	AnimateCharacter(MAIN, 5, 10, 0);
	Wait(10);
	PlaySound(4);
	ReleaseCharacterView(MAIN);
	character[MAIN].loop= 1;
	AddInventory(7);
	DisplaySpeech(MAIN, "I just took one.");
	DisplaySpeech(MAIN, "Mom loves these things.");
}

else {
  	DisplaySpeech(MAIN, "I already have one.");
}
}

function object4_a() {
  // script for object4: Interact with object
  
if(ACTION== USE || ACTION== OPEN) {
  MoveCharacterBlocking(MAIN, 175, 80, 0);
  FaceLocation(MAIN, 0, 72);
  Wait(10);
  SetCharacterView(MAIN, 2);
  AnimateCharacter(MAIN, 5, 10, 0);
  Wait(10);
  ReleaseCharacterView(MAIN);
  character[MAIN].loop= 1;
  ObjectOn(5);
  ObjectOn(6);
  ObjectOff(4);
}
}

function object5_a() {
  // script for object5: Interact with object
  
if(ACTION== USE || ACTION== CLOSE) {
  
  MoveCharacterBlocking(MAIN, 175, 80, 0);
  FaceLocation(MAIN, 0, 72);
  Wait(10);
  SetCharacterView(MAIN, 2);
  AnimateCharacter(MAIN, 5, 10, 0);
  Wait(10);
  ObjectOn(4);
  ObjectOff(5);
  ObjectOff(6);
  ReleaseCharacterView(MAIN);
}
  
  
}


function object7_a() {
  // script for object7: Pick up object
  
MoveCharacterBlocking(MAIN, 191, 115, 0);
FaceLocation(MAIN, 0, 72);
Wait(10);
SetCharacterView(MAIN, 2);
AnimateCharacter(MAIN, 5, 10, 0);
Wait(10);
ReleaseCharacterView(MAIN);
ObjectOff(7);
AddInventory(9);
DisplaySpeech(MAIN, "To the victor, go the spoils.");

}

function object8_a() {
  // script for object8: Interact with object
  
if(ACTION== OPEN || ACTION== USE) {
  	DisplaySpeech(MAIN, "Err... I don't think I can leave without Mom catching me just yet.");
}

}


function object3_b() {
  // script for object3: Look at object
  
DisplaySpeech(MAIN, "It's still propped open.");
}

function object4_b() {
  // script for object4: Look at object
  
DisplaySpeech(MAIN, "It's covered with random cutesy stuff.");
DisplaySpeech(MAIN, "I try to just get in and get out.");
}

function object5_b() {
  // script for object5: Look at object
  
DisplaySpeech(MAIN, "Looks like it's fully stocked.");
}

function object6_b() {
  // script for object6: Look at object
  
DisplaySpeech(MAIN, "Those are the drinks Mom's hooked on.");
}

function object6_c() {
  // script for object6: Interact with object
  
if(ACTION== USE) {  
	DisplaySpeech(MAIN, "Soda is my beverage of choice.");
}
}

function object7_b() {
  // script for object7: Look at object
  
DisplaySpeech(MAIN, "Mmmmm... those look really good.");
}

function object7_c() {
  // script for object7: Interact with object
  
DisplaySpeech(MAIN, "They're still pretty hot.");
}

function object8_b() {
  // script for object8: Look at object
  
DisplaySpeech(MAIN, "The screendoor leads out the side of the house.");
}

function hotspot1_a() {
  // script for hotspot1: Interact hotspot

if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 55, 107, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(3);
	ObjectOn(0);
	Wait(10);
	MoveCharacterBlocking(MAIN, 45, 107, 1);
	NewRoom(3);
}

else if(ACTION== OPEN || ACTION== PUSH || ACTION== PULL) {

	MoveCharacterBlocking(MAIN, 55, 107, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(3);
	ObjectOn(0);
	Wait(10);
	PlaySound(30);
	Wait(10);
	ObjectOff(0);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 44, 52);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function hotspot4_a() {
  // script for hotspot4: Interact hotspot
  
if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 270, 118, 0);
	
	if(GrandmaIdle> 0) {

		GrandmaIdle= 0;
		if(IsOverlayValid(GrandmaIdleSpeech)) {
		  
			RemoveOverlay(GrandmaIdleSpeech);
		}

		ReleaseCharacterView(GRANDMA);
		character[GRANDMA].loop= 1;
		SetCharacterBaseline(GRANDMA, 126);			// she's now behind the counter normally
	}

	SetTimer(2, 0);
	character[MAIN].loop= 2;
	Wait(10);

	SetMouseBounds(100, 25, 220, 92);
	GUIOn(1);					// dishwasher	
}

else if(ACTION== OPEN) {

	if(GetGlobalInt(17)== 1) {
	
		DisplaySpeechNoBlock(MAIN, "Not while it's running.", 1);
	}
	
	else {
	
		DisplaySpeechNoBlock(MAIN, "It'll get emptied tonight.", 1);
	}
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 303, 98);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function object2_a() {
  // script for object2: Use inventory on object
  
MoveCharacterBlocking(MAIN, 258, 129, 0);
MoveCharacterBlocking(MAIN, 278, 141, 1);
character[MAIN].loop= 2;

if(GrandmaIdle> 0) {

	GrandmaIdle= 0;
	if(IsOverlayValid(GrandmaIdleSpeech)) {
	  
		RemoveOverlay(GrandmaIdleSpeech);
	}

	ReleaseCharacterView(GRANDMA);
	character[GRANDMA].loop= 1;
	SetCharacterBaseline(GRANDMA, 126);			// she's now behind the counter normally
}

SetTimer(2, 0);
Wait(30);

SetMusicMasterVolume(30);
Wait(30);

GUIOff(2);
StartCutscene(5);

Wait(30);
DisplaySpeech(MAIN, "Some grease on a sponge never hurt anybody...");
Wait(10);
SetCharacterView(MAIN, 3);
AnimateCharacterEx(MAIN, 6, 5, 0, 0, 1);
ReleaseCharacterView(MAIN);
LoseInventory(14);
AddInventory(17);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(10);
MoveCharacterBlocking(MAIN, 258, 129, 1);
Wait(30);
SetTimer(2, 100);
SetMusicMasterVolume(90);
Wait(30);

GUIOn(2);
EndCutscene();
}

function object1_a() {
  // script for object1: Pick up object
  
MoveCharacterBlocking(MAIN, 89, 121, 0);
character[MAIN].loop= 2;
Wait(10);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(10);
PlaySound(4);
ObjectOff(1);
AddInventory(9);
Wait(10);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
}

function object3_c() {
  // script for object3: Pick up object
  
MoveCharacterBlocking(MAIN, 218, 133, 0);
character[MAIN].loop= 1;
Wait(10);

character[MAIN].loop= 12;
character[MAIN].frame= 1;
Wait(15);
PlaySound(4);
ObjectOff(3);
AddInventory(34);
character[MAIN].loop= 1;
character[MAIN].frame= 0;

}


function hotspot1_b() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, 44, 57);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's a swinging door that leads into the living room.", 1);
}

function hotspot2_a() {
  // script for hotspot2: Look at hotspot
  
FaceLocation(MAIN, 19, 115);
Wait(10);
DisplaySpeechNoBlock(MAIN, "We really don't have anything good in there.", 1);
}

function hotspot2_b() {
  // script for hotspot2: Interact hotspot
  
if(ACTION== USE || ACTION== OPEN) {

	FaceLocation(MAIN, 19, 115);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not hungry.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 19, 115);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 19, 115);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's too big to move around.", 1);
}
}

function hotspot3_a() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, 252, 69);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Home base in the kitchen.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Interact hotspot
  
if(ACTION== USE || ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 252, 69);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "Why waste the water?", 1);
}
}

function hotspot4_b() {
  // script for hotspot4: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);

if(GetGlobalInt(17)== 0) {

	DisplaySpeechNoBlock(MAIN, "It's not on.", 1);
}

else {

	DisplaySpeechNoBlock(MAIN, "Sounds like it's on.", 1);
}
}

function hotspot5_a() {
  // script for hotspot5: Look at hotspot
  
FaceLocation(MAIN, 308, 116);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Looks like Grandma has something cooking on it.", 1);
}

function hotspot5_b() {
  // script for hotspot5: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 308, 116);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't want to mess around with Grandma's cooking.", 1);
}
}

function object0_b() {
  // script for object0: Look at object
  
FaceLocation(MAIN, 37, 60);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's held open now by the doorstop.", 1);
}

function object1_b() {
  // script for object1: Look at object
  
FaceLocation(MAIN, 116, 84);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Mmmm, those look really good...", 1);
}

function object1_c() {
  // script for object1: Interact object
  
}

function object2_b() {
  // script for object2: Look at object
  
FaceLocation(MAIN, 295, 109);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That must be Grandma's stew.", 1);
DisplaySpeechNoBlock(MAIN, "Sure looks greasy!", 2);
}

function object2_c() {
  // script for object2: Interact object

if(ACTION== USE || ACTION== PUSH || ACTION== PULL) {
  
	FaceLocation(MAIN, 295, 109);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It looks too hot to touch.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 295, 109);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't want to mess around with Grandma's cooking.", 1);
}

}


function object2_d() {
  // script for object2: Pick up object
  
FaceLocation(MAIN, 295, 110);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't want to mess with Grandma's cooking.", 1);

}

function object3_d() {
  // script for object3: Look at object
  
FaceLocation(MAIN, 171, 191);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Grandma must've been cutting something on it earlier.", 1);
}

function object3_e() {
  // script for object3: Interact object

if(ACTION== USE) {
  
	FaceLocation(MAIN, 171, 191);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't need to chop anything up.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 171, 191);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't think that would accomplish anything.", 1);
}
}

function room_c() {
  // script for room: Repeatedly execute
  
CheckSpeech();

if(IsTimerExpired(1)) {

	AnimateObject(2, 4, 7, 2);
	SetTimer(1, 300);
}

if(IsTimerExpired(2)) {

	if(GrandmaIdle== 0) {						// idle
	
		GrandmaIdle= 1;
		AnimateCharacterEx(GRANDMA, 4, 5, 0, 1, 0);
		SetTimer(2, 30);
		
	}
	
	else if(GrandmaIdle== 1) {
	
		GrandmaIdle= 2;							// set idle to stage two
		GrandmaIdleCounter= Random(2);
		
		SetCharacterBaseline(GRANDMA, 126);
		ReleaseCharacterView(GRANDMA);
		character[GRANDMA].loop= 1;
		
		if(GrandmaIdleCounter== 0) {
		
			GrandmaIdleSpeech= DisplaySpeechBackground(GRANDMA, "... This cutting board works great!");
			SetCharacterView(GRANDMA, 43);
			AnimateCharacter(GRANDMA, character[GRANDMA].loop, 5, 1);
		}

		else if(GrandmaIdleCounter== 1) {
		
			GrandmaIdleSpeech= DisplaySpeechBackground(GRANDMA, "... Rufus better not come in here.");
			SetCharacterView(GRANDMA, 130);
			AnimateCharacter(GRANDMA, character[GRANDMA].loop, 5, 1);
		}
		
		else if(GrandmaIdleCounter== 2) {
		
			if(GetGlobalInt(62)== 0) {				// doesn't have coffee drink
		
				GrandmaIdleSpeech= DisplaySpeechBackground(GRANDMA, "... I wish I could make those brownies today!");
				SetCharacterView(GRANDMA, 128);	
				AnimateCharacter(GRANDMA, character[GRANDMA].loop, 5, 1);
			}
	
			else {
			
				GrandmaIdleSpeech= DisplaySpeechBackground(GRANDMA, "I'm making brownies today!");
				SetCharacterView(GRANDMA, 43);
				AnimateCharacter(GRANDMA, character[GRANDMA].loop, 5, 1);
			}
		}


	}
	
	else if(GrandmaIdle== 3) {
	
		AnimateCharacter(GRANDMA, 5, 5, 1);				// animate her cutting
		SetTimer(2, 500);
		GrandmaIdle= 0;
		
	}
}

if(IsOverlayValid(GrandmaIdleSpeech)== 0) {

	if(GrandmaIdle== 2) {
		
		SetCharacterBaseline(GRANDMA, 132);				// so she's ontop of counter
		ReleaseCharacterView(GRANDMA);
		AnimateCharacter(GRANDMA, 4, 5, 0);
		SetTimer(2, 30);
		GrandmaIdle= 3;
	}
}
}

function object4_c() {
  // script for object4: Look at object
  
FaceLocation(MAIN, 162, 59);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It leads outside.", 1);
}

function object4_d() {
  // script for object4: Interact object

if(ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 173, 97, 0);
	character[MAIN].loop= 3;
	Wait(10);
	
	character[MAIN].loop= 7;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(0);
	ObjectOff(4);
	EnableHotspot(6);
	Wait(10);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
	Wait(10);
	MoveCharacterBlocking(MAIN, 170, 88, 1);
	
	FadeOut(5);
	Wait(30);
	StopMusic();
	Wait(30);
	SetScreenTransition(TRANSITION_FADE);
	
	NewRoom(12);
}

else if(ACTION== OPEN) {

	MoveCharacterBlocking(MAIN, 173, 97, 0);
	character[MAIN].loop= 3;
	Wait(10);
	
	character[MAIN].loop= 7;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(0);
	ObjectOff(4);
	EnableHotspot(6);
	Wait(10);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;

}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 162, 59);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function object6_d() {
  // script for object6: Look at object
  
FaceLocation(MAIN, 48, 68);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's held open by the doorstop.", 1);
}

function object6_e() {
  // script for object6: Interact object

if(ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 36, 122, 0);
	character[MAIN].loop= 3;
	Wait(10);
	MoveCharacterBlocking(MAIN, 36, 107, 1);
	NewRoom(3);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 0, 72);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already propped open.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 0, 72);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's being held open by the doorstop.", 1);
}
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot
  
FaceLocation(MAIN, 162, 56);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It leads outside.", 1);
}

function hotspot6_b() {
  // script for hotspot6: Interact hotspot
  
if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 173, 97, 0);
	character[MAIN].loop= 3;
	MoveCharacterBlocking(MAIN, 170, 88, 1);
	
	FadeOut(5);
	Wait(30);
	StopMusic();
	Wait(30);
	SetScreenTransition(TRANSITION_FADE);
	
	NewRoom(12);

}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 162, 56);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);	

}

else if(ACTION== CLOSE) {

	MoveCharacterBlocking(MAIN, 173, 97, 0);
	character[MAIN].loop= 3;
	Wait(10);
	
	character[MAIN].loop= 7;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(1);
	ObjectOn(4);
	DisableHotspot(6);
	Wait(10);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
}
}

function object7_d() {
  // script for object7: Look at object
  
FaceLocation(MAIN, 171, 191);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Grandma's cutting something on it right now.", 1);
}

function object7_e() {
  // script for object7: Interact object
  
if(ACTION== USE) {
  
	FaceLocation(MAIN, 171, 191);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't need to chop anything up.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 171, 191);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't think that would accomplish anything.", 1);
}
}

function object7_f() {
  // script for object7: Pick up object
  
MoveCharacterBlocking(MAIN, 213, 133, 0);
character[MAIN].loop= 1;
Wait(10);
SetTimer(2, -1);						// so idle doesn't interrupt

character[MAIN].loop= 12;
character[MAIN].frame= 1;
Wait(10);

GUIOff(2);
StartCutscene(5);

SetCharacterBaseline(GRANDMA, 128);				// so she's ontop of counter
AnimateCharacter(GRANDMA, 4, 5, 1);				// animate her cutting
SetTimer(2, 500);
DisplaySpeechBackground(GRANDMA, "Watch your fingers!");
Wait(20);
character[MAIN].loop= 1;
character[MAIN].frame= 0;
Wait(20);

GUIOn(2);
EndCutscene();
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's right in the middle of the kitchen.", 1);
}

function hotspot8_a() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Mom has all kinds of recipes in those books.", 1);
}

function hotspot8_b() {
  // script for hotspot8: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'm not doing any cooking today.", 1);
}

function hotspot8_c() {
  // script for hotspot8: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not doing any cooking today.", 1);
}
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's just for decoration.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's really just for decoration.", 1);
}
}

function hotspot9_c() {
  // script for hotspot9: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's just for decoration.", 1);
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "We put our cookbooks on here.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Interact hotspot
  
if(ACTION== PUSH || PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's too heavy for me to move around.", 1);
}
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "The clean dishes dry out there.", 1);
}

function hotspot11_b() {
  // script for hotspot11: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have anything that needs to be dried.", 1);
}
}

function hotspot11_c() {
  // script for hotspot11: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't need it.", 1);
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It looks out over the backyard.", 1);
}


function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "They look nice...", 1);
DisplaySpeechNoBlock(MAIN, "... I guess...", 2);
}

function hotspot13_b() {
  // script for hotspot13: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "They're better off in the sun.", 1);
}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It never really seems to do anything...", 1);
}

function hotspot14_b() {
  // script for hotspot14: Interact hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't need to mess with that.", 1);
}

function hotspot15_a() {
  // script for hotspot15: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Lot's of drawers in here.", 1);
}

function hotspot15_b() {
  // script for hotspot15: Interact hotspot
  
if(ACTION== USE || ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	
	if(character[GRANDMA].room== 10) {
	
		DisplaySpeechNoBlock(MAIN, "Grandma's not going to let me take anything out of here.", 1);
	}
	
	else {
	
		DisplaySpeechNoBlock(MAIN, "... everything I need should be out already.", 1);
	}
}
}


function hotspot15_c() {
  // script for hotspot15: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);

if(character[GRANDMA].room== 10) {

	DisplaySpeechNoBlock(MAIN, "Grandma's not going to let me take anything out of here.", 1);
}

else {

	DisplaySpeechNoBlock(MAIN, "... everything I need should be out already.", 1);
}
}

function hotspot16_a() {
  // script for hotspot16: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Someone must've used that for breakfast.", 1);
}

function hotspot16_b() {
  // script for hotspot16: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not hungry.", 1);
}
}

function hotspot16_c() {
  // script for hotspot16: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Dishware doesn't excite me.", 1);
}

function object1_d() {
  // script for object1: Interact object
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "Maybe I should just take them for now...", 1);
}
}

function region1_a() {
  // script for region1: Player walks onto region
  
if(GrandmaIdle== 0) {						// idle

	GrandmaIdle= 1;
	AnimateCharacterEx(GRANDMA, 4, 5, 0, 1, 0);
	SetTimer(2, 30);
}

else if(GrandmaIdle== 1) {

	GrandmaIdle= 2;							// set idle to stage two
	SetCharacterBaseline(GRANDMA, 126);
	ReleaseCharacterView(GRANDMA);
	character[GRANDMA].loop= 1;
	
	if(GrandmaIdleCounter== 0) {
	
		GrandmaIdleSpeech= DisplaySpeechBackground(GRANDMA, "Make sure you don't let Rufus in!");
		SetCharacterView(GRANDMA, 43);
		AnimateCharacter(GRANDMA, character[GRANDMA].loop, 5, 1);
	}

	else if(GrandmaIdleCounter== 1) {
	
		GrandmaIdleSpeech= DisplaySpeechBackground(GRANDMA, "Don't get into anything!");
		SetCharacterView(GRANDMA, 130);
		AnimateCharacter(GRANDMA, character[GRANDMA].loop, 5, 1);
	}
	
	else if(GrandmaIdleCounter== 2) {
	
		GrandmaIdleSpeech= DisplaySpeechBackground(GRANDMA, "These legumes will taste great in that stew...");
		SetCharacterView(GRANDMA, 128);	
		AnimateCharacter(GRANDMA, character[GRANDMA].loop, 5, 1);
	}
	
	GrandmaIdleCounter= Random(2);
}

else if(GrandmaIdle== 3) {

	AnimateCharacter(GRANDMA, 5, 5, 1);				// animate her cutting
	SetTimer(2, 500);
	GrandmaIdle= 0;							// reset idle
}

if(IsOverlayValid(GrandmaIdleSpeech)== 0) {

	if(GrandmaIdle== 2) {
		
		GrandmaIdle= 3;
		SetCharacterBaseline(GRANDMA, 132);				// so she's ontop of counter
		ReleaseCharacterView(GRANDMA);
		AnimateCharacter(GRANDMA, 4, 5, 0);
		SetTimer(2, 30);
	}
}
}

function object8_c() {
  // script for object8: Look at object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);

if(GetGlobalInt(17)== 0) {

	DisplaySpeechNoBlock(MAIN, "It's not on.", 1);
}

else {

	DisplaySpeechNoBlock(MAIN, "Sounds like it's on.", 1);
}
}

function object8_d() {
  // script for object8: Interact object
  
if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 270, 118, 0);
	
	if(GrandmaIdle> 0) {

		GrandmaIdle= 0;
		
		if(IsOverlayValid(GrandmaIdleSpeech)) {
		  
			RemoveOverlay(GrandmaIdleSpeech);
		}

		ReleaseCharacterView(GRANDMA);
		character[GRANDMA].loop= 1;
		SetCharacterBaseline(GRANDMA, 126);			// she's now behind the counter normally
	}

	SetTimer(2, 0);
	character[MAIN].loop= 2;
	Wait(10);
		
	GUIOn(1);					// dishwasher	
}

else if(ACTION== OPEN) {

	if(GetGlobalInt(17)== 1) {
	
		DisplaySpeechNoBlock(MAIN, "Not while it's running.", 1);
	}
	
	else {
	
		DisplaySpeechNoBlock(MAIN, "It'll get emptied tonight.", 1);
	}
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 303, 98);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

$$$!$$$ ROOM room11.crm
$$$!$$$ RS
// text script for room

import int ThurstonIdle;
import int ThurstonIdleSpeech;

int ThurstonIdleCounter= 0;

function hotspot3_a() {
  // script for hotspot3: Interact with hotspot
  
if(ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 62, 97, 0);
	character[MAIN].loop= 2;
	Wait(5);
	MoveCharacterBlocking(MAIN, 77, 92, 1);
	NewRoom(1);
}

else if(ACTION== OPEN) {

	character[MAIN].loop= 3;
	Wait(5);
	DisplaySpeech(MAIN, "It's already open.");
}

else if(ACTION== CLOSE) {

	MoveCharacterBlocking(MAIN, 62, 97, 0);
	character[MAIN].loop= 2;
	Wait(5);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(1);
	ObjectOn(0);
	DisableHotspot(3);
	Wait(5);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}
}

function object2_a() {
  // script for object2: Interact with object
  
if(ACTION== USE) {
  	MoveCharacterBlocking(MAIN, 175, 87, 0);
      FaceLocation(MAIN, 400, 72);
      NewRoomEx(1, 24, 120);
}

else if(ACTION== CLOSE) {
  	MoveCharacterBlocking(MAIN, 175, 87, 0);
      FaceLocation(MAIN, 400, 72);
      Wait(10);
      SetCharacterView(MAIN, 2);
      AnimateCharacter(MAIN, 4, 10, 0);
      Wait(5);
      ObjectOn(1);
      ObjectOff(2);
      ReleaseCharacterView(MAIN);
      character[MAIN].loop= 2;
}

else if(ACTION== OPEN) {
  	MoveCharacterBlocking(MAIN, 175, 87, 0);
      FaceLocation(MAIN, 400, 72);
      DisplaySpeech(MAIN, "It's already open.");
}
}

function room_a() {
  // script for room: Player enters screen (after fadein)

if(GetGlobalInt(1)== 0 || GetGlobalInt(1)== 2) {
 
	PlayAmbientSound(1, 2, 30, 320, 120);
}

if(GetGlobalInt(5)== 6) {						// if he came from main hallway

	MoveCharacterBlocking(MAIN, 273, 134, 1);
	MoveCharacterBlocking(MAIN, 240, 132, 0);
	MoveCharacter(MAIN, 219, 129);
	SetGlobalInt(5, 0);						// set state to in second hallway
}
  
else if(GetGlobalInt(5)== 5) {						// if he came from bedroom  

	MoveCharacterBlocking(MAIN, 56, 97, 1);
	MoveCharacter(MAIN, 59, 110);
	SetGlobalInt(5, 0);
}	

}

function object1_a() {
  // script for object1: Interact with object
  
if(ACTION== USE || ACTION== OPEN) {

	if(GetGlobalInt(3)== 0) {						// initially
	
		MoveCharacterBlocking(MAIN, 143, 123, 0);
		character[MAIN].loop= 2;
		
		if(ThurstonIdle== 1) {
		
			ThurstonIdle= 0;
		}

		else if(ThurstonIdle== 2) {
			
			if(IsOverlayValid(ThurstonIdleSpeech)) {
			
				RemoveOverlay(ThurstonIdleSpeech);
			}
	
			ThurstonIdle= 0;
		}
		
		SetTimer(1, 0);
		
		SetMusicMasterVolume(30);
		Wait(20);
		GUIOff(2);
		
		DisplaySpeech(MAIN, "Hey, Thurston...");
		Wait(10);
		
		if(ThurstonIdle!= 2) {
			  
				PlaySound(3);
				ObjectOff(1);
		}

		Wait(10);
		DisplaySpeech(THURSTON, "Yeah?");
		Wait(20);
		RunDialog(3);	
	}

	if(GetGlobalInt(3)== 1) {						// if thurston in shower
	
		MoveCharacterBlocking(MAIN, 143, 123, 0);
		character[MAIN].loop= 2;		
		
		SetMusicMasterVolume(30);
		Wait(20);
		GUIOff(2);
		StartCutscene(5);
		
		DisplaySpeech(MAIN, "Thurston, are you in there?");
		Wait(80);
		DisplaySpeechNoBlock(MAIN, "Doesn't sound like it.", 1);
		Wait(10);
		SetMusicMasterVolume(90);
		Wait(10);
		
		GUIOn(2);
		EndCutscene();
	}
	
	else if(GetGlobalInt(3)== 2) {						// back in room after shower
		
		if(character[MAIN].inv[9]> 0) {					// if he has brownies
	
			MoveCharacterBlocking(MAIN, 143, 123, 0);
			character[MAIN].loop= 2;
			
			if(ThurstonIdle== 1) {
		
				ThurstonIdle= 0;
			}
	
			else if(ThurstonIdle== 2) {
				
				if(IsOverlayValid(ThurstonIdleSpeech)) {
				
					RemoveOverlay(ThurstonIdleSpeech);
				}
		
				ThurstonIdle= 0;
			}
			
			SetTimer(1, 0);
			SetMusicMasterVolume(30);
			Wait(20);
			StartCutscene(5);
			GUIOff(2);
			
			Wait(20);
			DisplaySpeech(MAIN, "Alright, Thurston...");
			DisplaySpeech(MAIN, "... I've got those brownies.");
			Wait(10);
			
			if(ThurstonIdle!= 2) {
				  
					PlaySound(3);
					ObjectOff(1);
			}
	
			Wait(10);
			DisplaySpeech(THURSTON, "Wow!  Already?");
			DisplaySpeech(THURSTON, "Well, a deal's a deal...");
			DisplaySpeech(THURSTON, "... here's Grandpa's hearing aid!");
			Wait(10);
			MoveCharacterBlocking(MAIN, 187, 113, 1);
			character[MAIN].loop= 2;
			Wait(5);
			character[MAIN].loop= 6;
			character[MAIN].frame= 2;
			LoseInventory(9);
			Wait(5);
			AddInventory(36);
			PlaySound(4);
			Wait(10);
			character[MAIN].loop= 2;
			character[MAIN].frame= 0;
			MoveCharacterBlocking(MAIN, 143, 123, 1);
			character[MAIN].loop= 2;
			Wait(10);
			PlaySound(5);
			ObjectOn(1);
			Wait(10);
			SetMusicMasterVolume(90);
			Wait(10);
			
			GUIOn(2);
			EndCutscene();
		}

		else {
		
			MoveCharacterBlocking(MAIN, 143, 123, 0);
			character[MAIN].loop= 2;
			
			if(ThurstonIdle== 1) {
		
				ThurstonIdle= 0;
			}
	
			else if(ThurstonIdle== 2) {
				
				if(IsOverlayValid(ThurstonIdleSpeech)) {
				
					RemoveOverlay(ThurstonIdleSpeech);
				}
		
				ThurstonIdle= 0;
			}
			
			SetMusicMasterVolume(30);
			SetTimer(1, 0);
			Wait(20);
			GUIOff(2);

			DisplaySpeech(MAIN, "Hey, Thurston... are you in there?");
			Wait(10);
			
			if(ThurstonIdle!= 2) {
				  
					PlaySound(3);
					ObjectOff(1);
			}
	
			Wait(10);
			DisplaySpeech(THURSTON, "Yeah?");
			Wait(20);
				
			if(GetDialogOption(6, 1)== 2) {				// if he's already made deal with thurston
				
				SetDialogOption(6, 6, 1);			// make sure at least one dialog option is on
			}
		
			RunDialog(6);
		}
	}
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 190, 65);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function object0_a() {
  // script for object0: Interact with object
  
if(ACTION== USE) {
	
	MoveCharacterBlocking(MAIN, 62, 97, 0);
	character[MAIN].loop= 2;
	Wait(5);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(0);
	ObjectOff(0);
	EnableHotspot(3);
	Wait(5);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	Wait(5);
	NewRoom(1);
	SetGlobalInt(5, 5);
}

if(ACTION== OPEN) {
	
	MoveCharacterBlocking(MAIN, 62, 97, 0);
	character[MAIN].loop= 2;
	Wait(5);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(0);
	ObjectOff(0);
	EnableHotspot(3);
	Wait(5);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}

if(ACTION== CLOSE) {

  	MoveCharacterBlocking(MAIN, 62, 97, 0);
	character[MAIN].loop= 2;
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function room_b() {
  // script for room: Player enters screen (before fadein)

PlayMusic(3);
SetMusicMasterVolume(30);

if(GetGlobalInt(5)== 6) {				// if he came from main hallway

	character[MAIN].x= 320;
	character[MAIN].y= 125;
	character[MAIN].loop= 0;
}
 

else if(GetGlobalInt(5)== 5) {				// if he came from bedroom
	
	character[MAIN].x= 62;
	character[MAIN].y= 97;
	character[MAIN].loop= 0;
}

if(character[THURSTON].room== 11) {			// position brother when he's in his room

	character[THURSTON].x= 185;
	character[THURSTON].y= 125;
	SetCharacterTransparency(THURSTON, 100);
}

if(GetGlobalInt(2)== 2) {					// if mom is upstairs putting knuckles away

	character[MOM].room= 3;
	SetGlobalInt(2, 1);					// have her finish and go downstairs
}

ObjectOn(1);

if(GetGlobalInt(3)== 0 || GetGlobalInt(3)== 2) {	// thurston behind door
	
	SetTimer(1, 100);
}

ThurstonIdle= 0;
}



function hotspot1_b() {
  // script for hotspot1: Interact hotspot

MoveCharacterBlocking(MAIN, 296, 132, 0);
MoveCharacterBlocking(MAIN, 319, 125, 0);
NewRoom(5);


}

function object1_b() {
  // script for object1: Talk to object

if(ACTION== USE || ACTION== OPEN) {

	if(GetGlobalInt(3)== 0) {						// initially
	
		MoveCharacterBlocking(MAIN, 143, 123, 0);
		character[MAIN].loop= 2;
		
		if(ThurstonIdle== 1) {
	
			ThurstonIdle= 0;
		}

		else if(ThurstonIdle== 2) {
			
			if(IsOverlayValid(ThurstonIdleSpeech)) {
			
				RemoveOverlay(ThurstonIdleSpeech);
			}
	
			ThurstonIdle= 0;
		}		
		
		SetMusicMasterVolume(30);
		SetTimer(1, 0);
		Wait(20);
		GUIOff(2);
		
		DisplaySpeech(MAIN, "Hey, Thurston...");
		Wait(10);
		
		if(ThurstonIdle!= 2) {
		  
			PlaySound(3);
			ObjectOff(1);
		}

		Wait(10);
		DisplaySpeech(THURSTON, "... yeah?");
		Wait(20);
		RunDialog(3);	
	}

	if(GetGlobalInt(3)== 1) {						// if thurston in shower
	
		MoveCharacterBlocking(MAIN, 143, 123, 0);
		character[MAIN].loop= 2;
		SetMusicMasterVolume(30);
		Wait(20);
		GUIOff(2);
		StartCutscene(5);
		
		DisplaySpeech(MAIN, "Thurston, are you in there...?");
		Wait(80);
		DisplaySpeechNoBlock(MAIN, "... doesn't sound like it.", 1);
		Wait(10);
		SetMusicMasterVolume(90);
		Wait(10);
		
		GUIOn(2);
		EndCutscene();
	}
	
	else if(GetGlobalInt(3)== 2) {						// back in room after shower
		
		if(character[MAIN].inv[9]> 0) {					// if he has brownies
	
			MoveCharacterBlocking(MAIN, 143, 123, 0);
			character[MAIN].loop= 2;
			
			if(ThurstonIdle== 1) {
		
				ThurstonIdle= 0;
			}
	
			else if(ThurstonIdle== 2) {
				
				if(IsOverlayValid(ThurstonIdleSpeech)) {
				
					RemoveOverlay(ThurstonIdleSpeech);
				}
		
				ThurstonIdle= 0;
			}
			
			SetMusicMasterVolume(30);
			SetTimer(1, 0);
			Wait(20);			
			StartCutscene(5);
			GUIOff(2);
			
			Wait(20);
			DisplaySpeech(MAIN, "Alright, Thurston...");
			DisplaySpeech(MAIN, "... I've got those brownies.");
			Wait(10);
			
			if(ThurstonIdle!= 2) {
			  
				PlaySound(3);
				ObjectOff(1);
			}
	
			Wait(10);
			DisplaySpeech(THURSTON, "Wow!  Already?");
			DisplaySpeech(THURSTON, "Well, a deal's a deal...");
			DisplaySpeech(THURSTON, "... here's Grandpa's hearing aid!");
			Wait(10);
			MoveCharacterBlocking(MAIN, 187, 113, 1);
			character[MAIN].loop= 2;
			Wait(5);
			character[MAIN].loop= 6;
			character[MAIN].frame= 2;
			LoseInventory(9);
			Wait(5);
			AddInventory(36);
			PlaySound(4);
			Wait(10);
			character[MAIN].loop= 2;
			character[MAIN].frame= 0;
			MoveCharacterBlocking(MAIN, 143, 123, 1);
			character[MAIN].loop= 2;
			Wait(10);
			PlaySound(5);
			ObjectOn(1);
			Wait(10);
			SetMusicMasterVolume(90);
			Wait(10);
			
			GUIOn(2);
			EndCutscene();
		}

		else {
		
			MoveCharacterBlocking(MAIN, 143, 123, 0);
			character[MAIN].loop= 2;
			
			if(ThurstonIdle== 1) {

				ThurstonIdle= 0;
			}
	
			else if(ThurstonIdle== 2) {
				
				if(IsOverlayValid(ThurstonIdleSpeech)) {
				
					RemoveOverlay(ThurstonIdleSpeech);
				}
		
				ThurstonIdle= 0;
			}			
			
			SetMusicMasterVolume(30);
			SetTimer(1, 0);
			Wait(20);
			GUIOff(2);

			DisplaySpeech(MAIN, "Hey, Thurston... are you in there?");
			Wait(10);
			
			if(ThurstonIdle!= 2) {
			  
				PlaySound(3);
				ObjectOff(1);
			}

			Wait(10);
			DisplaySpeech(THURSTON, "... yeah?");
			Wait(20);
				
			if(GetDialogOption(6, 1)== 2) {				// if he's already made deal with thurston
				
				SetDialogOption(6, 6, 1);			// make sure at least one dialog option is on
			}
		
			RunDialog(6);
		}
	}
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 190, 65);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}



function room_c() {
  // script for room: Repeatedly execute
  
CheckSpeech();

if(IsTimerExpired(1)) {

	if(ThurstonIdle== 0) {
	
		ThurstonIdle= 1;
		PlaySound(3);
		ObjectOff(1);
		SetTimer(1, 20);
	}
  
	else if(ThurstonIdle== 1) {
	
		ThurstonIdle= 2;
	
		if(GetGlobalInt(3)== 0) {
			
			if(ThurstonIdleCounter== 0) {
			  
				ThurstonIdleSpeech= DisplaySpeechBackground(THURSTON, "... psst!");
			}
			
			else if(ThurstonIdleCounter== 1) {
			  
				ThurstonIdleSpeech= DisplaySpeechBackground(THURSTON, "...");
			}
			
			else if(ThurstonIdleCounter== 2) {
			  
				ThurstonIdleSpeech= DisplaySpeechBackground(THURSTON, "... you haven't found a way out yet?");
			}
	
			ThurstonIdleCounter= Random(2);
		}
		
		else if(GetGlobalInt(3)== 2) {
			
			if(ThurstonIdleCounter== 0) {
			  
				ThurstonIdleSpeech= DisplaySpeechBackground(THURSTON, "... psst!");
			}
			
			else if(ThurstonIdleCounter== 1) {
			  
				ThurstonIdleSpeech= DisplaySpeechBackground(THURSTON, "... did I leave anything in the bathroom?");
			}
			
			else if(ThurstonIdleCounter== 2) {
			  
				ThurstonIdleSpeech= DisplaySpeechBackground(THURSTON, "... did Grandma make her brownies?");
			}
	
			ThurstonIdleCounter= Random(2);	
		}

		else {
		
			ThurstonIdle= 0;
		}
	}
	
	else if(ThurstonIdle== 3) {
	
		PlaySound(3);
		ObjectOn(1);
		ThurstonIdle= 0;
		SetTimer(1, 300);
	}
}

if(ThurstonIdle== 2 && IsOverlayValid(ThurstonIdleSpeech)== 0) {

	ThurstonIdle= 3;
	SetTimer(1, 30);
}

}

function hotspot1_a() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, 320, 72);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It goes around the corner.", 1);
}

function hotspot2_a() {
  // script for hotspot2: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Those are for decoration.", 1);
}

function hotspot4_a() {
  // script for hotspot4: Look at hotspot
  
FaceLocation(MAIN, 19, 130);
Wait(5);

DisplaySpeechNoBlock(MAIN, "I don't even really notice it anymore.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);

DisplaySpeechNoBlock(MAIN, "The gateway to my inner sanctum!", 1);
}

function object1_c() {
  // script for object1: Look at object
  
MoveCharacterBlocking(MAIN, 162, 113, 0);
character[MAIN].loop= 2;
Wait(5);

DisplaySpeechNoBlock(MAIN, "That's Thurston's room.", 1);
}

function hotspot4_b() {
  // script for hotspot4: Interact hotspot
  
if(ACTION== USE || OPEN) {

	FaceLocation(MAIN, 12, 136);
	Wait(5);
	
	DisplaySpeechNoBlock(MAIN, "I don't think there's anything I can use in there.", 1);
}

}

function hotspot2_b() {
  // script for hotspot2: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 126, 56);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "There's enough light in here.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 126, 56);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'd rather not make the mess.", 1);
}

}

function hotspot2_c() {
  // script for hotspot2: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's bright enough outside.", 1);
}

function hotspot4_c() {
  // script for hotspot4: Pick up hotspot
  
MoveCharacterBlocking(MAIN, 92, 129, 0);
character[MAIN].loop= 1;
Wait(5);

DisplaySpeechNoBlock(MAIN, "There's never anything interesting in there.", 1);
}

function object0_b() {
  // script for object0: Look at object
  
MoveCharacterBlocking(MAIN, 68, 105, 0);
character[MAIN].loop= 3;
Wait(5);

DisplaySpeechNoBlock(MAIN, "It's my bedroom door.", 1);
}

function hotspot3_c() {
  // script for hotspot3: Any click on hotspot
  
SetGlobalInt(81, 1);				// so he does default action instead of just walking to it
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot

FaceLocation(MAIN, mouse.x, mouse.y - 20);
Wait(5);
DisplaySpeechNoBlock(MAIN, "That's a normal looking ceiling fixture.", 1);
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, 301, 78);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It could probably use some water...", 1);
}



function hotspot8_a() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's an antique.", 1);
}

function hotspot8_b() {
  // script for hotspot8: Interact hotspot
  
if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Why knock it over?", 1);
}
}

function hotspot8_c() {
  // script for hotspot8: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's not really portable.", 1);
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
MoveCharacterBlocking(MAIN, 162, 113, 0);
character[MAIN].loop= 2;
Wait(5);

DisplaySpeechNoBlock(MAIN, "That's Thurston's room.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot
  
if(ACTION== USE || ACTION== OPEN) {

	if(GetGlobalInt(3)== 0) {						// initially
	
		MoveCharacterBlocking(MAIN, 143, 123, 0);
		character[MAIN].loop= 2;
		
		if(ThurstonIdle== 1) {
		
			SetTimer(1, 0);
			ThurstonIdle= 0;
		}

		else if(ThurstonIdle > 1) {
		
			SetTimer(1, 0);
			
			if(IsOverlayValid(ThurstonIdleSpeech)) {
			
				RemoveOverlay(ThurstonIdleSpeech);
			}
		}
		
		Wait(20);
		GUIOff(2);
		
		DisplaySpeech(MAIN, "Hey, Thurston...");
		Wait(10);
		
		if(ThurstonIdle < 2) {
			  
			PlaySound(3);
			ObjectOff(1);
		}

		Wait(10);
		DisplaySpeech(THURSTON, "Yeah?");
		Wait(20);
		RunDialog(3);	
	}

	if(GetGlobalInt(3)== 1) {						// if thurston in shower
	
		MoveCharacterBlocking(MAIN, 143, 123, 0);
		character[MAIN].loop= 2;		
		
		Wait(20);
		GUIOff(2);
		StartCutscene(5);
		
		DisplaySpeech(MAIN, "Thurston, are you in there?");
		Wait(80);
		DisplaySpeechNoBlock(MAIN, "Doesn't sound like it.", 1);
		Wait(20);
		
		GUIOn(2);
		EndCutscene();
	}
	
	else if(GetGlobalInt(3)== 2) {						// back in room after shower
		
		if(character[MAIN].inv[9]> 0) {					// if he has brownies
	
			MoveCharacterBlocking(MAIN, 143, 123, 0);
			character[MAIN].loop= 2;
			
			if(ThurstonIdle== 1) {
		
				SetTimer(1, 0);
				ThurstonIdle= 0;
			}
	
			else if(ThurstonIdle > 1) {
			
				SetTimer(1, 0);
				
				if(IsOverlayValid(ThurstonIdleSpeech)) {
				
					RemoveOverlay(ThurstonIdleSpeech);
				}
			}
			
			Wait(20);
			StartCutscene(5);
			GUIOff(2);
			
			Wait(20);
			DisplaySpeech(MAIN, "Alright, Thurston...");
			DisplaySpeech(MAIN, "... I've got those brownies.");
			Wait(10);
			
			if(ThurstonIdle < 2) {
				  
					PlaySound(3);
					ObjectOff(1);
			}
	
			Wait(10);
			DisplaySpeech(THURSTON, "Wow!  Already?");
			DisplaySpeech(THURSTON, "Well, a deal's a deal...");
			DisplaySpeech(THURSTON, "... here's Grandpa's hearing aid!");
			Wait(10);
			MoveCharacterBlocking(MAIN, 187, 113, 1);
			character[MAIN].loop= 2;
			Wait(5);
			character[MAIN].loop= 6;
			character[MAIN].frame= 2;
			LoseInventory(9);
			Wait(5);
			AddInventory(36);
			PlaySound(4);
			Wait(10);
			character[MAIN].loop= 2;
			character[MAIN].frame= 0;
			MoveCharacterBlocking(MAIN, 143, 123, 1);
			character[MAIN].loop= 2;
			Wait(10);
			PlaySound(5);
			ObjectOn(1);
			ThurstonIdle= 0;
			Wait(20);
			
			GUIOn(2);
			EndCutscene();
		}

		else {
		
			MoveCharacterBlocking(MAIN, 143, 123, 0);
			character[MAIN].loop= 2;
			
			if(ThurstonIdle== 1) {
		
				SetTimer(1, 0);
				ThurstonIdle= 0;
			}
	
			else if(ThurstonIdle > 1) {
			
				SetTimer(1, 0);
				
				if(IsOverlayValid(ThurstonIdleSpeech)) {
				
					RemoveOverlay(ThurstonIdleSpeech);
				}
			}
			
			Wait(20);
			GUIOff(2);

			DisplaySpeech(MAIN, "Hey, Thurston... are you in there?");
			Wait(10);
			
			if(ThurstonIdle < 2) {
				  
				PlaySound(3);
				ObjectOff(1);
			}
	
			Wait(10);
			DisplaySpeech(THURSTON, "Yeah?");
			Wait(20);
				
			if(GetDialogOption(6, 1)== 2) {				// if he's already made deal with thurston
				
				SetDialogOption(6, 6, 1);			// make sure at least one dialog option is on
			}
		
			RunDialog(6);
		}
	}
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 190, 65);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}


function hotspot9_c() {
  // script for hotspot9: Talk to hotspot
  
if(ACTION== USE || ACTION== OPEN) {

	if(GetGlobalInt(3)== 0) {						// initially
	
		MoveCharacterBlocking(MAIN, 143, 123, 0);
		character[MAIN].loop= 2;
		
		if(ThurstonIdle== 1) {
	
			SetTimer(1, 0);
			ThurstonIdle= 0;
		}

		else if(ThurstonIdle > 1) {
		
			SetTimer(1, 0);
			
			if(IsOverlayValid(ThurstonIdleSpeech)) {
			
				RemoveOverlay(ThurstonIdleSpeech);
			}
		}		
		
		Wait(20);
		GUIOff(2);
		
		DisplaySpeech(MAIN, "Hey, Thurston...");
		Wait(10);
		
		if(ThurstonIdle < 2) {
		  
			PlaySound(3);
			ObjectOff(1);
		}

		Wait(10);
		DisplaySpeech(THURSTON, "... yeah?");
		Wait(20);
		RunDialog(3);	
	}

	if(GetGlobalInt(3)== 1) {						// if thurston in shower
	
		MoveCharacterBlocking(MAIN, 143, 123, 0);
		character[MAIN].loop= 2;
		Wait(20);
		GUIOff(2);
		StartCutscene(5);
		
		DisplaySpeech(MAIN, "Thurston, are you in there...?");
		Wait(80);
		DisplaySpeechNoBlock(MAIN, "... doesn't sound like it.", 1);
		Wait(20);
		
		GUIOn(2);
		EndCutscene();
	}
	
	else if(GetGlobalInt(3)== 2) {						// back in room after shower
		
		if(character[MAIN].inv[9]> 0) {					// if he has brownies
	
			MoveCharacterBlocking(MAIN, 143, 123, 0);
			character[MAIN].loop= 2;
			
			if(ThurstonIdle== 1) {
		
				SetTimer(1, 0);
				ThurstonIdle= 0;
			}
	
			else if(ThurstonIdle > 1) {
			
				SetTimer(1, 0);
				
				if(IsOverlayValid(ThurstonIdleSpeech)) {
				
					RemoveOverlay(ThurstonIdleSpeech);
				}
			}
			
			Wait(20);			
			StartCutscene(5);
			GUIOff(2);
			
			Wait(20);
			DisplaySpeech(MAIN, "Alright, Thurston...");
			DisplaySpeech(MAIN, "... I've got those brownies.");
			Wait(10);
			
			if(ThurstonIdle < 2) {
			  
				PlaySound(3);
				ObjectOff(1);
			}
	
			Wait(10);
			DisplaySpeech(THURSTON, "Wow!  Already?");
			DisplaySpeech(THURSTON, "Well, a deal's a deal...");
			DisplaySpeech(THURSTON, "... here's Grandpa's hearing aid!");
			Wait(10);
			MoveCharacterBlocking(MAIN, 187, 113, 1);
			character[MAIN].loop= 2;
			Wait(5);
			character[MAIN].loop= 6;
			character[MAIN].frame= 2;
			LoseInventory(9);
			Wait(5);
			AddInventory(36);
			PlaySound(4);
			Wait(10);
			character[MAIN].loop= 2;
			character[MAIN].frame= 0;
			MoveCharacterBlocking(MAIN, 143, 123, 1);
			character[MAIN].loop= 2;
			Wait(10);
			PlaySound(5);
			ObjectOn(1);
			ThurstonIdle= 0;
			Wait(20);
			
			GUIOn(2);
			EndCutscene();
		}

		else {
		
			MoveCharacterBlocking(MAIN, 143, 123, 0);
			character[MAIN].loop= 2;
			
			if(ThurstonIdle== 1) {
		
				SetTimer(1, 0);
				ThurstonIdle= 0;
			}
	
			else if(ThurstonIdle > 1) {
			
				SetTimer(1, 0);
				
				if(IsOverlayValid(ThurstonIdleSpeech)) {
				
					RemoveOverlay(ThurstonIdleSpeech);
				}
			}			
			
			Wait(20);
			GUIOff(2);

			DisplaySpeech(MAIN, "Hey, Thurston... are you in there?");
			Wait(10);
			
			if(ThurstonIdle < 2) {
			  
				PlaySound(3);
				ObjectOff(1);
			}

			Wait(10);
			DisplaySpeech(THURSTON, "... yeah?");
			Wait(20);
				
			if(GetDialogOption(6, 1)== 2) {				// if he's already made deal with thurston
				
				SetDialogOption(6, 6, 1);			// make sure at least one dialog option is on
			}
		
			RunDialog(6);
		}
	}
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 190, 65);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

$$$!$$$ ROOM room12.crm
$$$!$$$ RS
// text script for room

int MapText= -1;				// variable with overlay id for mouse over text
int Init= 0;				// variable for initial overlay id

function RandomScreenTransition() {

	int temp;
	temp= Random(1);
	
	if(temp== 0) {
	
		SetScreenTransition(TRANSITION_FADE);
	}
	
	else if(temp== 1) {
	
		SetScreenTransition(TRANSITION_BOXOUT);
	}
	
	return 1;
}

function room_a() {
  // script for room: Player enters screen (before fadein)
  
GUIOff(2);
GUIOff(4);
ReleaseCharacterView(MAIN);		// reset character
SetCharacterSpeechView(MAIN, 2);
SetGlobalInt(7, 6);
character[MAIN].x= -50;
character[MAIN].y= -50;


SetTimer(1, 0);			// disable any timers that may have been used in previous room
SetTimer(2, 0);
SetTimer(3, 0);
SetTimer(4, 0);

if(GetGlobalInt(6)!= 0) {		// if rufus is up and about

	character[CAT].room= 4;
	SetGlobalInt(6, 0);		// set state to back in laundry room
}

if(GetGlobalInt(1) > 1) {		// if knuckes was out of cage

	character[MOM].room= 3;
	SetGlobalInt(1, 3);
	SetGlobalInt(43, 0);
}

Init= GetHotspotAt(mouse.x, mouse.y);

if(Init== 7) {

	MapText= CreateTextOverlay(mouse.x - 25, (mouse.y - 20), 100 ,1, 15, "Gameshop");
}

else if(Init== 5) {

	if(mouse.x > 15) {

		MapText= CreateTextOverlay(mouse.x - 15, (mouse.y - 20), 100 ,1, 15, "Home");
	}
	
	else {
	
		MapText= CreateTextOverlay((mouse.x/2), (mouse.y - 20), 100 ,1, 15, "Home");
	}
}

else if(Init== 6) {
	
	MapText= CreateTextOverlay(mouse.x - 42, (mouse.y - 20), 100 ,1, 15, "Construction Site");
}

else if(Init== 4) {

	MapText= CreateTextOverlay(mouse.x - 15, (mouse.y - 20), 100 ,1, 15, "Park");
}

else if(Init== 2) {
  
	if(mouse.x > 15) {

		MapText= CreateTextOverlay(mouse.x - 15, (mouse.y - 20), 100 ,1, 15, "Home");
	}

	else {

		MapText= CreateTextOverlay((mouse.x/2), (mouse.y - 20), 100 ,1, 15, "Home");
	}
}

else if(Init== 3) {

	MapText= CreateTextOverlay(mouse.x - 35, (mouse.y - 20), 100 ,1, 15, "Fitness Club");
}

}

function hotspot7_b() {
  // script for hotspot7: Mouse moves over hotspot
  
if(IsOverlayValid(MapText)) {

	RemoveOverlay(MapText);
}

if(IsGUIOn(3)==0) {					// workaround for menu being on

	MapText= CreateTextOverlay(mouse.x - 25, (mouse.y - 20), 100 ,1, 15, "Gameshop");
}
}

function hotspot5_b() {
  // script for hotspot5: Mouse moves over hotspot
  
if(IsOverlayValid(MapText)) {

	RemoveOverlay(MapText);
}

if(IsGUIOn(3)==0) {					// workaround for menu being on

	if(mouse.x > 15) {
	
		MapText= CreateTextOverlay(mouse.x - 15, (mouse.y - 20), 100 ,1, 15, "Home");
	}
	
	else {
	
		MapText= CreateTextOverlay((mouse.x/2), (mouse.y - 20), 100 ,1, 15, "Home");
	}
}
}

function hotspot6_b() {
  // script for hotspot6: Mouse moves over hotspot
  
if(IsOverlayValid(MapText)) {

	RemoveOverlay(MapText);
}
if(IsGUIOn(3)==0) {					// workaround for menu being on

	MapText= CreateTextOverlay(mouse.x - 42, (mouse.y - 20), 100 ,1, 15, "Construction Site");
}
}

function hotspot4_b() {
  // script for hotspot4: Mouse moves over hotspot
  
if(IsOverlayValid(MapText)) {

	RemoveOverlay(MapText);
}
if(IsGUIOn(3)==0) {					// workaround for menu being on

	MapText= CreateTextOverlay(mouse.x - 15, (mouse.y - 20), 100 ,1, 15, "Park");
}
}

function hotspot2_b() {
  // script for hotspot2: Mouse moves over hotspot
  
if(IsOverlayValid(MapText)) {

	RemoveOverlay(MapText);
}
if(IsGUIOn(3)==0) {					// workaround for menu being on

	if(mouse.x > 15) {
	
		MapText= CreateTextOverlay(mouse.x - 15, (mouse.y - 20), 100 ,1, 15, "Dojo");
	}
	
	else {
	
		MapText= CreateTextOverlay((mouse.x/2), (mouse.y - 20), 100 ,1, 15, "Dojo");
	}
}
}

function hotspot3_b() {
  // script for hotspot3: Mouse moves over hotspot
  
if(IsOverlayValid(MapText)) {

	RemoveOverlay(MapText);
}

if(IsGUIOn(3)==0) {					// workaround for menu being on

	MapText= CreateTextOverlay(mouse.x - 35, (mouse.y - 20), 100 ,1, 15, "Fitness Club");
}
}

function hotspot1_a() {
  // script for hotspot1: Mouse moves over hotspot
  
if(IsOverlayValid(MapText)) {

	RemoveOverlay(MapText);
}
}



function hotspot2_c() {
  // script for hotspot2: Interact hotspot

Wait(10);
FadeOut(3);
Wait(30);
StopMusic();
SetMusicRepeat(0);
Wait(30);  

RandomScreenTransition();  
NewRoom(15);
GUIOn(2);
}

function hotspot3_a() {
  // script for hotspot3: Interact hotspot
  
Wait(10);
FadeOut(3);
Wait(30);
StopMusic();
SetMusicRepeat(0);
Wait(30);  

RandomScreenTransition();   
NewRoom(18);
GUIOn(2);
}

function hotspot4_c() {
  // script for hotspot4: Interact hotspot
  
Wait(10);
FadeOut(3);
Wait(30);
StopMusic();
SetMusicRepeat(0);
Wait(30);  

RandomScreenTransition();   
NewRoom(14);
GUIOn(2);
}

function hotspot5_c() {
  // script for hotspot5: Interact hotspot

Wait(10);
FadeOut(3);
Wait(30);
StopMusic();
SetMusicRepeat(0);
Wait(30);  

RandomScreenTransition(); 
NewRoom(3);
GUIOn(2);
}

function hotspot6_a() {
  // script for hotspot6: Interact hotspot

Wait(10);
FadeOut(3);
Wait(30);
StopMusic();
SetMusicRepeat(0);
Wait(30);  

RandomScreenTransition();   
NewRoom(13);
GUIOn(2);
}

function hotspot7_a() {
  // script for hotspot7: Interact hotspot

Wait(10);
FadeOut(3);
Wait(30);
StopMusic();
SetMusicRepeat(0);
Wait(30);  

RandomScreenTransition();   
NewRoom(17);
GUIOn(2);
}

function hotspot1_b() {
  // script for hotspot1: Look at hotspot
  

}

function hotspot2_a() {
  // script for hotspot2: Look at hotspot
  
}

function hotspot3_c() {
  // script for hotspot3: Look at hotspot
  
}

function hotspot4_a() {
  // script for hotspot4: Look at hotspot
  
}

function hotspot5_a() {
  // script for hotspot5: Look at hotspot
  
}

function hotspot6_c() {
  // script for hotspot6: Look at hotspot
  
}

function hotspot7_c() {
  // script for hotspot7: Look at hotspot
  
}

function hotspot1_c() {
  // script for hotspot1: Interact hotspot
  
}

function room_b() {
  // script for room: Player enters screen (after fadein)
  
SetMusicMasterVolume(90);
SetMusicRepeat(1);
PlayMusic(6);
}

$$$!$$$ ROOM room13.crm
$$$!$$$ RS
// text script for room

int CharacterX;
int CharacterY;
int ViewportX;
int ViewportY;
int XScroll= 0;
int YScroll= 0;
int TalkieIdleCounter= 0;
int WorkerIdleCounter= 0;
import int TalkieIdle;		// flag while talkie's idle plays
import int WorkerIdle; 		// flag while worker's idle plays
import int TalkieIdleSpeech;
import int WorkerIdleSpeech;

function room_e() {
  // script for room: Repeatedly execute

CheckSpeech();

ViewportX= GetViewportX();
ViewportY= GetViewportY();
CharacterX= character[MAIN].x;
CharacterY= character[MAIN].y;

if(CharacterX - ViewportX < 100) {

	XScroll= -1;
}

else if(CharacterX - ViewportX > 220) {

	XScroll= 1;
}

if(CharacterY - ViewportY < 129) {

	YScroll= -1;
}

else if(CharacterY - ViewportY > 134) {

	YScroll= 1;
}

if(XScroll!= 0 || YScroll!= 0) {

	SetViewport(ViewportX+ (2* XScroll), ViewportY+ YScroll);
}

if(ViewportX>= (game.room_width- 320) || 					// all the way right

  ViewportX<= 0 || 								// all the way left
 
  ((CharacterX - ViewportX)>= 150) && ((CharacterX - ViewportX)<= 170)) {	// he's in the middle

	XScroll= 0;
}

YScroll= 0;

if(IsTimerExpired(1)) {

	if(GetGlobalInt(23)== 0) {				// ketchup not used

		TalkieIdle= 1;
		TalkieIdleCounter= Random(5);
		
		if(TalkieIdleCounter== 0) {
		
			PlaySound(33);
			TalkieIdleSpeech= DisplaySpeechBackground(TALKIE, "WHAT AM I PAYING YOU FOR?");
			AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);
		}
		
		else if(TalkieIdleCounter== 1) {
		
			PlaySound(33);
			TalkieIdleSpeech= DisplaySpeechBackground(TALKIE, "... YOU CALL THAT WORK?");
			AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);
		}
		
		else if(TalkieIdleCounter== 2) {
		
			PlaySound(33);
			TalkieIdleSpeech= DisplaySpeechBackground(TALKIE, "... YOU'RE NOT A MAN!");
			AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);
		}
		
		else if(TalkieIdleCounter== 3) {
		
			PlaySound(33);
			TalkieIdleSpeech= DisplaySpeechBackground(TALKIE, "I NEED TO DO EVERYTHING FOR YOU!");
			AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);		
		}
		
		else if(TalkieIdleCounter== 4) {
		
			PlaySound(33);
			TalkieIdleSpeech= DisplaySpeechBackground(TALKIE, "THIS SITE IS A DUMP!");
			AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);		
		}
		
		else if(TalkieIdleCounter== 5) {
		
			PlaySound(33);
			TalkieIdleSpeech= DisplaySpeechBackground(TALKIE, "STAY FOCUSED, YOU!");
			AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);		
		}
			
		
		SetTimer(2, 200);
		SetTimer(1, 500);
	}
	
	else {							// ketchup used
	
		TalkieIdle= 1;
		TalkieIdleCounter= Random(3);
		
		if(TalkieIdleCounter== 0) {
		
			PlaySound(33);
			TalkieIdleSpeech= DisplaySpeechBackground(TALKIE, "YOU LITTLE PUNK!");
			AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);
		}

		else if(TalkieIdleCounter== 1) {
		
			PlaySound(33);
			TalkieIdleSpeech= DisplaySpeechBackground(TALKIE, "GET BACK HERE!");
			AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);
		}

		else if(TalkieIdleCounter== 2) {
		
			PlaySound(33);
			TalkieIdleSpeech= DisplaySpeechBackground(TALKIE, "I'LL SHOW YOU WHAT PAIN IS!");
			AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);
		}

		else if(TalkieIdleCounter== 3) {
		
			PlaySound(33);
			TalkieIdleSpeech= DisplaySpeechBackground(TALKIE, "WHY I OUGHT-A...");
			AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);
		}

		SetTimer(1, 400);
	}
}

if(IsTimerExpired(2)) {

	WorkerIdle= 1;
	WorkerIdleCounter= Random(2);
	
	if(WorkerIdleCounter== 0) {

		WorkerIdleSpeech= DisplaySpeechBackground(WORKER, "I'm trying not to hurt myself again...");
		ReleaseCharacterView(WORKER);
		SetCharacterView(WORKER, 111);
		AnimateCharacter(WORKER, 1, 5, 1);
	}
	
	else if(WorkerIdleCounter== 1) {

		WorkerIdleSpeech= DisplaySpeechBackground(WORKER, "... I won't get too distracted!");
		ReleaseCharacterView(WORKER);
		SetCharacterView(WORKER, 112);
		AnimateCharacter(WORKER, 1, 5, 1);
		
		SetGlobalInt(45, 1);					// set state to distracted
	}
	
	else if(WorkerIdleCounter== 2) {

		WorkerIdleSpeech= DisplaySpeechBackground(WORKER, "... hey, take it easy!");
		ReleaseCharacterView(WORKER);
		SetCharacterView(WORKER, 111);
		AnimateCharacter(WORKER, 1, 5, 1);
	}
}

if(IsTimerExpired(3)) {

	int temp= 55 - Random(2);				// get random numbers for the 3 bird sfx
	PlaySound(temp);
	SetTimer(3, 600);
}

if(IsOverlayValid(TalkieIdleSpeech)== 0 && TalkieIdle== 1) {

	ReleaseCharacterView(TALKIE);
	TalkieIdle= 0;
}
	
if(IsOverlayValid(WorkerIdleSpeech)== 0 && WorkerIdle== 1) {

	if(GetGlobalInt(45)== 2) {				// if player didn't solve puzzle
	
		ReleaseCharacterView(WORKER);
		SetCharacterView(WORKER, 28);
		AnimateCharacter(WORKER, 6, 7, 1);
	}
	
	else {

		SetGlobalInt(45, 0);					// set state to not distracted
		ReleaseCharacterView(WORKER);
		SetCharacterSpeechView(WORKER, 29);
		AnimateCharacter(WORKER, 5, 7, 1);
		WorkerIdle= 0;
	}
}
}


function object0_a() {
  // script for object0: Interact with object

if(ACTION== USE) {

	MoveCharacter(MAIN, 421, 156);
	
	while(GetViewportX() < 190) {
	
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
  
	MoveCharacterBlocking(MAIN, 421, 156, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame=2;
	Wait(15);
	PlaySound(12);
	ObjectOff(0);
	character[MAIN].loop=2;
	character[MAIN].frame=0;
	MoveCharacterBlocking(MAIN, 436, 151, 1);
	MoveCharacterBlocking(MAIN, 436, 145, 1);
	
	if(GetGlobalInt(23)== 2) {
	
		SetGlobalInt(23, 1);				// reset if he didn't pick up walkie talkie twice
	}
	
	NewRoom(17);
}

else if(ACTION== OPEN) {
  
	MoveCharacter(MAIN, 421, 156);
	
	while(GetViewportX() < 190) {
	
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}  

	MoveCharacterBlocking(MAIN, 421, 156, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame=2;
	Wait(15);
	PlaySound(12);
	ObjectOff(0);
	character[MAIN].loop=2;
	character[MAIN].frame=0;
	Wait(10);
	PlaySound(13);
	ObjectOn(0);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 435, 135);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already shut.", 1);
}
}


function room_b() {
  // script for room: Player enters screen (before fadein)
  
}

function room_d() {
  // script for room: Player enters screen (before fadein)

SetTimer(3, 300);						// ambient bird noises
  

if(GetGlobalInt(7)== 1) {					// came from comic shop

	SetViewport(190, 26);
	character[MAIN].x= 416;
	character[MAIN].y= 157;	
	character[MAIN].loop= 0;
}

else if(GetGlobalInt(7)== 6) {					// came from map

	SetViewport(0, 0);
	ReleaseCharacterView(MAIN);
	character[MAIN].x= 0;
	character[MAIN].y= 129;
	character[MAIN].loop= 2;
	ObjectOn(0);						// turn on door
}

if(GetGlobalInt(12)== 3) {					// we're in cutscene

	SetViewport(0, 5);
	ReleaseCharacterView(MAIN);
	SetCharacterIdle(MAIN, 61, 5);
	character[MAIN].x= -50;
	character[MAIN].y= 129;
	character[MAIN].loop= 2;
	ObjectOn(0);						// turn on door
	GUIOff(2);
	GUIOn(4);						// setup screen for scrolling cutscene
	SetScreenTransition(TRANSITION_CROSSFADE);		// back to crossfade transitions
}

else if(GetGlobalInt(13)== 2) {					// back from ketchup intro scene

	ReleaseCharacterView(MAIN);
	SetCharacterIdle(MAIN, 61, 5);
	character[MAIN].loop= 1;
	character[MAIN].x= 68;
	character[MAIN].y= 137;
	GUIOff(2);
	GUIOn(4);
	SetScreenTransition(TRANSITION_CROSSFADE);
}

if(GetGlobalInt(23)== 0) {					// ketchup hasn't been used

	SetCharacterIdle(WORKER, 30, 6);
	character[WORKER].x= 89;
	character[WORKER].y= 126;
	RemoveWalkableArea(2);
	SetCharacterView(WORKER, 28);
	AnimateCharacter(WORKER, 5, 6, 1);			
}

if(character[TALKIE].room== 13) {

	character[TALKIE].x= 164;
	character[TALKIE].y= 95;
	SetTimer(1, 100);					// idle
}

else {

	RestoreWalkableArea(2);
}

}

function room_a() {
  // script for room: Player enters screen (after fadein)

if(GetGlobalInt(7)== 1) {					// coming from comic shop

	MoveCharacterBlocking(MAIN, 409, 159, 1);
	ObjectOn(0);
	MoveCharacter(MAIN, 383, 159);
	SetGlobalInt(7, 0);					// set state to outside
}	 

else if(GetGlobalInt(7)== 6) {				
							
	MoveCharacterBlocking(MAIN, 32, 130, 1);		// came from map
	SetGlobalInt(7, 0);
	SetScreenTransition(TRANSITION_CROSSFADE);
}


if(GetGlobalInt(12)== 3) {					// cutscene
	
	StartCutscene(5);
	Wait(30);
	SetMusicMasterVolume(90);
	PlayMusic(9);
	Wait(30);
	int temp= 55 - Random(2);				// get random numbers for the 3 bird sfx
	PlaySound(temp);
	Wait(60);
	PlaySound(33);
	DisplaySpeech(TALKIE, "... HAMMER FASTER!");
	character[MAIN].loop= 3;
	PlaySound(33);
	DisplaySpeech(TALKIE, "WHAT KIND OF A MAN ARE YOU?");
	Wait(10);
	SetCharacterSpeechView(WORKER, 111);
	character[WORKER].loop= 1;
	ReleaseCharacterView(WORKER);
	DisplaySpeech(WORKER, "I'm not trying to hurt myself here boss!");
	ReleaseCharacterView(WORKER);
	SetCharacterSpeechView(WORKER, 29);
	AnimateCharacter(WORKER, 5, 7, 1);
	Wait(40);
	MoveCharacterDirect(MAIN, 200, 150);
	
	while(GetViewportY() < 10) {
	
		SetViewport(GetViewportX(), GetViewportY() + 1);
		Wait(1);
	}
	
	Wait(30);
	SetMusicMasterVolume(30);
	StopMusic();
	Wait(30);
	MoveCharacterBlocking(MAIN, 200, 150, 1);
	character[MAIN].loop= 2;
	Wait(10);
	SetCharacterView(MAIN, 68);
	SetCharacterSpeechView(MAIN, 67);
	Wait(10);
	DisplaySpeech(MAIN, "... Slackmaster is worth it!");
	SetCharacterView(MAIN, 68);
	SetCharacterSpeechView(MAIN, 2);
	Wait(30);
	ReleaseCharacterView(MAIN);
	MoveCharacter(MAIN, 431, 157);
	Wait(20);
	
	while(GetViewportX() < 190) {
	
		if(GetViewportY() < 82) {
		  
			SetViewport(GetViewportX() + 2, GetViewportY() + 1);
		}

		else {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
		}

		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 431, 157, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(15);
	PlaySound(12);
	ObjectOff(0);
	character[MAIN].loop= 2;
	Wait(10);
	MoveCharacterBlocking(MAIN, 438, 148, 1);
	SetGlobalInt(7, 6);					// so he exits to the map when he leaves the gameshop
	SetGlobalInt(12, 4);					// increment to next cut
	SetScreenTransition(TRANSITION_CROSSFADE);
	NewRoom(17);
}

else if(GetGlobalInt(13)== 2) {					// back from kethcup cutscene

	StartCutscene(5);
	Wait(30);
	SetMusicRepeat(1);
	SetMusicMasterVolume(90);
	PlayMusic(11);
	Wait(30);
	int temp= 55 - Random(2);				// get random numbers for the 3 bird sfx
	PlaySound(temp);
	Wait(30);
	DisplaySpeech(MAIN, "Wow! He really flipped out!");
	Wait(10);
	PlaySound(33);
	DisplaySpeech(TALKIE, "... GET BACK HERE!");
	Wait(10);
	DisplaySpeech(TALKIE, "WE CAN'T LEAVE THIS CONSTRUCTION LOT UNATTENDED!");
	Wait(30);
	PlaySound(33);
	DisplaySpeech(TALKIE, "... YOU BIG BABY!");
	Wait(20);
	PlaySound(33);
	DisplaySpeech(TALKIE, "HEY KID!");
	Wait(10);
	character[MAIN].loop= 0;
	Wait(5);
	character[MAIN].loop= 2;
	Wait(10);
	PlaySound(33);
	DisplaySpeech(TALKIE, "... WHAT ARE YOU DOIN' TO MY LABOR!");
	SetTimer(1, 200);					// reset walkie talkie idle
	SetGlobalInt(13, 0);					// set state to not in cutscene
	Wait(30);
	SetMusicMasterVolume(30);
	SetMusicRepeat(0);
	StopMusic();
	Wait(30);
	StopMusic();
	Wait(30);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();
}
}

function hotspot1_b() {
  // script for hotspot1: Interact hotspot
  
if(ACTION== USE) {

	MoveCharacter(MAIN, 19, 128);
	
	while(GetViewportX() > 0) {
	
		SetViewport(GetViewportX() - 2, GetViewportY());
		Wait(1);
	}


	MoveCharacterBlocking(MAIN, 19, 128, 0);
	MoveCharacterBlocking(MAIN, 0, 128, 1);
	
	if(GetGlobalInt(23)== 2) {
	
		SetGlobalInt(23, 1);				// if he didn't pick up walkie talkie twice
	}
	
	FadeOut(5);
	Wait(30);
	StopMusic();
	Wait(30);
	SetScreenTransition(TRANSITION_FADE);
	
	NewRoom(12);
}
}



function hotspot2_a() {
  // script for hotspot2: Player stands on hotspot
  
}

function object2_a() {
  // script for object2: Interact object
  

if(ACTION== USE || ACTION== OPEN || ACTION== PULL) {

	if(GetGlobalInt(19)== 2) {
	
		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't think I need another one.", 1);
	}
	
	else {
	
		MoveCharacter(MAIN, 244, 151);
	
		if(GetViewportX() < 84) {
		
			while(GetViewportX() < 84) {
			
				if(GetViewportY() < 16) {
		 
					SetViewport(GetViewportX() + 2, GetViewportY());
				}
		
				else {
				  
					SetViewport(GetViewportX() + 2, GetViewportY());
				}
		
				Wait(1);
			}
		}
		
		else if(GetViewportX() > 84) {
		
			while(GetViewportX() > 84) {
			
				if(GetViewportY() < 16) {
		 
					SetViewport(GetViewportX() - 2, GetViewportY() + 1);
				}
		
				else {
				  
					SetViewport(GetViewportX() - 2, GetViewportY());
				}
		
				Wait(1);
			}
		}
	
		MoveCharacterBlocking(MAIN, 244, 151, 0);
		character[MAIN].loop= 2;
		Wait(5);
		GUIOff(2);
		GUIOn(4);
		Wait(10);
		character[MAIN].loop= 13;
		character[MAIN].frame= 1;
		
		if(GetGlobalInt(19)== 0) {
			  
			Wait(20);
			character[MAIN].loop= 2;
			character[MAIN].frame= 0;
			DisplaySpeechNoBlock(MAIN, "It needs a quarter.", 1);
			GUIOn(2);
			GUIOff(4);
		}
		
		else {
	
			Wait(15);
			PlaySound(41);
			ObjectOff(2);
			ObjectOn(3);
			ObjectOn(1);
			character[MAIN].loop= 2;
			character[MAIN].frame= 0;
			
			GUIOn(2);
			GUIOff(4);
		}
	}
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 268, 118);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}

else if(ACTION== PUSH) {

	FaceLocation(MAIN, 268, 118);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't think that would help.", 1);
}
}

function hotspot2_b() {
  // script for hotspot2: Use inventory on hotspot

MoveCharacter(MAIN, 263, 151);

if(GetViewportX() < 84) {

	while(GetViewportX() < 84) {
	
		if(GetViewportY() < 16) {
 
			SetViewport(GetViewportX() + 2, GetViewportY());
		}

		else {
		  
			SetViewport(GetViewportX() + 2, GetViewportY());
		}

		Wait(1);
	}
}

else if(GetViewportX() > 84) {

	while(GetViewportX() > 84) {
	
		if(GetViewportY() < 16) {
 
			SetViewport(GetViewportX() - 2, GetViewportY() + 1);
		}

		else {
		  
			SetViewport(GetViewportX() - 2, GetViewportY());
		}

		Wait(1);
	}
}
  
MoveCharacterBlocking(MAIN, 263, 151, 0);
character[MAIN].loop= 2;

if(TalkieIdle== 1) {

	if(IsOverlayValid(TalkieIdleSpeech)) {
	  
		RemoveOverlay(TalkieIdleSpeech);
	}
	
	ReleaseCharacterView(TALKIE);
	TalkieIdle= 0;
	WorkerIdle= 0;
}

else if(WorkerIdle== 1) {

	if(IsOverlayValid(WorkerIdleSpeech)) {

		RemoveOverlay(WorkerIdleSpeech);
	}
	
	ReleaseCharacterView(WORKER);
	AnimateCharacter(WORKER, 5, 6, 1);
	TalkieIdle= 0;
	WorkerIdle= 0;
}

SetTimer(1, 0);
SetTimer(2, 0);

Wait(20);
GUIOff(2);
GUIOn(4);
StartCutscene(5);

Wait(20);
character[MAIN].loop= 13;
character[MAIN].frame= 1;
Wait(15);
PlaySound(40);
LoseInventory(18);
SetGlobalInt(19, 1);						// unlock the hatch
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's ready to vend!", 1);
Wait(40);

GUIOn(2);
GUIOff(4);
EndCutscene();

}

function object1_a() {
  // script for object1: Pick up object

MoveCharacter(MAIN, 244, 151);

if(GetViewportX() < 84) {

	while(GetViewportX() < 84) {
	
		if(GetViewportY() < 16) {
 
			SetViewport(GetViewportX() + 2, GetViewportY());
		}

		else {
		  
			SetViewport(GetViewportX() + 2, GetViewportY());
		}

		Wait(1);
	}
}

else if(GetViewportX() > 84) {

	while(GetViewportX() > 84) {
	
		if(GetViewportY() < 16) {
 
			SetViewport(GetViewportX() - 2, GetViewportY() + 1);
		}

		else {
		  
			SetViewport(GetViewportX() - 2, GetViewportY());
		}

		Wait(1);
	}
}
 
MoveCharacterBlocking(MAIN, 244, 151, 0);
character[MAIN].loop= 2;
Wait(5);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(15);
PlaySound(4);
ObjectOff(1);
AddInventory(25);
SetGlobalInt(19, 2);						// set state to newspaper picked up
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(15);
PlaySound(16);
ObjectOff(3);							// hatch closes shut
ObjectOn(2);
}

function object4_a() {
  // script for object4: Pick up object

if(GetGlobalInt(23)== 0) {					// ketchup hasn't been used

	MoveCharacter(MAIN, mouse.x, mouse.y);
}
  
else {								// ketchup has been used
	
	MoveCharacter(MAIN, 115, 114);
	
	while(GetViewportX() < 0) {
	
		if(GetViewportY() > 0) {
		  
			SetViewport(GetViewportX() - 2, GetViewportY() - 1);
		}

		else {
		
			SetViewport(GetViewportX() - 2, GetViewportY());
		}

		Wait(1);
	}
  
	MoveCharacterBlocking(MAIN, 115, 114, 0);
	character[MAIN].loop= 2;
	Wait(5);
	character[MAIN].loop= 9;
	character[MAIN].frame= 1;
	Wait(10);
	
	if(character[TALKIE].room== 13) {			// if talkie is still there
	
		PlaySound(33);
		DisplaySpeech(TALKIE, "HOLD IT RIGHT THERE!");
		Wait(10);
		ReleaseCharacterView(MAIN);
		character[MAIN].loop= 2;
		Wait(10);
		PlaySound(33);
		DisplaySpeech(TALKIE, "YOU ARE NOT TO TAKE THAT GLUE GUN OFF THIS LOT!");
	}
	
	else {
	  
		Wait(20);
		ObjectOff(4);
		AddInventory(15);
		PlaySound(4);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
	}
}
}

function object5_a() {
  // script for object5: Pick up object
  
if(GetGlobalInt(23)== 0) {					// ketchup hasn't been used

	MoveCharacter(MAIN, 98, 134);
}

else if(GetGlobalInt(23)== 1) {

	MoveCharacter(MAIN, 139, 110);
	
	while(GetViewportX() < 0) {
	
		if(GetViewportY() > 0) {
		  
			SetViewport(GetViewportX() - 2, GetViewportY() - 1);
		}

		else {
		
			SetViewport(GetViewportX() - 2, GetViewportY());
		}

		Wait(1);
	}

	MoveCharacterBlocking(MAIN, 139, 110, 0);
	character[MAIN].loop= 2;
	Wait(30);
	PlayMusic(11);
	Wait(30);
	
	GUIOff(2);
	StartCutscene(5);
	Wait(30);
	
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(5);
	DisplaySpeech(TALKIE, "Keep your hands off of me!");
	Wait(5);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	DisplaySpeechNoBlock(MAIN, "He's a noisy one.", 1);
	SetGlobalInt(23, 2);
	Wait(30);
	SetMusicMasterVolume(30);
	Wait(30);
	StopMusic();
	Wait(30);
	
	GUIOn(2);
	EndCutscene();
}

else if(GetGlobalInt(23)== 2) {

	MoveCharacter(MAIN, 139, 110);
	
	while(GetViewportX() < 0) {
	
		if(GetViewportY() > 0) {
		  
			SetViewport(GetViewportX() - 2, GetViewportY() - 1);
		}

		else {
		
			SetViewport(GetViewportX() - 2, GetViewportY());
		}

		Wait(1);
	}

	MoveCharacterBlocking(MAIN, 139, 110, 0);
	character[MAIN].loop= 2;
	Wait(30);
	PlayMusic(11);
	Wait(30);
	
	GUIOff(2);
	StartCutscene(5);
	
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(5);
	DisplaySpeech(TALKIE, "No, get away!");
	Wait(5);
	ObjectOff(5);
	AddInventory(32);
	Wait(5);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	SetGlobalInt(23, 3);					// final room state
	Wait(30);
	SetMusicMasterVolume(30);
	Wait(30);
	StopMusic();
	Wait(30);
	
	GUIOn(2);
	EndCutscene();
}
}

function hotspot2_c() {
  // script for hotspot2: Look at hotspot
  
FaceLocation(MAIN, 285, 114);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's ready to vend.", 1);
}

function hotspot3_a() {
  // script for hotspot3: Look at hotspot
  
MoveCharacterBlocking(MAIN, 240, 151, 0);
character[MAIN].loop= 2;
Wait(15);
DisplaySpeechNoBlock(MAIN, "There are a couple newspapers in there.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 273, 117);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It needs a coin to operate.", 1);
}

else if(ACTION== OPEN || ACTION == PULL) {

	MoveCharacterBlocking(MAIN, 244, 151, 0);
	character[MAIN].loop= 2;
	Wait(5);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(10);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	DisplaySpeech(MAIN, "It's locked.");
}

else if(ACTION== PUSH) {

	FaceLocation(MAIN, 273, 117);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Somehow I don't think I'll be able to shake a newspaper out of it.", 1);
}
}

function hotspot1_a() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, 2, 120);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's back where I came from.", 1);
}

function hotspot4_a() {
  // script for hotspot4: Look at hotspot
  
FaceLocation(MAIN, 285, 114);
Wait(5);
DisplaySpeechNoBlock(MAIN, "'To vend, insert coin(s) in slot, and open hatch.'", 1);
}

function object0_b() {
  // script for object0: Look at object
  
}

function object0_c() {
  // script for object0: Look at object
  
FaceLocation(MAIN, 435, 131);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's the entrance to the game shop.", 1);
}

function object1_b() {
  // script for object1: Look at object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's today's paper.", 1);
}

function object2_b() {
  // script for object2: Look at object
  
FaceLocation(MAIN, 270, 118);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It opens when you pay the machine.", 1);
}

function object3_a() {
  // script for object3: Look at object
  
FaceLocation(MAIN, 262, 121);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's open.", 1);
}

function object3_b() {
  // script for object3: Interact object
  
if(ACTION== CLOSE || ACTION== USE) {

	FaceLocation(MAIN, 262, 121);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I should grab a paper first.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 262, 121);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}
}

function object3_c() {
  // script for object3: Pick up object
  
FaceLocation(MAIN, 262, 121);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I should just take one off the pile.", 1);
}

function object4_b() {
  // script for object4: Look at object
  
FaceLocation(MAIN, 87, 107);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It looks like a glue gun.", 1);


}

function object4_c() {
  // script for object4: Interact object
  
if(ACTION== USE) {

	if(GetGlobalInt(23)== 0) {					// if ketchup not used
	
		FaceLocation(MAIN, 86, 107);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I can't use it from here.", 1);
	}
	
	else {
	
		FaceLocation(MAIN, 86, 107);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't need to use it right now.", 1);
	}
}

}

function object5_c() {
  // script for object5: Interact object

if(GetGlobalInt(23)== 0) {
	
	MoveCharacter(MAIN, 98, 134);
}
  
if(ACTION== USE || ACTION== PUSH) {
	
	MoveCharacter(MAIN, 98, 134);
	
	while(GetViewportX() < 0) {
	
		if(GetViewportY() > 0) {
		  
			SetViewport(GetViewportX() - 2, GetViewportY() - 1);
		}

		else {
		
			SetViewport(GetViewportX() - 2, GetViewportY());
		}

		Wait(1);
	}	

	MoveCharacterBlocking(MAIN, 98, 134, 0);
	
	DisplaySpeech(MAIN, "Breaker, breaker...");
	DisplaySpeech(TALKIE, "I'm not a toy!");
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't think it opens.", 1);
}
}

function hotspot3_c() {
  // script for hotspot3: Use inventory on hotspot
  
MoveCharacter(MAIN, 263, 151);

if(GetViewportX() < 100) {

	while(GetViewportX() < 100) {
	 
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
}

else if(GetViewportX() > 100) {

	while(GetViewportX() > 100) {
	
		SetViewport(GetViewportX() - 2, GetViewportY());
		Wait(1);
	}
}
  
MoveCharacterBlocking(MAIN, 263, 151, 0);
character[MAIN].loop= 2;
DisplaySpeechNoBlock(MAIN, "It needs to go in the coin slot.", 1);
}


function hotspot4_b() {
  // script for hotspot4: Use inventory on hotspot
  
MoveCharacter(MAIN, 263, 151);

if(GetViewportX() < 100) {

	while(GetViewportX() < 100) {
	 
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
}

else if(GetViewportX() > 100) {

	while(GetViewportX() > 100) {
	
		SetViewport(GetViewportX() - 2, GetViewportY());
		Wait(1);
	}
}
  
MoveCharacterBlocking(MAIN, 263, 151, 0);
character[MAIN].loop= 2;
DisplaySpeechNoBlock(MAIN, "It needs to go in the coin slot.", 1);
}

function hotspot4_c() {
  // script for hotspot4: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "They're attached to the machine.", 1);
}

function hotspot5_a() {
  // script for hotspot5: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "They must've just started putting this frame up.", 1);
}

function hotspot5_b() {
  // script for hotspot5: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm don't know much about carpentry.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It looks pretty sturdy.", 1);
}
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It hasn't all been put up yet.", 1);
}

function hotspot6_b() {
  // script for hotspot6: Interact hotspot

if(ACTION== USE) {

	if(character[WORKER].room== 13) {
	
		MoveCharacter(MAIN, mouse.x, mouse.y);
	}
	
	else {
	  
		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't want to touch that stuff.", 1);
	}
}

else if(ACTION== PUSH || ACTION== PULL) {
  
	if(character[WORKER].room== 13) {
	
		MoveCharacter(MAIN, mouse.x, mouse.y);
	}
	
	else {  
	
		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't want to mess with it.", 1);
	}
}
}

function hotspot6_c() {
  // script for hotspot6: Pick up hotspot

if(character[WORKER].room== 13) {

	MoveCharacter(MAIN, mouse.x, mouse.y);
}

else {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to touch it.", 1);
}
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's an old purple bucket.", 1);
}

function hotspot7_b() {
  // script for hotspot7: Interact hotspot

if(ACTION== USE) {

	if(character[WORKER].room== 13) {
	
		MoveCharacter(MAIN, mouse.x, mouse.y);
	}
	
	else {
	  
		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I can't think of anything to do with it.", 1);
	}
}
}

function hotspot7_c() {
  // script for hotspot7: Pick up hotspot

if(character[WORKER].room== 13) {

	MoveCharacter(MAIN, mouse.x, mouse.y);
}

else {
	  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Maybe if it wasn't purple.", 1);
}
}

function hotspot8_a() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's got a bunch of bricks in it.", 1);
}

function hotspot8_b() {
  // script for hotspot8: Interact hotspot
  
if(ACTION== USE) {

	if(character[WORKER].room== 13) {
	
		MoveCharacter(MAIN, mouse.x, mouse.y);
	}
	
	else {
	
		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "It's already full with bricks...", 1);
	}
}

else if(ACTION== PUSH || ACTION== PULL) {

	if(character[WORKER].room== 13) {
	
		MoveCharacter(MAIN, mouse.x, mouse.y);
	}
	
	else {
		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "It's too heavy to move with all those bricks in it.", 1);
	}
}
}

function hotspot8_c() {
  // script for hotspot8: Pick up hotspot

if(character[WORKER].room== 13) {

	MoveCharacter(MAIN, mouse.x, mouse.y);
}

else {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't need to take that with me.", 1);
}
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Looks like it's just starting to get put up.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot
  
if(ACTION== USE) {

	if(character[WORKER].room== 13) {
	
		MoveCharacter(MAIN, mouse.x, mouse.y);
	}
	
	else {
	
		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I'm a warrior, not a mason!", 1);
	}
}

else if(ACTION== PUSH || ACTION== PULL) {

	if(character[WORKER].room== 13) {
	
		MoveCharacter(MAIN, mouse.x, mouse.y);
	}
	
	else {
	
		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "It's cemented together pretty well.", 1);
	}
}
}

function hotspot9_c() {
  // script for hotspot9: Pick up hotspot

if(character[WORKER].room== 13) {

	MoveCharacter(MAIN, mouse.x, mouse.y);
}

else {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Everything is cemented together.", 1);
}
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Those must be for that wall they're putting up back there.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Interact hotspot

if(character[WORKER].room== 13) {

	MoveCharacter(MAIN, mouse.x, mouse.y);
}

else {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "They're already stacked pretty neatly in there.", 1);
}
}

function hotspot10_c() {
  // script for hotspot10: Pick up hotspot

if(character[WORKER].room== 13) {

	MoveCharacter(MAIN, mouse.x, mouse.y);
}

else {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to carry a dirty ol' brick around...", 1);
}
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "The cement mixture is all dried.", 1);
}

function hotspot11_b() {
  // script for hotspot11: Interact hotspot
  
if(ACTION== USE) {

	if(character[WORKER].room== 13) {
	
		MoveCharacter(MAIN, mouse.x, mouse.y);
	}
	
	else {
	
		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "The cement mixture has already hardened.", 1);
	}
}
}

function hotspot11_c() {
  // script for hotspot11: Pick up hotspot


if(character[WORKER].room== 13) {

	MoveCharacter(MAIN, mouse.x, mouse.y);
}

else {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I wouldn't know what to do with it.", 1);
}
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "That must be ready to get hammered up.", 1);
}

function hotspot12_b() {
  // script for hotspot12: Interact hotspot
  
if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Dexcalibur is suitable enough.", 1);
}
}

function hotspot12_c() {
  // script for hotspot12: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I think Dexcalibur is enough ", 1);
}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I can see Cliff in there.", 1);
}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's the street signal for traffic", 1);
}

function hotspot14_b() {
  // script for hotspot14: Interact hotspot
  
if(ACTION== USE || ACTION== PUSH) {

	MoveCharacter(MAIN, 482, 168);
	
	while(GetViewportX() < 190) {
	
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 482, 168, 0);
	character[MAIN].loop= 0;
	Wait(10);
	NewRoom(12);
}

}

function hotspot15_a() {
  // script for hotspot15: Look at hotspot
  
FaceLocation(MAIN, 482, 168);
Wait(5);
DisplaySpeechNoBlock(MAIN, "That's the gameshop.", 1);
}

function hotspot16_a() {
  // script for hotspot16: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "C:\Comics\Games", 1);
}

function hotspot17_a() {
  // script for hotspot17: Look at hotspot
  
FaceLocation(MAIN, 482, 168);
Wait(5);
DisplaySpeechNoBlock(MAIN, "That's the button for the crosswalk.", 1);
}

function hotspot16_b() {
  // script for hotspot16: Interact hotspot
  

}

function region1_a() {
  // script for region1: Player walks onto region

int ConstructionScene= Random(1);

StopMoving(MAIN);
ReleaseCharacterView(MAIN);
DisableRegion(1);

if(TalkieIdle== 1) {

	if(IsOverlayValid(TalkieIdleSpeech)) {
	  
		RemoveOverlay(TalkieIdleSpeech);
	}
	
	ReleaseCharacterView(TALKIE);
	TalkieIdle= 0;
	WorkerIdle= 0;
}

else if(WorkerIdle== 1) {

	if(IsOverlayValid(WorkerIdleSpeech)) {
	  
		RemoveOverlay(WorkerIdleSpeech);
	}
	
	ReleaseCharacterView(WORKER);
	AnimateCharacter(WORKER, 5, 6, 1);
	TalkieIdle= 0;
	WorkerIdle= 0;
}

SetTimer(1, 0);
SetTimer(2, 0);
Wait(10);
PlayMusic(11);
SetMusicRepeat(1);
SetMusicMasterVolume(90);
character[MAIN].loop= 3;

Wait(10);
GUIOff(2);
GUIOn(4);
StartCutscene(5);

if(ConstructionScene== 0) {				// one cutscene or another

	Wait(10);
	ReleaseCharacterView(WORKER);
	AnimateCharacterEx(WORKER, 7, 5, 0, 0, 1);
	character[WORKER].loop= 4;
	Wait(10);
	character[WORKER].loop= 2;
	Wait(10);
	DisplaySpeech(WORKER, "... authorized personelle only!");
	Wait(10);
	character[WORKER].loop= 2;
	Wait(10);
	AnimateCharacterEx(WORKER, 7, 5, 0, 1, 1);
	AnimateCharacterEx(WORKER, 6, 5, 0, 0, 1);	// look right hammering
	AnimateCharacter(WORKER, 5, 6, 1);
	Wait(10);
	ReleaseCharacterView(WORKER);
	SetCharacterView(WORKER, 111);
	AnimateCharacter(WORKER, 1, 5, 1);
	int temp= DisplaySpeechBackground(WORKER, "We can't have any more accidents around here!");
	ReleaseCharacterView(MAIN);
	MoveCharacter(MAIN, 127, 143);
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	ReleaseCharacterView(WORKER);
	AnimateCharacter(WORKER, 5, 6, 1);
	
	EnableRegion(1);
	SetDialogOption(8, 10, 1);
	SetTimer(1, 100);				// enable idle's
	SetTimer(3, 200);
}

else if(ConstructionScene== 1) {			// one cutscene or another

	Wait(10);
	PlaySound(33);
	int temp= DisplaySpeechBackground(TALKIE, "... THIS IS A CONSTRUCTION ZONE YOU LITTLE MUTANT!");
	AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);
	Wait(20);
	ReleaseCharacterView(WORKER);
	AnimateCharacter(WORKER, 7, 5, 1);
	
	while(IsOverlayValid(temp)) {
	  
		Wait(1);
	}
	
	ReleaseCharacterView(TALKIE);
	Wait(10);
	ReleaseCharacterView(MAIN);
	MoveCharacter(MAIN, 127, 143);
	Wait(10);
	AnimateCharacterEx(WORKER, 7, 5, 0, 1, 1);
	AnimateCharacterEx(WORKER, 6, 5, 0, 0, 1);	// look right hammering
	AnimateCharacter(WORKER, 5, 6, 1);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "That'll get your attention...", 1);
	Wait(20);
	EnableRegion(1);
	SetDialogOption(8, 10, 1);
	SetTimer(1, 100);				// enable idle's
	SetTimer(3, 200);
}

Wait(30);
StopMusic();
SetMusicRepeat(0);
SetMusicMasterVolume(90);
Wait(30);

GUIOn(2);
GUIOff(4);
EndCutscene();
}


function hotspot17_b() {
  // script for hotspot17: Interact hotspot
  
if(ACTION== USE || ACTION== PUSH) {

	MoveCharacter(MAIN, 482, 168);
	
	while(GetViewportX() < 190) {
	
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 482, 168, 0);
	character[MAIN].loop= 0;
	Wait(10);
	NewRoom(12);
}
}


function object5_d() {
  // script for object5: Talk to object
  
if(GetGlobalInt(23)== 0) {
	
	MoveCharacter(MAIN, 98, 134);
}

else {

	MoveCharacter(MAIN, 98, 134);
	
	while(GetViewportX() < 0) {
	
		if(GetViewportY() > 0) {
		  
			SetViewport(GetViewportX() - 2, GetViewportY() - 1);
		}

		else {
		
			SetViewport(GetViewportX() - 2, GetViewportY());
		}

		Wait(1);
	}	

	MoveCharacterBlocking(MAIN, 98, 134, 0);
	
	DisplaySpeech(MAIN, "Hello, annoying walkie-talkie...");
	Wait(10);
	DisplaySpeech(TALKIE, "Grrr! I can't wait to get my hands on you!");
}
}

function object6_a() {
  // script for object6: Look at object
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "... It was convincing enough for ol' Dino.", 1);
}

$$$!$$$ ROOM room14.crm
$$$!$$$ RS
// text script for room

int XScroll= 0;
int CharacterX= 0;
int ViewportX= 0;
int IdleSpeech= 0;			// contains overlay id for hireling idle speech

import int BirdIdle;
import int CoffeeIdle;
import int HirelingIdle;
import int HirelingIdleSpeech;

function object1_a() {
  // script for object1: Pick up object
  
MoveCharacter(MAIN, 210, 111);

if(GetViewportX() < 80) {

	while(GetViewportX() < 80) {
	
		SetViewport(GetViewportX() + 2, 0);
		Wait(1);
	}
}

else if(GetViewportX() > 80) {

	while(GetViewportX() > 80) {
	
		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}
}

MoveCharacterBlocking(MAIN, 210, 111, 0);
character[MAIN].loop= 2;
Wait(10);

if(GetGlobalInt(22)== 0) {							// no kaboom in coffee

	SetTimer(1, 0);							// disable quincy's idle

	if(GetGlobalInt(69)== 0) {						// hasn't talked to him
	
		Wait(10);
		GUIOff(2);
		StartCutscene(5);
		
		character[MAIN].loop= 6;
		character[MAIN].frame= 2;
		Wait(15);
		ReleaseCharacterView(COFFEE);
		SetCharacterView(COFFEE, 135);
		SetCharacterSpeechView(COFFEE, 136);
		Wait(40);
		DisplaySpeech(COFFEE, "Um, I'm still drinking those...");
		Wait(10);
		ReleaseCharacterView(COFFEE);
		SetCharacterSpeechView(COFFEE, 17);
		SetTimer(1, 500);						// reset idle
		Wait(10);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "Oh, sorry.", 1);
		SetTimer(1, 300);
		Wait(20);
		
		GUIOn(2);
		EndCutscene();
	}	

	else if(GetGlobalInt(69)== 1) {						// talked to him once
	
		Wait(10);
		GUIOff(2);
		StartCutscene(5);
		
		Wait(20);
		int temp= DisplaySpeechBackground(MAIN, "Could I have one of these?");
		SetCharacterView(MAIN, 2);
		AnimateCharacter(MAIN, character[MAIN].loop, 5, 1);
		Wait(30);
		ReleaseCharacterView(COFFEE);
		SetCharacterView(COFFEE, 135);
		SetCharacterSpeechView(COFFEE, 136);
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}
		
		ReleaseCharacterView(MAIN);
		Wait(10);
		DisplaySpeech(COFFEE, "Sorry, that's my last one...");
		SetDialogOption(10, 9, 1);					// turn on ask for drink option
		Wait(10);
		ReleaseCharacterView(COFFEE);
		SetCharacterSpeechView(COFFEE, 17);
		SetTimer(1, 300);
		Wait(20);
		
		GUIOn(2);
		EndCutscene();
	}
}	
	
	
else if(GetGlobalInt(30)== 0) {				// kaboom in coffee and hasn't picked one up already
	
	Wait(10);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(20);
	DisplaySpeech(MAIN, "... it looks like there's one available!");
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(15);
	PlaySound(4);
	ObjectOff(1);
	AddInventory(7);
	SetGlobalInt(30, 1); 							// set state to has picked up a coffee drink
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	
	GUIOn(2);
	EndCutscene();
}
	
else {
	
	DisplaySpeechNoBlock(MAIN, "It's just an empty package.", 1);
}
}

function object1_b() {
  // script for object1: Use inventory on object
  
MoveCharacterBlocking(MAIN, 27, 124, 0);
character[MAIN].loop= 2;
Wait(10);
character[MAIN].x= 76;
character[MAIN].y= 174;
SetCharacterView(MAIN, 6);
AnimateCharacter(MAIN, 6, 5, 0);
Wait(30);
ObjectOff(1);
Wait(30);
AddInventory(26);
ReleaseCharacterView(MAIN);
character[MAIN].x= 27;
character[MAIN].y= 124;
character[MAIN].loop= 2;
}


function room_a() {
  // script for room: Player enters screen (before fadein)

  
character[MAIN].x= 0;
character[MAIN].y= 130;
character[MAIN].loop= 2;

ReleaseCharacterView(HIRELING);
character[HIRELING].x= 126;
character[HIRELING].y= 91;
character[HIRELING].loop= 0;
SetCharacterIdle(HIRELING, 24, 7);

character[BIRD].x= 381;
character[BIRD].y= 36;
character[BIRD].loop= 0;
SetCharacterIdle(BIRD, 37, 6);

ReleaseCharacterView(COFFEE);  
character[COFFEE].x= 276;
character[COFFEE].y= 120;
SetCharacterIdle(COFFEE, 18, 8);


if(GetGlobalInt(22)== 0) {
  
	character[COFFEE].loop= 0;			// empty
	SetTimer(1, 500);				// idle timer
}

else {

	character[COFFEE].loop= 1;			// full
}

SetTimer(2, 700);					// bird idle
SetTimer(3, 300);

DisableRegion(2);					// special region to exit park

if(GetGlobalInt(53)== 0) {				// first time entering room

	GUIOff(2);
	StartCutscene(5);
}
}

function hotspot1_a() {
  // script for hotspot1: Interact hotspot

if(ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 0, 130, 0);
	character[MAIN].loop= 1;
	
	FadeOut(5);
	Wait(60);
	SetScreenTransition(TRANSITION_FADE);
	
	NewRoom(12);
}
}

function room_b() {
  // script for room: Player enters screen (after fadein)
  
if(GetGlobalInt(7)== 6) {					// coming from map

	MoveCharacterBlocking(MAIN, 40, 133, 0);
	MoveCharacter(MAIN, 77, 130);
	SetGlobalInt(7, 0);					// set state to not in a building
	EnableRegion(2);					// special region to leave park
	SetScreenTransition(TRANSITION_CROSSFADE);
}

if(GetGlobalInt(53)== 0) {

	Wait(40);

	IdleSpeech= DisplaySpeechBackground(HIRELING, "Hotdogs!  Get your hotdogs heeee--yuh!");
	SetCharacterView(HIRELING, character[HIRELING].talkview + 1);
	AnimateCharacter(HIRELING, character[HIRELING].loop, 5, 1);
	HirelingIdle= 1;
	SetGlobalInt(53, 1);					// first room cutscene, set to 2 when he sees bird
	Wait(20);
	
	GUIOn(2);
	EndCutscene();
}

}

function object0_a() {
  // script for object0: Pick up object
  
MoveCharacterBlocking(MAIN, 360, 107, 0);
character[MAIN].loop= 2;
Wait(10);
character[MAIN].loop= 9;
character[MAIN].frame= 1;
Wait(20);
PlaySound(4);
ObjectOff(0);
AddInventory(16);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
}

function object2_a() {
  // script for object2: Pick up object
  
MoveCharacter(MAIN, 60, 119);

while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, GetViewportY());
	Wait(1);
}

MoveCharacterBlocking(MAIN, 60, 119, 0);
character[MAIN].loop= 2;
Wait(10);
character[MAIN].loop= 13;
character[MAIN].frame= 1;
Wait(10);

if(GetGlobalInt(56)== 1) {			// if he's bought a hotdog

	Wait(10);
	ObjectOff(2);
	AddInventory(23);
	PlaySound(4);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}

else {
	
	GUIOff(2);
	StartCutscene(5);
	
	if(HirelingIdle== 1) {
	
		HirelingIdle= 0;
		
		if(IsOverlayValid(HirelingIdleSpeech)) {
		
			RemoveOverlay(HirelingIdleSpeech);
		}

		ReleaseCharacterView(HIRELING);
	}

	Wait(20);
	DisplaySpeech(HIRELING, "I'm sorry, our ketchup is for paying Haute Dog customers only.");
	Wait(10);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "Sheesh.", 1);
	Wait(20);
	
	GUIOn(2);
	EndCutscene();
}
}

function hotspot1_b() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It leads back the way I came.", 1);
}

function room_c() {
  // script for room: Repeatedly execute
  
CheckSpeech();

ViewportX= GetViewportX();

CharacterX= character[MAIN].x;

if(CharacterX - ViewportX < 100) {

	XScroll= -1;
}

else if(CharacterX - ViewportX > 220) {

	XScroll= 1;
}

if(XScroll!= 0) {

	SetViewport(ViewportX+ (2* XScroll), 0);
}

if(ViewportX>= (game.room_width- 320) || 					// all the way right

  ViewportX<= 0 || 								// all the way left
 
  ((CharacterX - ViewportX)>= 150) && ((CharacterX - ViewportX)<= 170)) {	// he's in the middle

	XScroll= 0;
}

if(IsTimerExpired(1)) {						// coffee guy idle

	CoffeeIdle= 1;
	AnimateCharacter(COFFEE, 4, 6, 0);
	SetTimer(1, 700);
}


if(IsTimerExpired(2) && character[BIRD].room== 14) {		// bird idle

	if(BirdIdle== 0) {
	  
		BirdIdle= 1;
		ObjectOn(3);
		PlaySound(21);
		MoveObjectDirect(3, 385, 91, 5);
		SetTimer(2, 20);
	}
	
	else if(BirdIdle== 1) {
	
		ObjectOff(3);
		SetObjectPosition(3, 385, 26);
		SetTimer(2, 700);
		BirdIdle= 0;
	}
}

if(IsTimerExpired(3)) {

	int temp= 55 - Random(2);				// get random numbers for the 3 bird sfx
	PlaySound(temp);
	SetTimer(3, 300);
}

if(IsOverlayValid(IdleSpeech)== 0 && HirelingIdle== 1) {	// workaround to remove idle speech

	ReleaseCharacterView(HIRELING);
	HirelingIdle= 0;
}

if(character[COFFEE].animating== 0 && CoffeeIdle== 1) {		// return to normal after idle anim

	ReleaseCharacterView(COFFEE);
	character[COFFEE].loop= 0;
	CoffeeIdle= 0;
}
}

function hotspot2_a() {
  // script for hotspot2: Look at hotspot
  
MoveCharacterBlocking(MAIN, 70, 123, 0);
character[MAIN].loop= 3;
Wait(10);
DisplaySpeechNoBlock(MAIN, "... 7-Layer Hotdog... $3.", 1);

}

function hotspot2_b() {
  // script for hotspot2: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 70, 61);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I should talk to the hireling if I want to order.", 1);
}
}

function hotspot3_a() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, 64, 80);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's a napkin dispenser.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 64, 80);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "My hands are clean.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 64, 80);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't need one napkin", 1);
	DisplaySpeechNoBlock(MAIN, "Let alone a hundred.", 2);
}

}

function hotspot3_c() {
  // script for hotspot3: Pick up hotspot
  
FaceLocation(MAIN, 64, 80);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't need a napkin right now.", 1);
}

function hotspot4_a() {
  // script for hotspot4: Look at hotspot
  
FaceLocation(MAIN, 268, 106);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Very functional.", 1);
}

function hotspot4_b() {
  // script for hotspot4: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 268, 106);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't need a break yet.", 1);
}
}

function hotspot5_b() {
  // script for hotspot5: Look at hotspot
  
FaceLocation(MAIN, 436, 97);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I suppose it's symbolic of something.", 1);
}

function hotspot5_c() {
  // script for hotspot5: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 436, 97);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not THAT thirsty.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 436, 97);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It looks stable.", 1);
}
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot
  
FaceLocation(MAIN, 405, 126);
Wait(10);
DisplaySpeechNoBlock(MAIN, "No-Action Jackson. Created by Britton O'Toole.", 1);
}

function hotspot6_b() {
  // script for hotspot6: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 405, 126);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I think it's for display only.", 1);
}
}

function hotspot6_c() {
  // script for hotspot6: Pick up hotspot
  
FaceLocation(MAIN, 405, 126);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Plaques usually don't come in the 'able to pick up' category.", 1);
}

function object0_b() {
  // script for object0: Look at object
  
FaceLocation(MAIN, 374, 98);
Wait(10);
DisplaySpeechNoBlock(MAIN, "This has got to be Grandpa's cane.", 1);
}

function object1_c() {
  // script for object1: Look at object
  
FaceLocation(MAIN, 234, 82);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Looks like that's his last one.", 1);
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, 234, 82);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's was a 4-pack of coffee drinks...", 1);
}

function hotspot7_b() {
  // script for hotspot7: Pick up hotspot

MoveCharacter(MAIN, 210, 111);

if(GetViewportX() < 80) {

	while(GetViewportX() < 80) {
	
		SetViewport(GetViewportX() + 2, 0);
		Wait(1);
	}
}

else if(GetViewportX() > 80) {

	while(GetViewportX() > 80) {
	
		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}
}

MoveCharacterBlocking(MAIN, 210, 111, 0);
character[MAIN].loop= 2;
Wait(10);

if(GetGlobalInt(22)== 0) {							// no kaboom in coffee

	SetTimer(1, 0);							// disable quincy's idle

	if(GetGlobalInt(69)== 0) {						// hasn't talked to him
	
		Wait(10);
		GUIOff(2);
		StartCutscene(5);
		
		character[MAIN].loop= 6;
		character[MAIN].frame= 2;
		Wait(15);
		ReleaseCharacterView(COFFEE);
		SetCharacterView(COFFEE, 135);
		SetCharacterSpeechView(COFFEE, 136);
		Wait(40);
		DisplaySpeech(COFFEE, "Um, I'm still drinking those...");
		Wait(10);
		ReleaseCharacterView(COFFEE);
		SetCharacterSpeechView(COFFEE, 17);
		SetTimer(1, 500);						// reset idle
		Wait(10);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "Oh, sorry.", 1);
		SetTimer(1, 300);
		Wait(20);
		
		GUIOn(2);
		EndCutscene();
	}	

	else if(GetGlobalInt(69)== 1) {						// talked to him once
	
		Wait(10);
		GUIOff(2);
		StartCutscene(5);
		
		Wait(20);
		int temp= DisplaySpeechBackground(MAIN, "Could I have one of these?");
		SetCharacterView(MAIN, 2);
		AnimateCharacter(MAIN, character[MAIN].loop, 5, 1);
		Wait(30);
		ReleaseCharacterView(COFFEE);
		SetCharacterView(COFFEE, 135);
		SetCharacterSpeechView(COFFEE, 136);
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}
		
		ReleaseCharacterView(MAIN);
		Wait(10);
		DisplaySpeech(COFFEE, "Sorry, that's my last one...");
		SetDialogOption(10, 9, 1);					// turn on ask for drink option
		Wait(10);
		ReleaseCharacterView(COFFEE);
		SetCharacterSpeechView(COFFEE, 17);
		SetTimer(1, 300);
		Wait(20);
		
		GUIOn(2);
		EndCutscene();
	}
}	
	
	
else if(GetGlobalInt(30)== 0) {				// kaboom in coffee and hasn't picked one up already
	
	Wait(10);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(20);
	DisplaySpeech(MAIN, "It looks like there's one available...");
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(15);
	PlaySound(4);
	ObjectOff(1);
	AddInventory(7);
	SetGlobalInt(30, 1); 							// set state to has picked up a coffee drink
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	
	GUIOn(2);
	EndCutscene();
}
	
else {
	
	DisplaySpeechNoBlock(MAIN, "It's just an empty package.", 1);
}
}

function hotspot7_c() {
  // script for hotspot7: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, 236, 89);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I usually prefer soda.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 236, 89);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I need to have it in my hands.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 236, 89);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "There's no reason to try break it.", 1);
}


}

function object1_d() {
  // script for object1: Interact object
  
if(ACTION== USE) {
  
	FaceLocation(MAIN, 236, 89);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm more of a soda guy.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 236, 89);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I can't open what I don't have.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 236, 89);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "There's no reason to break it.", 1);
}
}

function object2_b() {
  // script for object2: Look at object
  
FaceLocation(MAIN, 86, 76);
Wait(10);
DisplaySpeechNoBlock(MAIN, "A bottle of ketchup.", 1);
}

function object2_c() {
  // script for object2: Interact object
  
if(GetGlobalInt(10)== 2) {			// if he's bought a hotdog

	MoveCharacterBlocking(MAIN, 107, 119, 0);
	character[MAIN].loop= 1;
	Wait(10);
	if(GetGlobalInt(10)== 2) {			// if he's bought a hotdog
	
		DisplaySpeechNoBlock(MAIN, "I think this hotdog has plenty of topping as it is.", 1);
	}

	else {
	
		character[MAIN].loop= 12;
		character[MAIN].frame= 1;
		Wait(10);
		DisplaySpeech(HIRELING, "I'm sorry, that's for paying customers only.");
		Wait(10);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
		DisplaySpeechNoBlock(MAIN, "Sheesh.", 1);
	}
}
}

function region1_a() {
  // script for region1: Player walks onto region

DisableRegion(1);
  
ReleaseCharacterView(MAIN);
MoveCharacter(MAIN, 352, 125);

while(GetViewportX() < 220) {

	SetViewport(GetViewportX() + 3, GetViewportY());
	Wait(1);
}

MoveCharacterBlocking(MAIN, 352, 125, 0);

if(BirdIdle== 1) {

	BirdIdle= 0;
	ObjectOff(3);
	MoveObjectDirect(3, 385, 26, 10);
}

if(CoffeeIdle== 1) {
	
	CoffeeIdle= 0;

	while(character[COFFEE].animating) {
	
		Wait(1);
	}
	
	ReleaseCharacterView(COFFEE);
}

SetTimer(1, 0);
SetTimer(2, 0);

Wait(10);
character[MAIN].loop= 3;
Wait(20);

GUIOff(2);
StartCutscene(5);

Wait(20);
DisplaySpeech(MAIN, "That bird still has Grandpa's cane!");
Wait(10);
ObjectOn(3);
MoveObjectDirect(3, 385, 91, 5);
Wait(10);
PlaySound(21);
ObjectOff(3);
MoveObjectDirect(3, 385, 26, 5);
Wait(40);
DisplaySpeechNoBlock(MAIN, "He must not be able to fly with it.", 1);
SetGlobalInt(53, 2);					// final room cutscene
Wait(20);
SetTimer(1, 200);
SetTimer(2, 600);

GUIOn(2);
EndCutscene();
}

function hotspot8_a() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Nobody's sitting there.", 1);
}

function hotspot8_b() {
  // script for hotspot8: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't really feel like sitting down.", 1);
}
}

function hotspot8_c() {
  // script for hotspot8: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "There's nothing on it.", 1);
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It doesn't look very full.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have anything I want to throw away.", 1);
}
}

function hotspot9_c() {
  // script for hotspot9: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "No thanks.", 1);
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I think this place just opened a couple weeks ago.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Interact hotspot
  
if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "The stand looks sturdy.", 1);
}
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "'Tommy Bun's Haute Dog'", 1);
DisplaySpeechNoBlock(MAIN, "Sounds fancy.", 2);
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's everything I'd expect to see in a hotdog stand...", 1);
DisplaySpeechNoBlock(MAIN, "Chips, soft drinks, pimply face hireling...", 2);
}

function hotspot12_b() {
  // script for hotspot12: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I think I should just give the hireling my order.", 1);
}
}

function hotspot12_c() {
  // script for hotspot12: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I can't reach any of that stuff from out here.", 1);
}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, 378, 91);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Looks like he's been here a while...", 1);
DisplaySpeechNoBlock(MAIN, "... he must not be very mobile.", 2);
}

function hotspot13_b() {
  // script for hotspot13: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 378, 91);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not touching that!", 1);

}
}

function hotspot13_c() {
  // script for hotspot13: Pick up hotspot
  
FaceLocation(MAIN, 378, 91);
Wait(10);
DisplaySpeechNoBlock(MAIN, "No.", 1);
}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, 406, 16);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's a big tree.", 1);
}

function hotspot15_a() {
  // script for hotspot15: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's a big green tree.", 1);
}

function hotspot14_b() {
  // script for hotspot14: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, 406, 16);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I can't climb it.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 406, 16);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's very sturdy looking.", 1);
}
}

function hotspot15_b() {
  // script for hotspot15: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "There are too many branches to climb it.", 1);
}
}

function hotspot16_a() {
  // script for hotspot16: Look at hotspot
  
FaceLocation(MAIN, GetViewportX() + mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That would be a nice spot to sit.", 1);
}

function hotspot16_b() {
  // script for hotspot16: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't need a break!", 1);
}
}

function region2_a() {
  // script for region2: Player walks onto region
  
MoveCharacterBlocking(MAIN, 0, 130, 0);
character[MAIN].loop= 1;
NewRoom(12);
}

function region3_a() {
  // script for region3: Player walks onto region
  
if(HirelingIdle== 0) {

	HirelingIdle= 1;
	int HirelingSpeechCounter= Random(2);
	
	if(HirelingSpeechCounter== 0) {
	
		HirelingIdleSpeech= DisplaySpeechBackground(HIRELING, "Hotdogs!  Get your hotdogs heeee--yuh!");
		SetCharacterView(HIRELING, character[HIRELING].talkview + 1);
		AnimateCharacter(HIRELING, character[HIRELING].loop, 5, 1);	
	}
	
	else if(HirelingSpeechCounter== 1) {
	
		HirelingIdleSpeech= DisplaySpeechBackground(HIRELING, "Could I interest you in a Tommy Bun Haute Dog today, sir?");
		SetCharacterView(HIRELING, character[HIRELING].talkview + 1);
		AnimateCharacter(HIRELING, character[HIRELING].loop, 5, 1);	
	}

	else if(HirelingSpeechCounter== 2) {
	
		HirelingIdleSpeech= DisplaySpeechBackground(HIRELING, "Seven-layer Haute Dog... only ONE DOLLAR!");
		SetCharacterView(HIRELING, character[HIRELING].talkview + 1);
		AnimateCharacter(HIRELING, character[HIRELING].loop, 5, 1);	
	}
}
}

$$$!$$$ ROOM room15.crm
$$$!$$$ RS
// text script for room


int XScroll= 0;
int YScroll= 0;
int EdgeX= 80;
int x= 80;
int EdgeY= 56;
int y= 56;

int SteveIdleCounter= 0;			// counter for different idle talking while he's outside

import int SteveIdle;				// flag to see if he's talking or not
import int SteveIdleSpeech;					// variable with DisplaySpeechBackground overlay id's

function object0_a() {
  // script for object0: Interact with object

if(ACTION== USE || ACTION== OPEN || ACTION== PUSH || ACTION== PULL) {
  
	MoveCharacterBlocking(MAIN, 307, 161, 0);
	character[MAIN].loop= 3;
	Wait(20);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(20);
	character[MAIN].loop= 7;
	character[MAIN].frame= 2;
	Wait(40);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	Wait(10);
	DisplaySpeech(MAIN, "Hmm... it's locked.", 1);
	Wait(20);
	
	GUIOn(2);
	EndCutscene();
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 295, 135);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already shut.", 1);
}
}

function room_a() {
  // script for room: Player enters screen (after fadein)

PlayAmbientSound(1, 37, 100, 30, 126);				// air conditioning sfx

if(GetGlobalInt(42)== 1) {
  
	PlayAmbientSound(1, 37, 100, 30, 126);
	Wait(40);
	character[MAIN].loop= 2;
	
	if(GetGlobalInt(25)== 0) {
	  
		Wait(10);
		DisplaySpeech(MAIN, "... fascinating.");
	}
	
	Wait(20);
	SetGlobalInt(42, 0);						// no longer in cutscene
	SetGlobalInt(25, 1);						// set vent state to talked thru
	SetScreenTransition(TRANSITION_CROSSFADE);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();
}

else if(GetGlobalInt(42)== 2) {

	Wait(20);
	character[STEVE].room= 15;
	character[STEVE].x= 270;
	character[STEVE].y= 145;
	character[STEVE].loop= 2;	
	ObjectOff(0);
	Wait(10);
	MoveCharacterBlocking(STEVE, 312, 158, 1);
	Wait(10);
	DisplaySpeech(STEVE, "... who'll enter my world of pain!");
	Wait(10);
	MoveCharacterPath(STEVE, 81, 187);					// walk to air conditioner
	MoveCharacterPath(STEVE, 81, 186);
	SetGlobalInt(34, 1);							// set state to outside
	
	while(GetViewportX() > 0) {
	
		SetViewport(GetViewportX() - 2, 56);
		Wait(1);
	}
	
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(16);
	ObjectOn(2);
	ObjectOn(3);
	ObjectOff(4);
	character[TALKIE].room= -1;
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	Wait(5);
	MoveCharacterBlocking(MAIN, -50, 150, 1);
	SetCharacterTransparency(MAIN, 100);
	Wait(20);
	
	while(GetViewportX() < 80) {
	
		SetViewport(GetViewportX() + 2, 56);
		Wait(1);
	}
	
	EdgeX= 80;
	x= 80;
	character[MAIN].x= 313;
	character[MAIN].y= 118;
	SetCharacterTransparency(MAIN, 0);
	MoveCharacterBlocking(MAIN, 364, 142, 1);
	MoveCharacterBlocking(MAIN, 364, 156, 1);
	DisplaySpeechNoBlock(MAIN, "... owned.", 1);
	ChangeCharacterView(STEVE, 32);
	SetCharacterSpeechView(STEVE, 33);
	SetTimer(1, 100);						// start steve idle talking
	Wait(10);
	SetGlobalInt(42, 0);						// no longer in cutscene
	StopMusic();
	Wait(30);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();	
}

else if(GetGlobalInt(42)== 3) {

	Wait(20);
	character[STEVE].room= 15;
	character[STEVE].x= 270;
	character[STEVE].y= 145;
	character[STEVE].loop= 2;	
	ObjectOff(0);
	Wait(10);
	MoveCharacterBlocking(STEVE, 312, 158, 1);
	Wait(10);
	DisplaySpeech(STEVE, "... who is that?");
	Wait(10);
	MoveCharacterPath(STEVE, 81, 187);					// walk to air conditioner
	MoveCharacterPath(STEVE, 81, 186);
	SetGlobalInt(34, 1);							// set state to outside
	
	while(GetViewportX() > 0) {
	
		SetViewport(GetViewportX() - 2, 56);
		Wait(1);
	}
	
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(16);
	ObjectOn(2);
	ObjectOn(3);
	ObjectOff(4);
	character[TALKIE].room= -1;
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	Wait(5);
	MoveCharacterBlocking(MAIN, -50, 150, 1);
	SetCharacterTransparency(MAIN, 100);
	Wait(20);
	
	while(GetViewportX() < 80) {
	
		SetViewport(GetViewportX() + 2, 56);
		Wait(1);
	}
	
	EdgeX= 80;
	x= 80;
	character[MAIN].x= 313;
	character[MAIN].y= 118;
	SetCharacterTransparency(MAIN, 0);
	MoveCharacterBlocking(MAIN, 364, 142, 1);
	MoveCharacterBlocking(MAIN, 364, 156, 1);
	ChangeCharacterView(STEVE, 32);
	SetCharacterSpeechView(STEVE, 33);
	SetTimer(1, 100);						// idle talking
	Wait(10);
	SetGlobalInt(42, 0);						// no longer in cutscene
	StopMusic();
	Wait(30);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();	
}

else if(GetGlobalInt(13)== 8) {					// anderson rescued

	MoveCharacterBlocking(MAIN, 320, 161, 1);
	DisplaySpeechNoBlock(MAIN, "... and now to get Morry.", 1);
	SetGlobalInt(7, 0);					// set state to not in a building
	SetGlobalInt(33, 0);					// doesn't use robe anymore
	SetGlobalInt(13, 0);					// not in cutscene anymore
	Wait(20);
	
	GUIOn(2);
}


else {
	  
	if(GetGlobalInt(7)== 6) {					// coming from map
	
		MoveCharacter(MAIN, 359, 157);
		SetGlobalInt(7, 0);					// set state to not in a building
		SetScreenTransition(TRANSITION_CROSSFADE);
	}
	
	else if(GetGlobalInt(7)== 3) {					// coming from dojo
	
		MoveCharacterBlocking(MAIN, 307, 156, 1);
		MoveCharacter(MAIN, 320, 161);
		SetGlobalInt(7, 0);					// set state to not in a building
		
		if(GetGlobalInt(33)== 1) {

			GUIOff(2);
			StartCutscene(5);
			
			Wait(20);
			DisplaySpeech(MAIN, "... I don't need this on anymore.");
			Wait(10);
			MoveCharacterBlocking(MAIN, 370, 146, 1);
			MoveCharacterBlocking(MAIN, 308, 122, 1);
			ChangeCharacterView(MAIN, 1);
			SetCharacterIdle(MAIN, 61, 5);
			character[MAIN].talkview= 1;
			AddInventory(12);
			LoseInventory(35);
			SetGlobalInt(33, 2);					// set state to robe off, but put on before
			MoveCharacterBlocking(MAIN, 364, 142, 1);
			MoveCharacterBlocking(MAIN, 364, 156, 1);
			DisplaySpeechNoBlock(MAIN, "... that's better.", 1);
			Wait(20);
			
			GUIOn(2);
			EndCutscene();
		}

		else if(GetGlobalInt(34)== 1) {				// special case, steve still outside
		
			SetTimer(1, 50);
		}
	}
}
}

function room_b() {
  // script for room: Player enters screen (before fadein)

SetTimer(2, 300);						// ambient bird noises

if(GetGlobalInt(42)== 1) {					// cutting back from echo in dojo

	if(GetGlobalInt(25)== 0) {				// if it's first time talking in vent, start cutscene
		  
		StartCutscene(5);
	}
	
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	SetCharacterIdle(MAIN, 61, 5);
	character[MAIN].x= 33;
	character[MAIN].y= 165;
	character[MAIN].loop= 2;
	SetCharacterTransparency(MAIN, 0);
	ObjectOff(0);						// open the door
	EnableHotspot(2);
	SetGlobalInt(13, 0);					// back from cutscene in intro
}

else if(GetGlobalInt(42)== 2) {					// cutting back from echo in dojo

	SetCharacterTransparency(MAIN, 0);
	SetViewport(80, 56);
}

else if(GetGlobalInt(42)== 3) {

	SetCharacterTransparency(MAIN, 0);
	SetViewport(80, 56);
}

else if(GetGlobalInt(13)== 8) {
	  
	ChangeCharacterView(MAIN, 1);
	character[MAIN].talkview= 1;
	SetCharacterIdle(MAIN, 61, 5);
	AddInventory(12);
	LoseInventory(35);
	SetGlobalInt(33, 2);					// set state to robe off, but put on before
	
	character[MAIN].x= 301;
	character[MAIN].y= 150;
	character[MAIN].loop= 0;
	EdgeX= 80;
	x= 80;
	EdgeY= 56;
	y= 56;
}

else {

	SetViewport(80, 56);
	
	SetObjectView(1, 52);						// animate air conditioning fan
	AnimateObject(1, 3, 3, 1);
	
	if(IsObjectOn(4)== 1) {						// if vent door is open
	
		EnableHotspot(3);
	}
	
	else {
	
		DisableHotspot(3);
	}
	
	if(GetGlobalInt(7)== 6) {					// coming from map
	
		character[MAIN].x= 399;
		character[MAIN].y= 152;
		character[MAIN].loop= 1;
		EdgeX= 80;
		x= 80;
		EdgeY= 56;
		y= 56;
		
	}
	
	else if(GetGlobalInt(7)== 3) {					// coming from dojo
	
		if(GetGlobalInt(33)== 3) {
		  
			ChangeCharacterView(MAIN, 1);
			character[MAIN].talkview= 1;
			SetCharacterIdle(MAIN, 61, 5);
			AddInventory(12);
			LoseInventory(35);
			SetGlobalInt(33, 2);					// set state to robe off, but put on before
		}

		character[MAIN].x= 301;
		character[MAIN].y= 150;
		character[MAIN].loop= 0;
		EdgeX= 80;
		x= 80;
		EdgeY= 56;
		y= 56;
		
		StopMusic();
	}
}
}

function hotspot1_a() {
  // script for hotspot1: Interact hotspot

if(ACTION== USE) {

	MoveCharacter(MAIN, 400, 169);
	
	while(GetViewportX() < 80) {
	
		SetViewport(GetViewportX() + 2, 56);
		Wait(1);
	}
  
	MoveCharacterBlocking(MAIN, 400, 169, 0);
	FadeOut(5);
	
	if(GetGlobalInt(34)== 1) {					// special case, steve outside looking and jackson leaves room
	
		character[STEVE].room= 19;
		SetGlobalInt(34, 0);
	}
	
	Wait(30);
	StopMusic();
	SetScreenTransition(TRANSITION_FADE);
	Wait(30);
	NewRoom(12);
}
}

function room_c() {
  // script for room: Repeatedly execute

CheckSpeech();
  
if(XScroll== 0) {						// check to see if we need to scroll 

	if(character[MAIN].x- EdgeX >= 270) {			// if character is 50 pixels from right edge
	
		/*if(EdgeX < 320) {	<-- not needed, room only scrols once
			x= EdgeX;
			EdgeX+= 80;				// set the new screen boarder
			XScroll= 1;				// flag to start scrolling each cycle
		}
		
		else { */
			x= EdgeX;
			EdgeX= 80;
			XScroll= 1;
		//}
	}

	else if(character[MAIN].x- EdgeX <= 50) {		// if character is 50 pixels from left edge...
	
		/* if(EdgeX> 220) {				// if we can scroll
			x= EdgeX;
			EdgeX-= 220;
			XScroll= -1;				// flag to know that we need to start scrolling to the left
		}
		else { */
			x= EdgeX;
			EdgeX= 0;
			XScroll= -1;
		//}
	}
}

else if(XScroll!= 0) {

	if(EdgeX== x) {						// to eventually stop
	
		XScroll= 0;
	}
	
	x+= ((EdgeX- x)/32) + XScroll;				// scrolling 
	SetViewport(x, 56);					// set the viewport each game cycle	
}

if(IsTimerExpired(1)) {

	if(character[STEVE].room== 15) {				// he's outside
	
		if(SteveIdleCounter== 0) {
		
			SteveIdleSpeech= DisplaySpeechBackground(STEVE, "I know I heard SOMETHING yelling...");
			SetCharacterView(STEVE, character[STEVE].talkview + 1);
			AnimateCharacter(STEVE, character[STEVE].loop, 5, 1);
		}
		
		else if(SteveIdleCounter== 1) {
		
			SteveIdleSpeech= DisplaySpeechBackground(STEVE, "... I wonder where it went?");
			SetCharacterView(STEVE, character[STEVE].talkview + 1);
			AnimateCharacter(STEVE, character[STEVE].loop, 5, 1);
		}
		
		else if(SteveIdleCounter== 2) {
		
			SteveIdleSpeech= DisplaySpeechBackground(STEVE, "... nobody talks to me like that!");
			SetCharacterView(STEVE, character[STEVE].talkview + 1);
			AnimateCharacter(STEVE, character[STEVE].loop, 5, 1);
		}
	}
	
	SetTimer(1, 300);
	SteveIdle= 1;
	
	if(SteveIdleCounter > 2) {
	
		SteveIdleCounter= Random(2);
	}
	
	else {

		SteveIdleCounter++;
	}
}

if(IsOverlayValid(SteveIdleSpeech)== 0 && SteveIdle== 1) {
	  
	ReleaseCharacterView(STEVE);
	SteveIdle= 0;
}

if(IsTimerExpired(2)) {

	int temp= 55 - Random(2);				// get random numbers for the 3 bird sfx
	PlaySound(temp);
	SetTimer(2, 300);
}

}


function hotspot2_a() {
  // script for hotspot2: Interact hotspot
  
if(ACTION== USE) {

	MoveCharacter(MAIN, 305, 155);
	
	while(GetViewportX() < 80) {
	
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
  
	MoveCharacterBlocking(MAIN, 305, 155, 0);
	character[MAIN].loop= 1;
	Wait(5);
	MoveCharacterBlocking(MAIN, 272, 142, 1);
	NewRoom(19);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 293, 135);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It heads back the way I came.", 1);
}

else if(ACTION== CLOSE) {

	MoveCharacter(MAIN, 305, 155);
	
	while(GetViewportX() < 80) {
	
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 305, 155, 0);
	character[MAIN].loop= 1;
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Something holding it open from the inside.", 1);
}
}

function object2_a() {
  // script for object2: Interact object

if(ACTION== USE || ACTION== OPEN || ACTION== PUSH || ACTION== PULL) {

	MoveCharacterBlocking(MAIN, 33, 160, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	
	if(IsObjectOn(3)== 0) {
	  
		Wait(20);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		Wait(10);
		DisplaySpeech(MAIN, "It's stuck.");
	}
	
	else {
		Wait(15);
		PlaySound(41);
		ObjectOff(2);					// turn off hatch
		ObjectOff(3);					// turn off grease
		ObjectOn(4);					// turn on greasy hatch
		
		if(GetGlobalInt(25)== 2) {			// if walkie talkie has been placed
		
			character[TALKIE].room= 15;
		}

		EnableHotspot(3);				// enable hotspot for open hatch
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
	}
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 50, 135);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function object2_b() {
  // script for object2: Use inventory on object
  
MoveCharacterBlocking(MAIN, 40, 158, 0);
character[MAIN].loop= 2;
Wait(20);
GUIOff(2);
StartCutscene(5);

Wait(40);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(5);
PlaySound(21);
Wait(10);
ObjectOn(3);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's nice and lubricated now.", 1);
Wait(20);

GUIOn(2);
EndCutscene();

}

function hotspot3_a() {
  // script for hotspot3: Use inventory on hotspot
  
MoveCharacterBlocking(MAIN, 33, 160, 0);
character[MAIN].loop= 2;
Wait(10);

if(GetGlobalInt(25)== 1) {							// if vent has been talked through

	SetMusicMasterVolume(30);
	SetMusicRepeat(1);
	PlayMusic(11);
	SetMusicRepeat(0);
	Wait(10);
	GUIOff(2);
	GUIOn(4);
	StartCutscene(5);
	Wait(20);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(15);
	character[TALKIE].room= 15;
	ChangeCharacterView(TALKIE, 224);
	SetCharacterSpeechView(TALKIE, 224);
	character[TALKIE].x= 61;
	character[TALKIE].y= 136;
	LoseInventory(32);
	SetGlobalInt(25, 2);							// set state to walkie talkie in vent
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	Wait(10);
	PlaySound(33);
	DisplaySpeech(TALKIE, "... YOU LITTLE PUNK!");
	
	while(GetViewportY()!= 0) {

		SetViewport(0, (GetViewportY() - 2));
		Wait(1);
	}
	
	Wait(10);
	character[TALKIE].loop= 1;
	DisplaySpeechAt(16, 20, 50, TALKIE, "YOU LITTLE PUNK!");
	character[MAIN].loop= 3;
	Wait(5);
	DisplaySpeechAt(120, 20, 50, TALKIE, "YOU LITTLE PUNK!");
	Wait(5);
	DisplaySpeechAt(25, 10, 50, TALKIE, "YOU LITTLE PUNK!");
	Wait(20);
	SetCharacterTransparency(MAIN, 100);
	SetGlobalInt(42, 2);						// flag to check for cutscene
	character[TALKIE].loop= 0;
	NewRoom(19);
}

else {

	DisplaySpeech(MAIN, "I should find out where it leads first.");
}
}

function hotspot3_b() {
  // script for hotspot3: Talk to hotspot

if(GetGlobalInt(25)== 0) {
  
	MoveCharacterBlocking(MAIN, 33, 160, 0);
	character[MAIN].loop= 2;
	Wait(10);
	SetMusicMasterVolume(30);
	SetMusicRepeat(1);
	PlayMusic(11);
	SetMusicRepeat(0);
	Wait(10);
	GUIOff(2);
	GUIOn(4);							// turn on "screen" GUI for scrolling
	StartCutscene(5);
	
	Wait(20);
	DisplaySpeech(MAIN, "... hello?");
	Wait(5);
	character[MAIN].talkview= -1;					// so he doesn't animate while echoing
	
	while(GetViewportY() != 0) {
	
		SetViewport(0, (GetViewportY() - 2));
		Wait(1);
	}
	
	Wait(10);
	DisplaySpeechAt(16, 20, 50, MAIN, "Hello?");
	Wait(5);
	character[MAIN].loop= 3;
	Wait(5);
	DisplaySpeechAt(120, 20, 50, MAIN, "Hello?");
	Wait(5);
	DisplaySpeechAt(25, 10, 50, MAIN, "Hello?");
	Wait(5);
	character[MAIN].talkview= 1;					// reset talking view
	Wait(20);
	SetCharacterTransparency(MAIN, 100);
	SetGlobalInt(42, 1);						// flag to check for cutscene
	NewRoom(19);
}

else if(GetGlobalInt(25)== 1) {

	MoveCharacterBlocking(MAIN, 33, 160, 0);
	character[MAIN].loop= 2;
	Wait(10);
	SetMusicMasterVolume(30);
	SetMusicRepeat(1);
	PlayMusic(11);
	SetMusicRepeat(0);
	Wait(10);
	GUIOff(2);
	GUIOn(4);							// turn on "screen" GUI for scrolling
	StartCutscene(5);
	
	Wait(20);
	DisplaySpeech(MAIN, "... hello?");
	Wait(5);
	character[MAIN].talkview= -1;					// so he doesn't animate while echoing
	
	while(GetViewportY() != 0) {
	
		SetViewport(0, (GetViewportY() - 2));
		Wait(1);
	}
	
	Wait(10);
	DisplaySpeechAt(16, 20, 50, MAIN, "Hello?");
	Wait(5);
	character[MAIN].loop= 3;
	Wait(5);
	DisplaySpeechAt(120, 20, 50, MAIN, "Hello?");
	Wait(5);
	DisplaySpeechAt(25, 10, 50, MAIN, "Hello?");
	Wait(5);
	character[MAIN].talkview= 1;					// reset talking view
	Wait(20);
	SetCharacterTransparency(MAIN, 100);
	SetGlobalInt(42, 1);						// flag to check for cutscene
	NewRoom(19);
}


}





function hotspot1_b() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, 396, 165);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It heads back the way I came.", 1);
}

function hotspot2_b() {
  // script for hotspot2: Look at hotspot
  
FaceLocation(MAIN, 396, 165);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Looks like he's got the door open now.", 1);
}

function hotspot2_c() {
  // script for hotspot2: Pick up hotspot
  
MoveCharacterBlocking(MAIN, 308, 167, 0);
character[MAIN].loop= 1;
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's being held open from inside.", 1);
}

function hotspot3_c() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, 50, 135);
Wait(5);
DisplaySpeechNoBlock(MAIN, "The vent leads back into the air condition machine.", 1);
}

function hotspot3_d() {
  // script for hotspot3: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 50, 135);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm not going to stick my arm in there!", 1);
	DisplaySpeechNoBlock(MAIN, "All my gaming experience is with two hands.", 2);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 50, 135);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}

else if(ACTION== CLOSE) {

	MoveCharacterBlocking(MAIN, 33, 160, 0);
	character[MAIN].loop= 2;
	Wait(5);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(5);
	ObjectOn(2);					// turn on hatch
	ObjectOn(3);					// turn on grease
	ObjectOff(4);					// turn off greasy hatch
	DisableHotspot(3);				// enable hotspot for open hatch
	Wait(5);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}
}

function hotspot4_a() {
  // script for hotspot4: Look at hotspot
  
FaceLocation(MAIN, 87, 147);
Wait(5);
DisplaySpeechNoBlock(MAIN, "A public garbage can.", 1);
DisplaySpeechNoBlock(MAIN, "I'm sure there's all kinds of gross stuff in there.", 2);
}

function hotspot4_b() {
  // script for hotspot4: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 87, 147);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't need to throw anything away.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 87, 147);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm not sure I want to know what's in there.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 87, 147);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 87, 147);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It would just mean a big mess for someone to clean up.", 1);
	DisplaySpeechNoBlock(MAIN, "Probably me.", 2);
}
}

function hotspot4_c() {
  // script for hotspot4: Pick up hotspot
  
FaceLocation(MAIN, 87, 147);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I'll leave that for the friendly neighborhood garbageman.", 1);
}

function hotspot5_a() {
  // script for hotspot5: Look at hotspot
  
MoveCharacterBlocking(MAIN, 205, 175, 0);
character[MAIN].loop= 3;
Wait(20);
GUIOff(2);
StartCutscene(5);

Wait(20);
DisplaySpeech(MAIN, "I see Anderson in there!");
DisplaySpeechNoBlock(MAIN, "It looks like he's in class with some other students.", 1);
Wait(20);

GUIOn(2);
EndCutscene();
}

function hotspot5_b() {
  // script for hotspot5: Interact hotspot

if(ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 205, 175, 0);
	character[MAIN].loop= 1;
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I see Anderson in there!", 1);
	DisplaySpeechNoBlock(MAIN, "Looks like he's stuck in class.", 2);
}

}

function hotspot5_c() {
  // script for hotspot5: Talk to hotspot
  
MoveCharacterBlocking(MAIN, 205, 175, 0);
character[MAIN].loop= 1;
Wait(5);
DisplaySpeechNoBlock(MAIN, "HEY!", 1);
DisplaySpeechNoBlock(MAIN, "LET MY FRIEND OUT OF THERE!", 2);
DisplaySpeechNoBlock(MAIN, "Doesn't seem like they can hear me.", 3);
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot
  
FaceLocation(MAIN, 43, 104);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It runs all the way up the side of the building.", 1);
}

function hotspot6_b() {
  // script for hotspot6: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 43, 104);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "There aren't any openings.", 1);
	DisplaySpeechNoBlock(MAIN, "It runs straight down into the air conditioning unit.", 2);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 43, 104);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It looks too sturdy to manipulate.", 1);
}
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, 28, 128);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Looks like it's on.", 1);
DisplaySpeechNoBlock(MAIN, "I'm sure it's keeping this building cool.", 2);
}

function hotspot7_b() {
  // script for hotspot7: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 28, 128);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't see any sort of controls on the outside.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 28, 128);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It looks like the only way in is through that hatch.", 1);
}
}

function object0_b() {
  // script for object0: Look at object
  
FaceLocation(MAIN, 295, 135);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's shut.", 1);
}

function object2_c() {
  // script for object2: Look at object
  
FaceLocation(MAIN, 50, 135);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a small door for the air conditioning unit.", 1);
}

function object4_a() {
  // script for object4: Look at object
  
FaceLocation(MAIN, 63, 127);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a small door for the air conditioning unit.", 1);
}

function object4_b() {
  // script for object4: Interact object

if(ACTION== OPEN) {

	FaceLocation(MAIN, 50, 135);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}

else if(ACTION== CLOSE || ACTION== USE) {

	MoveCharacterBlocking(MAIN, 33, 160, 0);
	character[MAIN].loop= 2;
	Wait(5);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(5);
	ObjectOn(2);					// turn on hatch
	ObjectOn(3);					// turn on grease
	ObjectOff(4);					// turn off greasy hatch
	ObjectOff(5);
	DisableHotspot(3);				// enable hotspot for open hatch
	Wait(5);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}
}





function hotspot8_a() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, 165, 110);
Wait(10);
DisplaySpeechNoBlock(MAIN, "'Free workout at 25 Hour Fitness--", 1);
DisplaySpeechNoBlock(MAIN, "'Inquire inside.'", 2);
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, 215, 107);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I guess that's the guy who runs this place.", 1);
DisplaySpeechNoBlock(MAIN, "Looks like a real loon.", 2);
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It spices up the building a little bit.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Interact hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I can't reach it.", 1);
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It a martial arts dojo.", 1);
}


function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Strange looking poster.", 1);
}

function hotspot12_b() {
  // script for hotspot12: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I'd rather leave it on the wall.", 1);
}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It looks healthy.", 1);
}

function hotspot13_b() {
  // script for hotspot13: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It doesn't really look climbable.", 1);
}
}

function object2_d() {
  // script for object2: Use inventory on object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "There isn't any sort of keyhole to tinker with...", 1);
}

function region1_a() {
  // script for region1: Player walks onto region

if(GetGlobalInt(34)== 1) {					// if he's outside of the building
  
	MoveCharacter(MAIN, 207, 178);
	
	while(GetViewportX() > 0) {
	
		SetViewport(GetViewportX() - 2, GetViewportY());
		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 207, 178, 0);
	character[MAIN].loop= 1;
	
	if(SteveIdle== 1) {
	
		ReleaseCharacterView(STEVE);
		
		if(IsOverlayValid(SteveIdleSpeech)) {
		
			RemoveOverlay(SteveIdleSpeech);
		}
	}
	
	SetTimer(1, 0);					// disable idle talking
	Wait(10);
	SetMusicMasterVolume(30);
	SetMusicRepeat(0);
	PlayMusic(8);
	Wait(10);
	
	GUIOff(2);
	StartCutscene(5);
	
	Wait(10);
	character[STEVE].loop= 2;
	Wait(10);
	int temp= DisplaySpeechBackground(STEVE, "Wha...?");
	SetCharacterView(STEVE, 33);
	character[STEVE].frame= 4;
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	ReleaseCharacterView(STEVE);
	Wait(20);
	DisplaySpeech(STEVE, "... have you seen anything out here harassing my dojo?");
	Wait(30);
	DisplaySpeech(MAIN, "... I haven't seen anybody.");
	Wait(20);
	character[STEVE].loop= 0;
	Wait(5);
	character[STEVE].loop= 1;
	Wait(10);
	DisplaySpeech(STEVE, "Dang it!", 1);
	ChangeCharacterView(STEVE, 167);
	SetCharacterSpeechView(STEVE, 168);
	Wait(10);
	character[STEVE].loop= 0;
	Wait(5);
	character[STEVE].loop= 2;
	Wait(30);
	ChangeCharacterView(STEVE, 170);
	ReleaseCharacterView(STEVE);
	MoveCharacter(STEVE, 312, 158);
	Wait(10);
	
	while(GetViewportX() < 80) {
	
		SetViewport(GetViewportX() + 2, GetViewportY()); 
		Wait(1);
	}
	
	Wait(40);
	character[MAIN].loop= 0;
	Wait(5);
	character[MAIN].loop= 2;
	MoveCharacterBlocking(STEVE, 312, 158, 0);
	character[STEVE].loop= 3;
	Wait(5);
	MoveCharacterBlocking(STEVE, 270, 145, 1);
	character[STEVE].room= 19;
	ChangeCharacterView(STEVE, 32);
	SetCharacterSpeechView(STEVE, 33);
	SetGlobalInt(34, 0);					// set state back to instructing class
	Wait(10);
	SetMusicMasterVolume(90);
	Wait(30);
	
	GUIOn(2);
	EndCutscene();
}
}










function object2_e() {
  // script for object2: Use inventory on object
  
MoveCharacterBlocking(MAIN, 40, 158, 0);
character[MAIN].loop= 2;
Wait(20);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(10);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(10);
DisplaySpeechNoBlock(MAIN, "It still looks stuck...", 1);
}

function object2_f() {
  // script for object2: Use inventory on object
  
MoveCharacterBlocking(MAIN, 40, 158, 0);
character[MAIN].loop= 2;
Wait(10);
DisplaySpeechNoBlock(MAIN, "Dexcalibur's more of a slashing weapon...", 1);
}




function object3_a() {
  // script for object3: Look at object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's lubricated the hatch!", 1);
}

function object3_b() {
  // script for object3: Interact object
  
if(ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I should open the hatch.", 1);
}
}


function hotspot3_e() {
  // script for hotspot3: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(10);
DisplaySpeech(MAIN, "It leads back into the machinery.", 1);
}

$$$!$$$ ROOM room16.crm
$$$!$$$ RS
// text script for room

function hotspot1_a() {
  // script for hotspot1: Player stands on hotspot
  
DisableHotspot(2);
MoveCharacterBlocking(MAIN, 63, 138, 1);
EnableHotspot(2);

}

function hotspot2_a() {
  // script for hotspot2: Player stands on hotspot
  
DisableHotspot(1);
MoveCharacterBlocking(MAIN, -50, 138, 1);
EnableHotspot(1);
NewRoom(12);
}

function room_a() {
  // script for room: Player enters screen (after fadein)
  
if(GetGlobalInt(7)== 2) {			// if character came from fitness club
      MoveCharacterDirect(MAIN, 208, 140);
      ObjectOn(0);
      ObjectOff(1);
}

SetGlobalInt(7, 0);				// change character state to not in a building
}

function object0_a() {
  // script for object0: Interact with object
  
if(ACTION== USE || OPEN) {
  	MoveCharacterBlocking(MAIN, 202, 136, 0);
      FaceLocation(MAIN, 0, 72);
      Wait(5);
      SetCharacterView(MAIN, 2);
      AnimateCharacter(MAIN, 5, 10, 0);
      ObjectOn(1);
      ObjectOff(0);
      Wait(5);
      ReleaseCharacterView(MAIN);
      character[MAIN].loop= 3;
      NewRoomEx(18, 673, 147);
}
}

$$$!$$$ ROOM room17.crm
$$$!$$$ RS
// text script for room

int Map= 0;				// boolean for whether he goes back to map or not

int CharacterX;
int ViewportX;

int XScroll= 0;
int IdlePlaying= 0;			// flag to check for stopping manual idle animations

import int CliffIdle;			// flag for cliff's idle stuff
import int CliffIdleSpeech;		// overlay id for his idle speech
int CliffIdleCounter= 0;		// counter for different idle actions



function room_c() {
  // script for room: Repeatedly execute

CheckSpeech();
  
ViewportX= GetViewportX();
CharacterX= character[MAIN].x;

if(CharacterX - ViewportX < 100) {

	XScroll= -1;
}

else if(CharacterX - ViewportX > 220) {

	XScroll= 1;
}

if(XScroll!= 0) {

	SetViewport(ViewportX+ (2* XScroll), 0);
}

if(ViewportX>= (game.room_width- 320) || 						// all the way right

  ViewportX<= 0 || 									// all the way left
 
  ((CharacterX - ViewportX)>= 150) && ((CharacterX - ViewportX)<= 170)) {		// he's in the middle

	XScroll= 0;
}

if(IsOverlayValid(CliffIdleSpeech)== 0 && CliffIdle== 1) {
		
	SetCharacterView(CLIFF, 13);
	SetCharacterIdle(CLIFF, 15, 5);
	ReleaseCharacterView(CLIFF);
	
	if(GetGlobalInt(18)== 0) {			// if tv is off
	  
		character[CLIFF].loop= 0;
	}
	
	else {						// if tv is working
	
		character[CLIFF].loop= 2;
	}
	
	CliffIdle= 0;
}
}

function object0_a() {
  // script for object0: Interact with object
  
if(ACTION== OPEN || ACTION== USE) {  
	MoveCharacterBlocking(MAIN, 48, 106, 0);	
	SetCharacterView(MAIN, 2);
	AnimateCharacter(MAIN, 5, 10, 0);
	ObjectOn(1);
	Wait(10);
	ReleaseCharacterView(MAIN);
    	character[MAIN].loop= 3;
	Wait(10);
	NewRoomEx(13, 107, 100);
}



}

function room_a() {
  // script for room: Player enters screen (after fadein)
  
if(GetGlobalInt(12)== 4) {

	PlayAmbientSound(1, 14, 100, 302, 20);				// tv static  
	MoveCharacterBlocking(MAIN, 42, 108, 1);
	MoveCharacterBlocking(MAIN, 86, 116, 0);
	Wait(10);
	PlaySound(13);
	ObjectOn(1);
	EndCutscene();
	StartCutscene(5);
	
	DisplaySpeech(MAIN, "... what's up, Gamekeep!");
	Wait(10);
	
	SetCharacterView(CLIFF, 13);
	AnimateCharacterEx(CLIFF, 4, 5, 0, 0, 1);
	ChangeCharacterView(CLIFF, 95);
	SetCharacterIdle(CLIFF, 92, 5);
	character[CLIFF].loop= 1;
	ReleaseCharacterView(CLIFF);
	StopMusic();
	Wait(40);
	DisplaySpeech(CLIFF, "... what was that?");
	ReleaseCharacterView(CLIFF);			// cliff normal
	SetCharacterSpeechView(CLIFF, 14);
	Wait(10);
	MoveCharacter(MAIN, 343, 128);
	Wait(60);
	int speech= DisplaySpeechBackground(MAIN, "One DARK PALADDIN reporting for BATTLE!");
	
	while(GetViewportX() < 122) {
	
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
	
	Wait(10);
  	character[CLIFF].loop= 2;
	Wait(160);
	character[MAIN].loop= 0;
	Wait(10);
	character[MAIN].loop= 1;
	Wait(10);
	SetCharacterView(MAIN, 63);
	Wait(30);
	SetCharacterView(MAIN, 64);
	character[MAIN].frame= 2;
	DisplaySpeechBackground(MAIN, "... uhhh...");
	Wait(30);
	ReleaseCharacterView(MAIN);
	SetCharacterView(MAIN, 71);
	character[MAIN].loop= 2;
	Wait(30);
	ReleaseCharacterView(MAIN);
	SetCharacterView(MAIN, 75);
	character[MAIN].loop= 3;
	Wait(30);
	ReleaseCharacterView(MAIN);
	character[MAIN].loop= 0;
	Wait(10);
	character[MAIN].loop= 1;
	
	while(IsOverlayValid(speech)) {
	
		Wait(1);
	}	
	
	ReleaseCharacterView(MAIN);			// main normal
	SetCharacterSpeechView(MAIN, 2);
	Wait(10);
	SetCharacterView(CLIFF, 96);
	SetCharacterSpeechView(CLIFF, 97);
	Wait(10);
	int temp= DisplaySpeechBackground(CLIFF, "Oh yeah, I was going to say...");
	SetCharacterView(CLIFF, 97);
	AnimateCharacter(CLIFF, character[CLIFF].loop, 5, 1);
	Wait(30);
	MoveCharacter(MAIN, 117, 107);
	
	while(GetViewportX() > 0) {
	
		SetViewport(GetViewportX() - 2, GetViewportY());
		Wait(1);
	}
	
	Wait(10);
	SetCharacterView(CLIFF, 97);
	AnimateCharacter(CLIFF, character[CLIFF].loop, 5, 1);
	MoveCharacterBlocking(MAIN, 117, 107, 0);
	character[MAIN].loop= 3;
	Wait(10);
	character[MAIN].loop= 2;
	SetCharacterView(MAIN, 72);
	SetCharacterSpeechView(MAIN, 60);
	
	while (IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	SetCharacterView(CLIFF, 96);
	Wait(10);
	character[CLIFF].loop= 1;
	ReleaseCharacterView(CLIFF);
	Wait(30);
	DisplaySpeech(CLIFF, "... we CANCELLED the Slackmaster campaign today.");
	SetCharacterView(MAIN, 72);
	SetCharacterSpeechView(MAIN,  60);
	PlayMusic(2);
	PlayMusicQueued(3);
	Wait(30);
	ReleaseCharacterView(CLIFF);
	SetCharacterSpeechView(CLIFF, 14);
	SetCharacterIdle(CLIFF, 15, 5);
	DisplaySpeech(MAIN, "What!?");
	SetCharacterSpeechView(MAIN, 2);
	SetGlobalInt(12, 5);						// increment to next scene
	SetGlobalInt(7, 1);
	EndCutscene();
	
	Wait(20);
	RunDialog(7);
}

else if(GetGlobalInt(7)== 0) {						// if he came from construction site

	MoveCharacterBlocking(MAIN, 54, 116, 1);
	MoveCharacter(MAIN, 86, 116);
	PlaySound(13);
	ObjectOn(1);
	SetGlobalInt(7, 1);
	SetTimer(1, 200);
}

else if(GetGlobalInt(7)== 6) {						// if he came from map

	MoveCharacterBlocking(MAIN, 54, 116, 1);
	MoveCharacter(MAIN, 86, 116);
	PlaySound(13);
	ObjectOn(1);
	SetGlobalInt(7, 1);
	Map= 1;
	SetTimer(1, 200);
	SetScreenTransition(TRANSITION_CROSSFADE);
}

else if(GetGlobalInt(7)== 8) {						// if he came from war room

	MoveCharacterBlocking(MAIN, 384, 124, 1);
	SetGlobalInt(7, 1);
	SetScreenTransition(TRANSITION_CROSSFADE);
	SetTimer(1, 200);
}

if(GetGlobalInt(18)== 0) {					
  
	PlayAmbientSound(1, 14, 100, 302, 20);				// tv static						// for cliff's idle animation
}

}

function hotspot5_a() {
  // script for hotspot5: Look at hotspot

FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's where the gamekeep spends most of his day.", 1);

}

function room_b() {
  // script for room: Player enters screen (before fadein)

if(GetGlobalInt(7)== 8) {				// from war room

	GUIOn(2);
	SetViewport(122, 0);
	character[MAIN].x= 398;
	character[MAIN].y= 122;
	character[MAIN].loop= 0;
}

else {							// from door
	
	SetViewport(0, 0);
	ObjectOff(1);					// door off
	  
	GUIOn(2);
	
	character[MAIN].x= 42;
	character[MAIN].y= 100;
	character[MAIN].loop= 0;
}	
	
character[CLIFF].x= 172;
character[CLIFF].y= 88;
ReleaseCharacterView(CLIFF);
SetCharacterIdle(CLIFF, 15, 5);


if(GetGlobalInt(12)== 4) {			// cutscene from beginning

	  GUIOff(2);
	  ReleaseCharacterView(MAIN);
	  SetCharacterSpeechView(MAIN, 2);
	  SetCharacterIdle(MAIN, 61, 5);
	  DisableHotspot(9);			// disable hangar hotspot until he puts it in
	  DisableRegion(7);			// workaround for bug with jackson talking with idle speech after dialog
	  PlayMusic(5);
}
  
if(GetGlobalInt(18)== 0) {			// if tv is off

	SetObjectView(0, 52);
	AnimateObject(0, 0, 3, 1);
	
	character[CLIFF].loop= 0;		// listening to music
	
	SetMusicRepeat(1);
	PlayMusic(5);
}

else {

	character[CLIFF].loop= 2;		// watching tv
	
	SetObjectView(0, 52);
	AnimateObject(0, 1, 10, 1);
} 

}

function object1_a() {
  // script for object1: Interact object
  
if(ACTION== USE) {

	MoveCharacter(MAIN, 55, 101);
	
	while(GetViewportX() > 0) {

		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 55, 101, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	PlaySound(12);
	ObjectOff(1);
	Wait(10);
	MoveCharacterBlocking(MAIN, 34, 93, 1);
	character[MAIN].loop= 3;
	Wait(10);
	
	if(Map== 1) {						// if player came direct to the game shop go back to map
	
		Map= 0;
		FadeOut(5);
		Wait(30);
		StopMusic();
		Wait(10);
		PlaySound(13);
		Wait(30);
		SetScreenTransition(TRANSITION_FADE);
		NewRoom(12);
	}
	else {
		StopMusic();
		SetMusicRepeat(0);
		NewRoom(13);					// else to constuction area
	}
}

else if(ACTION== OPEN) {

	MoveCharacter(MAIN, 55, 101);
	
	while(GetViewportX() > 0) {

		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 55, 101, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(12);
	ObjectOff(1);
	Wait(15);
	PlaySound(13);
	ObjectOn(1);
	Wait(10);
	ReleaseCharacterView(MAIN);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 40, 52);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
	}



function object3_a() {
  // script for object3: Pick up object
  
}

function object3_b() {
  // script for object3: Interact object
  

if(GetGlobalInt(18)== 0) {						// if tv is off

	if(ACTION== USE) {
	
		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		character[MAIN].inv[27]++;
		SetActiveInventory(27);
		character[MAIN].inv[27]--;
		Wait(10);
	}
	
	
	else if(ACTION== PULL) {

		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		ObjectOff(3);
		ObjectOn(5);
		Wait(10);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
	}

}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
}

function object4_a() {
  // script for object4: Interact object

if(GetGlobalInt(18)== 0) {

	if(ACTION== USE) {

		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
	
		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		character[MAIN].inv[27]++;
		SetActiveInventory(27);
		character[MAIN].inv[27]--;
		Wait(10);
	
	}
	  
	
	else if(ACTION== PULL) {

		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
	
		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		ObjectOff(4);
		ObjectOn(5);
		Wait(10);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
	}
}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
}

function object6_a() {
  // script for object6: Interact object

if(GetGlobalInt(18)== 0) {

	if(ACTION== USE) {

		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
	
		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		character[MAIN].inv[28]++;
		SetActiveInventory(28);
		character[MAIN].inv[28]--;
		Wait(10);
	}
	
	
	else if(ACTION== PULL) {

		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
	
		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		ObjectOff(6);
		ObjectOn(8);
		Wait(10);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
	}
}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
}

function object7_a() {
  // script for object7: Interact object

if(GetGlobalInt(18)== 0) {

	if(ACTION== USE) {

		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
	
		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		character[MAIN].inv[28]++;
		SetActiveInventory(28);
		character[MAIN].inv[28]--;
		Wait(10);
	}
	
	
	else if(ACTION== PULL) {

		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
	
		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		ObjectOff(7);
		ObjectOn(8);
		Wait(10);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
	}
}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
}

function hotspot1_a() {
  // script for hotspot1: Use inventory on hotspot

if(ACTION== USE) {

	if(IsObjectOn(3)== 1) {							// if cable wire is plugged in
	
		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "The cable wire is plugged into it.", 1);
	}
	
	else if(IsObjectOn(7)== 1) {						// if tv wire is plugged in
	
		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "The TV wire is plugged into it", 1);
	}
	
	
	else if(IsObjectOn(6)== 1) {						// if tv wire is in
	
		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		SetTimer(1, 0);						// disable random idle views
		SetMusicMasterVolume(30);
		Wait(10);
		GUIOff(2);
		StartCutscene(5);
		
		Wait(40);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		MoveObjectDirect(9, 264, 74, 10);
		Wait(10);
		ObjectOn(9);
		LoseInventory(13);
		SetGlobalInt(18, 1);						// tv now works
		StopAmbientSound(1);
		StopMusic();
		PlaySound(28);
		AnimateObject(0, 1, 10, 1);					// animate tv
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
		Wait(40);
		
		SetCharacterView(CLIFF, 13);
		AnimateCharacterEx(CLIFF, 4, 5, 0, 0, 1);
		ChangeCharacterView(CLIFF, 95);
		character[CLIFF].loop= 1;
		ReleaseCharacterView(CLIFF);
		Wait(10);
		
		character[CLIFF].loop= 2;
		Wait(10);
		DisplaySpeech(CLIFF, "Hey, the TV is working now!");
		Wait(10);
		ChangeCharacterView(CLIFF, 13);
		SetCharacterIdle(CLIFF, 15, 5);
		character[CLIFF].loop= 2;
		ReleaseCharacterView(CLIFF);
		SetDialogOption(15, 1, 2);				// turn off dialog option about cd player
		SetDialogOption(15, 2, 2);
		SetDialogOption(15, 7, 1);
		Wait(10);
		DisplaySpeech(MAIN, "... what have I done?");
		Wait(10);
		SetMusicMasterVolume(90);
		Wait(10);
		
		GUIOn(2);
		EndCutscene();
	}
		
	else {
		
		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		MoveObjectDirect(9, 264, 74, 10);
		Wait(10);
		ObjectOn(9);
		LoseInventory(13);  
		Wait(10);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
	}
}
}


function hotspot2_a() {
  // script for hotspot2: Use inventory on hotspot

if(ACTION== USE) {
  
	if(IsObjectOn(6)== 1) {							// if tv wire is plugged in
	
		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "The cable wire is plugged into it.", 1);
	}
	
	else if(IsObjectOn(4)== 1) {						// if cable wire is plugged in
	
		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "The TV wire is plugged into it", 1);
	}
	
	
	else {
	
		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		MoveObjectDirect(9, 270, 73, 10);
		Wait(10);
		ObjectOn(9);
		LoseInventory(13);
		Wait(10);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
	}
}
}

function object3_c() {
  // script for object3: Pick up object

if(GetGlobalInt(18)== 0) {  

	MoveCharacter(MAIN, 312, 117);
	
	while(GetViewportX() < 122) {
		
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 312, 117, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	character[MAIN].inv[27]++;
	SetActiveInventory(27);
	character[MAIN].inv[27]--;
	Wait(10);
}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
}

function object4_b() {
  // script for object4: Pick up object

if(GetGlobalInt(18)== 0) {

	MoveCharacter(MAIN, 312, 117);
	
	while(GetViewportX() < 122) {
		
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
  
	MoveCharacterBlocking(MAIN, 312, 117, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	character[MAIN].inv[27]++;
	SetActiveInventory(27);
	character[MAIN].inv[27]--;
	Wait(10);
}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
}

function object5_a() {
  // script for object5: Interact object

if(GetGlobalInt(18)== 0) {
  
	if(ACTION== USE) {

		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
	
		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 8;
		character[MAIN].frame= 1;
		Wait(10);
		character[MAIN].inv[27]++;
		SetActiveInventory(27);
		character[MAIN].inv[27]--;
		Wait(10);
	}
}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
	}

function object5_b() {
  // script for object5: Pick up object

if(GetGlobalInt(18)== 0) {					// tv is off

	MoveCharacter(MAIN, 312, 117);
	
	while(GetViewportX() < 122) {
		
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
  
	MoveCharacterBlocking(MAIN, 312, 117, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 8;
	character[MAIN].frame= 1;
	Wait(10);
	character[MAIN].inv[27]++;
	SetActiveInventory(27);
	character[MAIN].inv[27]--;
	Wait(10);
}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
}

function object6_b() {
  // script for object6: Pick up object

if(GetGlobalInt(18)== 0) {

	MoveCharacter(MAIN, 312, 117);
	
	while(GetViewportX() < 122) {
		
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}

	MoveCharacterBlocking(MAIN, 312, 117, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	character[MAIN].inv[28]++;
	SetActiveInventory(28);
	character[MAIN].inv[28]--;
	Wait(10);
}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
}

function object7_b() {
  // script for object7: Pick up object

if(GetGlobalInt(18)== 0) {

	MoveCharacter(MAIN, 312, 117);
	
	while(GetViewportX() < 122) {
		
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}

	MoveCharacterBlocking(MAIN, 312, 117, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	character[MAIN].inv[28]++;
	SetActiveInventory(28);
	character[MAIN].inv[28]--;
	Wait(10);
}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
}

function object8_a() {
  // script for object8: Interact object

if(GetGlobalInt(18)== 0) {
	  
	if(ACTION== USE) {

		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
	
		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		character[MAIN].inv[28]++;
		SetActiveInventory(28);
		character[MAIN].inv[28]--;
		Wait(10);
	}
}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
}

function object8_b() {
  // script for object8: Pick up object

if(GetGlobalInt(18)== 0) {

	MoveCharacter(MAIN, 312, 117);
	
	while(GetViewportX() < 122) {
		
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}

	MoveCharacterBlocking(MAIN, 312, 117, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	character[MAIN].inv[28]++;
	SetActiveInventory(28);
	character[MAIN].inv[28]--;
	Wait(10);
}

else {

	DisplaySpeechNoBlock(MAIN, "I don't need to play with the wires now that the TV's on.", 1);
}
}

function hotspot1_b() {
  // script for hotspot1: Use inventory on hotspot

if(ACTION== USE) {

	if(GetGlobalInt(18)== 0) {							// if tv is out
	  
		
		if(IsObjectOn(7)== 1) {							// if tv wire is plugged in
		
			MoveCharacter(MAIN, 312, 117);
			
			while(GetViewportX() < 122) {
			
				SetViewport(GetViewportX() + 2, GetViewportY());
				Wait(1);
			}
	
			MoveCharacterBlocking(MAIN, 312, 117, 0);
			character[MAIN].loop= 1;
			Wait(10);
			ObjectOn(3);							// put it in cable spot
			ObjectOff(4);							// make sure others are off
			ObjectOff(5);
			ObjectOn(8);							// unplug tv wire
			ObjectOff(7);				
		}
		
		else {
		
			MoveCharacter(MAIN, 312, 117);
			
			while(GetViewportX() < 122) {
			
				SetViewport(GetViewportX() + 2, GetViewportY());
				Wait(1);
			}
	
			MoveCharacterBlocking(MAIN, 312, 117, 0);
			character[MAIN].loop= 1;
			Wait(10);
			ObjectOn(3);							
			ObjectOff(4);							
			ObjectOff(5);	
		}
	
	}
	
	else {
	
		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "Now that it's on, I don't think I need to be messing with the wires anymore.", 1);
	}
}
}

function hotspot2_b() {
  // script for hotspot2: Use inventory on hotspot

if(ACTION== USE) {  

	if(GetGlobalInt(18)== 0) {							// if tv is out
	
		if(IsObjectOn(6)== 1) {							// if tv wire is plugged in
		
			MoveCharacter(MAIN, 312, 117);
		
			while(GetViewportX() < 122) {
			
				SetViewport(GetViewportX() + 2, GetViewportY());
				Wait(1);
			}
	
			MoveCharacterBlocking(MAIN, 312, 117, 0);
			character[MAIN].loop= 1;
			Wait(10);
			ObjectOn(4);							// put it in cable spot
			ObjectOff(3);							// make sure others are off
			ObjectOff(5);
			ObjectOn(8);							// unplug tv wire
			ObjectOff(6);							
		}
		
		else {
		
			MoveCharacter(MAIN, 312, 117);
		
			while(GetViewportX() < 122) {
			
				SetViewport(GetViewportX() + 2, GetViewportY());
				Wait(1);
			}
	
			MoveCharacterBlocking(MAIN, 312, 117, 0);
			character[MAIN].loop= 1;
			Wait(10);
			ObjectOn(4);							
			ObjectOff(3);							
			ObjectOff(5);
		}
	
	}
	
	else {
	
		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "Now that it's on, I don't think I need to be messing with the wires anymore.", 1);
	}
}
}

function hotspot1_c() {
  // script for hotspot1: Use inventory on hotspot

if(ACTION== USE) {  
  
	if(GetGlobalInt(18)== 0) {							// if tv is out
	
		if(IsObjectOn(3)== 1) {							// if tv cable is plugged in
		
			MoveCharacter(MAIN, 312, 117);
		
			while(GetViewportX() < 122) {
			
				SetViewport(GetViewportX() + 2, GetViewportY());
				Wait(1);
			}
	
			MoveCharacterBlocking(MAIN, 312, 117, 0);
			character[MAIN].loop= 1;
			Wait(10);
			ObjectOn(7);							// put it in tv spot
			ObjectOff(6);							// make sure others are off
			ObjectOff(8);
			ObjectOn(5);							// unplug tv wire
			ObjectOff(3);	
		}
		
		else {
		
			MoveCharacter(MAIN, 312, 117);
		
			while(GetViewportX() < 122) {
			
				SetViewport(GetViewportX() + 2, GetViewportY());
				Wait(1);
			}
	
			MoveCharacterBlocking(MAIN, 312, 117, 0);
			character[MAIN].loop= 1;
			Wait(10);
			ObjectOn(7);							
			ObjectOff(6);							
			ObjectOff(8);	
		}
		
	}
	
	else {
	
		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "Now that it's on, I don't think I need to be messing with the wires anymore.", 1);
	}
}
}

function hotspot2_c() {
  // script for hotspot2: Use inventory on hotspot

if(ACTION== USE) {

	if(GetGlobalInt(18)== 0) {							// if tv is out
	  
		if(IsObjectOn(4)== 1) {							// if cable wire is plugged in
		
			MoveCharacter(MAIN, 312, 117);
		
			while(GetViewportX() < 122) {
			
				SetViewport(GetViewportX() + 2, GetViewportY());
				Wait(1);
			}
	
			MoveCharacterBlocking(MAIN, 312, 117, 0);
			character[MAIN].loop= 1;
			Wait(10);
			ObjectOn(6);							// put it in tv spot
			ObjectOff(7);							// make sure others are off
			ObjectOff(8);
			ObjectOn(5);							// unplug cable wire
			ObjectOff(3);
					
			if(IsObjectOn(9)== 1) {
			
				GUIOff(2);
				StartCutscene(5);
				SetTimer(1, 0);					// disable random idle views
				Wait(10);
				SetMusicMasterVolume(30);
				Wait(10);
				
				SetGlobalInt(18, 1);						// tv now works
				StopAmbientSound(1);
				StopMusic();
				PlaySound(28);
				AnimateObject(0, 1, 10, 1);					// animate tv
				Wait(40);
				
				SetCharacterView(CLIFF, 13);
				SetCharacterIdle(CLIFF, 15, 5);
				AnimateCharacterEx(CLIFF, 4, 5, 0, 0, 1);
				ChangeCharacterView(CLIFF, 95);
				SetCharacterIdle(CLIFF, 92, 5);
				character[CLIFF].loop= 1;
				Wait(10);
				
				character[CLIFF].loop= 2;
				Wait(10);
				DisplaySpeech(CLIFF, "Hey, the TV is working now!");
				Wait(10);
				ChangeCharacterView(CLIFF, 13);
				SetCharacterIdle(CLIFF, 15, 5);
				character[CLIFF].loop= 2;
				SetDialogOption(15, 1, 2);				// turn off dialog option about cd player
				SetDialogOption(15, 2, 2);
				SetDialogOption(15, 7, 1);
				Wait(10);
				DisplaySpeech(MAIN, "... what have I done?");
				Wait(10);
				SetMusicMasterVolume(90);
				Wait(10);
				
				GUIOn(2);
				EndCutscene();
			}
	
		}
		
		else {
		
			MoveCharacter(MAIN, 312, 117);
		
			while(GetViewportX() < 122) {
			
				SetViewport(GetViewportX() + 2, GetViewportY());
				Wait(1);
			}
	
			MoveCharacterBlocking(MAIN, 312, 117, 0);
			character[MAIN].loop= 1;
			Wait(10);
			ObjectOn(6);							
			ObjectOff(7);							
			ObjectOff(8);
			
			if(IsObjectOn(9)== 1) {
				
				GUIOff(2);
				StartCutscene(5);
				Wait(10);
				SetMusicMasterVolume(30);
				Wait(10);
	  
				SetGlobalInt(18, 1);						// tv now works
				StopAmbientSound(1);
				StopMusic();
				PlaySound(28);
				AnimateObject(0, 1, 10, 1);					// animate tv
				Wait(40);
				
				SetCharacterView(CLIFF, 13);
				SetCharacterIdle(CLIFF, 15, 5);
				AnimateCharacterEx(CLIFF, 4, 5, 0, 0, 1);
				ChangeCharacterView(CLIFF, 95);
				SetCharacterIdle(CLIFF, 92, 5);
				character[CLIFF].loop= 1;
				Wait(10);
				
				character[CLIFF].loop= 2;
				Wait(10);
				DisplaySpeech(CLIFF, "Hey, the TV is working now!");
				Wait(10);
				
				ChangeCharacterView(CLIFF, 13);
				SetCharacterIdle(CLIFF, 15, 5);
				character[CLIFF].loop= 2;
				SetDialogOption(15, 1, 2);				// turn off dialog option about cd player
				SetDialogOption(15, 2, 2);
				SetDialogOption(15, 7, 1);				
				Wait(10);
				DisplaySpeech(MAIN, "... what have I done?");
				Wait(10);
				SetMusicMasterVolume(90);
				Wait(10);
				
				GUIOn(2);
				EndCutscene();
			}	
		}
		
	}
	
	else {
	
		MoveCharacter(MAIN, 312, 117);
		
		while(GetViewportX() < 122) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		MoveCharacterBlocking(MAIN, 312, 117, 0);
		character[MAIN].loop= 1;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "Now that it's on, I don't think I need to be messing with the wires anymore.", 1);
	}
}
}

function object2_a() {
  // script for object2: Pick up object

MoveCharacter(MAIN, 121, 112);

while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, 0);
	Wait(1);
}
  
MoveCharacterBlocking(MAIN, 121, 112, 0);
character[MAIN].loop= 2;
Wait(10);

if(CliffIdle== 1) {

	CliffIdle= 0;	
	
	if(IsOverlayValid(CliffIdleSpeech)) {
	  
		RemoveOverlay(CliffIdleSpeech);
	}
	
	ReleaseCharacterView(CLIFF);
}

if(GetGlobalInt(18)== 0) {

	GUIOff(2);
	StartCutscene(5);
	character[MAIN].loop= 13;
	character[MAIN].frame= 1;
	Wait(10);
	
	SetCharacterView(CLIFF, 13);
	AnimateCharacterEx(CLIFF, 4, 5, 0, 0, 1);
	ChangeCharacterView(CLIFF, 95);
	SetCharacterView(CLIFF, 90);
	SetCharacterSpeechView(CLIFF, 91);
	character[CLIFF].loop= 1;
	StopMusic();
	Wait(10);
	
	DisplaySpeech(CLIFF, "C'mon, Jackson...");
	SetCharacterView(CLIFF, 96);
	Wait(10);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	Wait(10);
	SetCharacterView(CLIFF, 96);
	SetCharacterSpeechView(CLIFF, 97);
	Wait(20);
	DisplaySpeech(CLIFF, "... can't you see I'm using it right now?");
	Wait(10);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	Wait(10);

	ChangeCharacterView(CLIFF, 13);
	AnimateCharacterEx(CLIFF, 5, 5, 0, 0, 1);
	character[CLIFF].loop= 0;
	PlayMusic(5);
	Wait(10);

	GUIOn(2);
	EndCutscene();
}

else {
	
	character[MAIN].loop= 13;
	character[MAIN].frame= 1;
	Wait(10);
	PlaySound(4);
	ObjectOff(2);
	AddInventory(19);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}
}

function object9_a() {
  // script for object9: Pick up object
  
if(GetGlobalInt(18)== 0) {				// if it's in the wrong plug or tv cable isn't on

	MoveCharacter(MAIN, 312, 117);
	
	while(GetViewportX() < 122) {
		
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}

	MoveCharacterBlocking(MAIN, 312, 117, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	ObjectOff(9);
	AddInventory(13);
	Wait(10);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

else {
	
	DisplaySpeechNoBlock(MAIN, "I don't think I need to mess with it now that the TV's on.", 1);
}
}

function hotspot3_a() {
  // script for hotspot3: Interact hotspot

if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already on.", 1);
}

if(ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "All the plugs are in the back.", 1);
}
}

function hotspot3_b() {
  // script for hotspot3: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'm not sure I could get away with that.", 1);
}

function hotspot8_b() {
  // script for hotspot8: Pick up hotspot
  

FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'm not doing any shopping.", 1);

}

function hotspot9_a() {
  // script for hotspot9: Pick up hotspot
  
if(GetGlobalInt(18)== 0) {				// if it's in the wrong plug or tv cable isn't on

	MoveCharacter(MAIN, 312, 117);
	
	while(GetViewportX() < 122) {
	
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}

	MoveCharacterBlocking(MAIN, 312, 117, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	ObjectOff(9);
	AddInventory(13);
	Wait(10);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

else {
	
	DisplaySpeechNoBlock(MAIN, "I don't think I need to mess with it now that the TV's on.", 1);
}

}

function object10_a() {
  // script for object10: Pick up object
  
}

function object10_b() {
  // script for object10: Pick up object

MoveCharacter(MAIN, 183, 118);

if(GetViewportX() < 40) {

	while(GetViewportX() < 40) {
	
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
}

else if(GetViewportX() > 40) {

	while(GetViewportX() > 40) {
	
		SetViewport(GetViewportX() - 2, GetViewportY());
		Wait(1);
	}
}

MoveCharacterBlocking(MAIN, 175, 118, 0);
character[MAIN].loop= 2;
Wait(10);

if(CliffIdle== 1) {

	CliffIdle= 0;	
	
	if(IsOverlayValid(CliffIdleSpeech)) {
	  
		RemoveOverlay(CliffIdleSpeech);
	}
	
	ReleaseCharacterView(CLIFF);
}

if(GetGlobalInt(24)== 1) {				// has hotdog

	Wait(10);
	character[MAIN].loop= 13;
	character[MAIN].frame= 1;
	Wait(15);
	PlaySound(4);
	ObjectOff(10);
	AddInventory(33);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}

else {
  
	character[MAIN].loop= 13;
	character[MAIN].frame= 1;
	Wait(10);

	if(GetGlobalInt(18)== 0) {			// if cliff still has headphones on
	
		SetCharacterView(CLIFF, 13);
		AnimateCharacterEx(CLIFF, 4, 5, 0, 0, 1);
		ChangeCharacterView(CLIFF, 95);
		SetCharacterIdle(CLIFF, 92, 5);
		character[CLIFF].loop= 1;
		ReleaseCharacterView(CLIFF);
		StopMusic();
		Wait(10);
	}
  	
  	character[CLIFF].loop= 2;
  	Wait(10);
  	SetCharacterView(CLIFF, 90);
  	SetCharacterSpeechView(CLIFF, 91);
  	Wait(10);
	DisplaySpeech(CLIFF, "... that is my lunch you know!");
	SetCharacterView(CLIFF, 90);
	Wait(10);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	Wait(10);
	ReleaseCharacterView(CLIFF);
	SetCharacterSpeechView(CLIFF, 14);
	Wait(10);
	
	if(GetGlobalInt(18)== 0) {
		
		character[CLIFF].loop= 1;
		Wait(10);
		ChangeCharacterView(CLIFF, 13);
		SetCharacterIdle(CLIFF, 15, 5);
		AnimateCharacterEx(CLIFF, 5, 5, 0, 0, 1);
		character[CLIFF].loop= 0;
		ReleaseCharacterView(CLIFF);
		PlayMusic(5);
	}
}
}

function hotspot1_d() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, 276, 76);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's where the cable plugs into.", 1);
}

function hotspot2_d() {
  // script for hotspot2: Look at hotspot

FaceLocation(MAIN, 287, 77);
Wait(10);  
DisplaySpeechNoBlock(MAIN, "That's where the TV plugs into.", 1);
}

function object3_d() {
  // script for object3: Look at object

FaceLocation(MAIN, 276, 76);
Wait(10);
DisplaySpeechNoBlock(MAIN, "The cable wire is plugged into the receiver's cable in.", 1);

}

function hotspot3_c() {
  // script for hotspot3: Look at hotspot

FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's the A/V setup for the shop.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Look at hotspot

if(GetGlobalInt(18)== 0) {
  
	FaceLocation(MAIN, 269, 63);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "The hangar is plugged into the cable in.", 1);
}

else {

	FaceLocation(MAIN, 269, 63);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "The hangar is plugged into the TV in.", 1);
}
}

function hotspot9_c() {
  // script for hotspot9: Interact hotspot
  
if(GetGlobalInt(18)== 0) {

	if(ACTION== USE) {
	
		FaceLocation(MAIN, 269, 63);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "It's plugged in all the way.", 1);
	}
	
	else if(ACTION== PUSH || ACTION== PULL) {
	
		FaceLocation(MAIN, 269, 63);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I don't think adjusting it will help.", 1);
	}
}

else if(GetGlobalInt(18)== 1) {

	if(ACTION== USE || ACTION== PUSH || ACTION== PULL) {
	
		FaceLocation(MAIN, 269, 63);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I don't want to mess with it now that the TV's on.", 1);
	}
}
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, 407, 73);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's where the games are played.", 1);
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, 125, 66);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's in good hands.", 1);
}

function hotspot11_b() {
  // script for hotspot11: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 125, 66);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not sure how to operate that particular type of machinery.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 125, 66);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't think Cliff would appreciate that.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 125, 66);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's too heavy to move around.", 1);
}

else if(ACTION== GIVE) {

	FaceLocation(MAIN, 125, 66);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's not mine to give away.", 1);
}
}

function hotspot11_c() {
  // script for hotspot11: Pick up hotspot
  
FaceLocation(MAIN, 125, 66);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Even if I wanted to, it's too heavy to grab.", 1);
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, 440, 143);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Those are the back issue boxes.", 1);
}

function hotspot12_b() {
  // script for hotspot12: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 440, 143);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm caught up on most of my storylines.", 1);

}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 440, 143);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "That would just be a huge mess.", 1);
}
}

function hotspot12_c() {
  // script for hotspot12: Pick up hotspot
  
FaceLocation(MAIN, 440, 143);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'm caught up on most of my storylines.", 1);
}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, 210, 86);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's a bunch of older action figures and models", 1);
}

function hotspot13_b() {
  // script for hotspot13: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 210, 86);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "What? And possibly lower their condition to near mint?", 1);
	DisplaySpeechNoBlock(MAIN, "They're for display only.", 2);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 210, 86);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "The case only opens in the back.", 1);
}
}

function hotspot13_c() {
  // script for hotspot13: Pick up hotspot
  
FaceLocation(MAIN, 210, 86);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't need any of those right now.", 1);
}

function hotspot14_b() {
  // script for hotspot14: Interact hotspot
  
}

function hotspot15_a() {
  // script for hotspot15: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "There's lots of new stuff this week.", 1);
}

function hotspot15_b() {
  // script for hotspot15: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have time to flip through those.", 1);
	DisplaySpeechNoBlock(MAIN, "And Cliff would get on my case about not buying anything again.", 2);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "That would just be a big mess.", 1);
}
}

function hotspot15_c() {
  // script for hotspot15: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I've got enough comics for now.", 1);
}

function hotspot16_a() {
  // script for hotspot16: Look at hotspot
  
FaceLocation(MAIN, mouse.x ,mouse.y - 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It looks sturdy enough.", 1);
}

function hotspot17_a() {
  // script for hotspot17: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I guess there's no other place for them.", 1);
}

function object0_b() {
  // script for object0: Look at object
  
if(GetGlobalInt(18)== 0) {


	
	MoveCharacter(MAIN, 264, 127);
	
	while(GetViewportX() < 122) {
	
		SetViewport(GetViewportX() + 2, 0);
		Wait(1);
	}

	MoveCharacterBlocking(MAIN, 264, 127, 0);
	character[MAIN].loop= 3;
	
	if(CliffIdle== 1) {

		CliffIdle= 0;	
		
		if(IsOverlayValid(CliffIdleSpeech)) {
		  
			RemoveOverlay(CliffIdleSpeech);
		}
		
		ReleaseCharacterView(CLIFF);
	}
	
	Wait(10);
	SetMusicMasterVolume(30);
	StartCutscene(5);
	GUIOff(2);

	Wait(30);
	ReleaseCharacterView(CLIFF);
	DisplaySpeech(MAIN, "What's with the TV?");
	
	while(GetViewportX() > 70) {
	
		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}
	
	Wait(10);
	
	SetCharacterView(CLIFF, 13);
	AnimateCharacterEx(CLIFF, 4, 5, 0, 0, 1);
	ChangeCharacterView(CLIFF, 95);
	SetCharacterIdle(CLIFF, 92, 5);
	character[CLIFF].loop= 1;
	ReleaseCharacterView(CLIFF);
	Wait(10);
	
	character[CLIFF].loop= 2;
	Wait(10);
	SetCharacterView(CLIFF, 90);
	SetCharacterSpeechView(CLIFF, 91);
	Wait(20);
	DisplaySpeech(CLIFF, "The cable box broke...");
	ReleaseCharacterView(CLIFF);
	SetCharacterSpeechView(CLIFF, 14);
	Wait(10);
	DisplaySpeech(CLIFF, "... and the TV won't pick up any channels without an antennae.");
	Wait(10);
	character[MAIN].loop= 1;
	SetCharacterView(MAIN, 74);
	SetCharacterSpeechView(MAIN, 67);
	Wait(10);
	DisplaySpeech(MAIN, "You don't have time to watch it...");
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	Wait(10);
	DisplaySpeech(MAIN, "... you're running our Slackmaster campaign today, remember!");
	Wait(10);
	int temp= DisplaySpeechBackground(CLIFF, "... I WAS... going to run a campaign today!");
	SetCharacterView(CLIFF, 91);
	AnimateCharacter(CLIFF, character[CLIFF].loop, 5, 1);
	Wait(40);
	ReleaseCharacterView(CLIFF);
	SetCharacterView(CLIFF, 14);
	AnimateCharacter(CLIFF, character[CLIFF].loop, 5, 1);
	Wait(80);
	ReleaseCharacterView(CLIFF);
	SetCharacterView(CLIFF, 91);
	AnimateCharacter(CLIFF, character[CLIFF].loop, 5, 1);
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	ReleaseCharacterView(CLIFF);
	SetCharacterSpeechView(CLIFF, 14);
	Wait(10);
	character[CLIFF].loop= 1;
	Wait(10);
	SetCharacterView(CLIFF, 90);
	SetCharacterSpeechView(CLIFF, 91);
	Wait(10);
	DisplaySpeech(CLIFF, "... unfortunately, we're missing a couple players.");
	Wait(40);
	ReleaseCharacterView(CLIFF);
	SetCharacterSpeechView(CLIFF, 14);
	Wait(10);
	DisplaySpeech(CLIFF, "... that exponential XP growth will just have to wait!");
	Wait(30);
	
	ChangeCharacterView(CLIFF, 13);
	SetCharacterIdle(CLIFF, 15, 5);
	AnimateCharacterEx(CLIFF, 4, 5, 0, 1, 1);
	character[CLIFF].loop= 0;
	ReleaseCharacterView(CLIFF);
	Wait(10);
	
	while(GetViewportX() < 122) {
	
		SetViewport(GetViewportX() + 2, 0);
		Wait(1);
	}
	
	Wait(10);
	SetMusicMasterVolume(90);
	Wait(30);
	GUIOn(2);
	EndCutscene();
}

else if(GetGlobalInt(18)== 1) {

	FaceLocation(MAIN, 294, 26);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's working fine now!", 1);
}
}

function object0_c() {
  // script for object0: Interact object
  
if(ACTION== USE) {

	FaceLocation(MAIN, 294, 26);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already on.", 1);
}

else if(ACTION== OPEN) {


	FaceLocation(MAIN, 294, 26);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not sure I can open it.", 1);	
}
}

function object1_b() {
  // script for object1: Look at object
  
FaceLocation(MAIN, 40, 52);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It leads outside.", 1);
}

function object2_b() {
  // script for object2: Look at object
  
FaceLocation(MAIN, 180, 71);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's Cliff's CD player.", 1);
}

function object2_c() {
  // script for object2: Interact object
  
if(ACTION== USE) {

	MoveCharacter(MAIN, 154, 111);
	
	while(GetViewportX() > 0) {
		
		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 154, 111, 0);
	character[MAIN].loop= 2;
	Wait(10);

	if(CliffIdle== 1) {

		CliffIdle= 0;	
		
		if(IsOverlayValid(CliffIdleSpeech)) {
		  
			RemoveOverlay(CliffIdleSpeech);
		}
		
		ReleaseCharacterView(CLIFF);
	}	

	if(GetGlobalInt(18)== 0) {

		character[MAIN].loop= 13;
		character[MAIN].frame= 1;
		Wait(10);
		
		SetCharacterView(CLIFF, 13);
		AnimateCharacterEx(CLIFF, 4, 5, 0, 0, 1);
		ChangeCharacterView(CLIFF, 95);
		character[CLIFF].loop= 1;
		ReleaseCharacterView(CLIFF);
		StopMusic();
		Wait(10);
		
		DisplaySpeech(CLIFF, "I'm using that right now.");
		Wait(10);
		
		ChangeCharacterView(CLIFF, 13);
		AnimateCharacterEx(CLIFF, 5, 5, 0, 0, 1);
		character[CLIFF].loop= 1;
		ReleaseCharacterView(CLIFF);
		PlayMusic(5);
		
		Wait(10);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
	}
	
	else {
	
		DisplaySpeechNoBlock(MAIN, "It's portable...", 1);
	}
}

	}

function object4_c() {
  // script for object4: Look at object
  
FaceLocation(MAIN, 276, 76);
Wait(10);
DisplaySpeechNoBlock(MAIN, "The cable wire is plugged into the receiver's TV in.", 1);
}

function object5_c() {
  // script for object5: Look at object
  
FaceLocation(MAIN, 276, 99);
Wait(10);
DisplaySpeechNoBlock(MAIN, "The cable wire is unplugged.", 1);
}

function object6_c() {
  // script for object6: Look at object
  
FaceLocation(MAIN, 282, 72);
Wait(10);
DisplaySpeechNoBlock(MAIN, "The TV wire is plugged into the receiver's TV in.", 1);
}

function object7_c() {
  // script for object7: Look at object
  
FaceLocation(MAIN, 282, 72);
Wait(10);
DisplaySpeechNoBlock(MAIN, "The TV wire is plugged into the receiver's cable in.", 1);
}

function object8_c() {
  // script for object8: Look at object
  
FaceLocation(MAIN, 294, 81);
Wait(10);
DisplaySpeechNoBlock(MAIN, "The TV wire is unplugged.", 1);
}

function object9_b() {
  // script for object9: Look at object

if(GetGlobalInt(18)== 0) {
  
	FaceLocation(MAIN, 270, 79);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "The hangar is plugged into the receiver's TV in.", 1);
}

else {

	FaceLocation(MAIN, 282, 79);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "The hangar is plugged into the receiver's cable in.", 1);
}
}

function object9_c() {
  // script for object9: Interact object
  
if(GetGlobalInt(18)== 0) {

	if(ACTION== USE) {
	
		FaceLocation(MAIN, 269, 79);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "It's plugged in all the way.", 1);
	}
	
	else if(ACTION== PUSH || ACTION== PULL) {
	
		FaceLocation(MAIN, 269, 79);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I don't think adjusting it will help.", 1);
	}
}

else if(GetGlobalInt(18)== 1) {

	if(ACTION== USE || ACTION== PUSH || ACTION== PULL) {
	
		FaceLocation(MAIN, 269, 79);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I don't want to mess with it now that the TV's on.", 1);
	}
}
}

function object10_c() {
  // script for object10: Look at object
  
FaceLocation(MAIN, 207, 71);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That must be Cliff's lunch.", 1);
}

function object10_d() {
  // script for object10: Interact object
  
if(ACTION== USE || ACTION== OPEN) {

	MoveCharacter(MAIN, 183, 118);
	
	if(GetViewportX() < 40) {
	
		while(GetViewportX() < 40) {
		
			SetViewport(GetViewportX() + 2, 0);
			Wait(1);
		}
	}

	else if(GetViewportX() > 40) {
	
		while(GetViewportX() > 40) {
		
			SetViewport(GetViewportX() - 2, 0);
			Wait(1);
		}
	}

	MoveCharacterBlocking(MAIN, 183, 118, 0);
	character[MAIN].loop= 2;
	Wait(10);

	if(CliffIdle== 1) {

		CliffIdle= 0;	
		
		if(IsOverlayValid(CliffIdleSpeech)) {
		  
			RemoveOverlay(CliffIdleSpeech);
		}
		
		ReleaseCharacterView(CLIFF);
	}

	if(GetGlobalInt(18)== 0) {				// tv off	
	
		GUIOff(2);
		StartCutscene(5);
		
		character[MAIN].loop= 13;
		character[MAIN].frame= 1;
		Wait(10);
  
		SetCharacterView(CLIFF, 13);
		AnimateCharacterEx(CLIFF, 4, 5, 0, 0, 1);
		ChangeCharacterView(CLIFF, 95);
		character[CLIFF].loop= 1;
		ReleaseCharacterView(CLIFF);
		StopMusic();
		Wait(10);
		
		DisplaySpeech(CLIFF, "Could you leave my lunch alone, please?");
		Wait(10);
		
		ChangeCharacterView(CLIFF, 13);
		AnimateCharacterEx(CLIFF, 5, 5, 0, 0, 1);
		character[CLIFF].loop= 0;
		PlayMusic(5);
		
		Wait(10);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		Wait(20);
		
		GUIOn(2);
		EndCutscene();
	}
	
	else {							// tv on, no hotdog

		if(GetGlobalInt(24)== 1) {				// tv on, has hotdog
	
			Wait(10);
			DisplaySpeechNoBlock(MAIN, "I could just take it with me...", 1);
		}
		
		else {
		
			SetMusicMasterVolume(30);
			Wait(10);
			StartCutscene(5);
			GUIOff(2);
			
			character[MAIN].loop= 13;
			character[MAIN].frame= 1;
			Wait(10);  	
			SetCharacterView(CLIFF, 93);
			SetCharacterSpeechView(CLIFF, 94);
			Wait(10);
			DisplaySpeech(CLIFF, "Hey, I need that lunch!");
			Wait(10);
			character[MAIN].loop= 2;
			character[MAIN].frame= 0;
			Wait(10);
			SetCharacterView(CLIFF, 90);
			SetCharacterSpeechView(CLIFF, 91);
			Wait(10);
			DisplaySpeech(CLIFF, "Even though... it DOES feel a little strange...");
			Wait(10);
			DisplaySpeech(CLIFF, "... watching TV in the shop...");
			SetCharacterView(CLIFF, 96);
			SetCharacterSpeechView(CLIFF, 97);
			Wait(10);
			character[CLIFF].loop= 2;
			Wait(10);
			DisplaySpeech(CLIFF, "... with no real... junk food... ");
			SetCharacterView(CLIFF, 96);
			Wait(40);
			DisplaySpeechNoBlock(MAIN, "... he's absorbed in the programming.", 1);
			Wait(30);
			SetMusicMasterVolume(90);
			Wait(10);
			
			GUIOn(2);
			EndCutscene();
		}
	}	
}

else if(ACTION== CLOSE) {
	
	FaceLocation(MAIN, 207, 71);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function hotspot19_a() {
  // script for hotspot19: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's a good deal for that expansion!", 1);
}

function hotspot19_b() {
  // script for hotspot19: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y - 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "No need to start another game going.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y - 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... that wouldn't be called for.", 1);
}
}

function hotspot19_c() {
  // script for hotspot19: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I've already got a game going.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Interact hotspot
  
if(ACTION== USE) {

	MoveCharacter(MAIN, 396, 122);
	
	while(GetViewportX() < 122) {
	 
		SetViewport(GetViewportX() + 2, GetViewportY()); 
		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 396, 122, 0);
	MoveCharacterBlocking(MAIN, 396, 118, 1);
	SetScreenTransition(TRANSITION_BOXOUT);
	NewRoom(9);
}
}


function hotspot4_a() {
  // script for hotspot4: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It ominously looms over the entrance.", 1);
}

function hotspot5_b() {
  // script for hotspot5: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have anything to ring up.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "That won't move around.", 1);
}
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's a glass display case.", 1);
}

function hotspot6_b() {
  // script for hotspot6: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not shopping for memorabilia.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It won't move.", 1);
}
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It looks back out on the street.", 1);
}

function hotspot8_c() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't need any of those.", 1);
}

function hotspot8_a() {
  // script for hotspot8: Interact hotspot

if(ACTION== USE) {
	  
	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not doing any shopping.", 1);
}
}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "They just hang on the wall.", 1);
}

function region7_a() {
  // script for region7: Player walks onto region
  
if(CliffIdle== 0) {				
	
	if(GetGlobalInt(18)== 0) {			// .. tv is off
	
		CliffIdle= 1;
		CliffIdleCounter= Random(2);
		character[CLIFF].loop= 0;
		ReleaseCharacterView(CLIFF);

		if(CliffIdleCounter== 0) {
		
			CliffIdleSpeech= DisplaySpeechBackground(CLIFF, "... ooh, ooh, baby!");
			SetCharacterView(CLIFF, 15);
			AnimateCharacter(CLIFF, 4, 7, 0);
		}

		if(CliffIdleCounter== 1) {
		
			CliffIdleSpeech= DisplaySpeechBackground(CLIFF, "... are you going to buy anything today?");
			SetCharacterView(CLIFF, 14);
			AnimateCharacter(CLIFF, 0, 5, 1);					// humming
		}

		if(CliffIdleCounter== 2) {
		
			CliffIdleSpeech= DisplaySpeechBackground(CLIFF, "... I miss junk food and television!");
			SetCharacterView(CLIFF, 14);
			AnimateCharacter(CLIFF, 0, 5, 1);
		}
	}

	else if(GetGlobalInt(18)== 1) {			// cliff watching tv
		
		CliffIdle= 1;
		ReleaseCharacterView(CLIFF);
		character[CLIFF].loop= 2;
		CliffIdleCounter= Random(2);

		if(CliffIdleCounter== 0) {
		
			CliffIdleSpeech= DisplaySpeechBackground(CLIFF, "... this... is great...");
			SetCharacterView(CLIFF, 14);
			AnimateCharacter(CLIFF, 2, 5, 1);
		}

		if(CliffIdleCounter== 1) {
		
			CliffIdleSpeech= DisplaySpeechBackground(CLIFF, "... could we... do this... some other time...?");
			SetCharacterView(CLIFF, 91);
			AnimateCharacter(CLIFF, 2, 5, 1);
		}

		if(CliffIdleCounter== 2) {
		
			CliffIdleSpeech= DisplaySpeechBackground(CLIFF, "... I suppose... network TV ... will suffice...");
			SetCharacterView(CLIFF, 14);
			AnimateCharacter(CLIFF, 2, 5, 1);
		}

	}
}
}

$$$!$$$ ROOM room18.crm
$$$!$$$ RS
// text script for room

function room_a() {
  // script for room: Player enters screen (after fadein)

if(GetGlobalInt(9)== 1) {

	MoveCharacterDirect(MAIN, 107, 121);
	MoveCharacterBlocking(TRAINER, character[TRAINER].x, character[TRAINER].y + 5, 1);
	MoveCharacterDirect(TRAINER, 236, 115);
	MoveCharacterBlocking(MAIN, 107, 121, 1);
	character[MAIN].loop= 2;
	MoveCharacterBlocking(TRAINER, 236, 115, 1);
	character[TRAINER].loop= 0;
	Wait(20);
	DisplaySpeech(TRAINER, "That was the tour!");
	Wait(30);
	DisplaySpeech(TRAINER, "... back to work, I guess.");
	Wait(10);
	ChangeCharacterView(TRAINER, 25);
	SetCharacterSpeechView(TRAINER, 26);
	SetCharacterIdle(TRAINER, 27, 6);
	character[TRAINER].y= 98;
	Wait(10);
	SetGlobalInt(7, 2);
	SetGlobalInt(9, 0);					// set state back to sitting down
	EnableRegion(2);
	SetMusicMasterVolume(90);
	Wait(30);
	
	GUIOn(2);
	EndCutscene();
}

else if(GetGlobalInt(9)== 2) {

	MoveCharacterDirect(MAIN, 107, 121);
	MoveCharacterBlocking(TRAINER, character[TRAINER].x, character[TRAINER].y + 5, 1);
	MoveCharacterDirect(TRAINER, 236, 115);
	MoveCharacterBlocking(MAIN, 107, 121, 1);
	character[MAIN].loop= 2;
	MoveCharacterBlocking(TRAINER, 236, 115, 1);
	character[TRAINER].loop= 0;
	Wait(20);
	DisplaySpeech(TRAINER, "... come back when you're ready to get fit!");
	Wait(30);
	ChangeCharacterView(TRAINER, 25);
	SetCharacterSpeechView(TRAINER, 26);
	SetCharacterIdle(TRAINER, 27, 6);
	character[TRAINER].y= 98;
	Wait(10);
	SetGlobalInt(7, 2);
	SetGlobalInt(9, 0);					// set state back to sitting down
	EnableRegion(2);
	SetMusicMasterVolume(90);
	Wait(30);
	
	GUIOn(2);
	EndCutscene();
}

else if(GetGlobalInt(13)== 7) {				// coming back from recue morry cutscene

	MoveCharacterBlocking(MAIN, 50, 125, 1);		// from sauna
	SetGlobalInt(7, 2);
	SetGlobalInt(13, 0);					// no more cutscene
	Wait(20);
	DisplaySpeechNoBlock(MAIN, "... now to get Anderson!", 1);
	Wait(30);
	
	GUIOn(2);
}

if(GetGlobalInt(7)== 6) {					// from map
	
	MoveCharacterBlocking(MAIN, 291, 131, 1);
	MoveCharacter(MAIN, 264, 133);
	SetGlobalInt(7, 2);					// set state to in fitness club
	SetScreenTransition(TRANSITION_CROSSFADE);
}

else if(GetGlobalInt(7)== 4) {					// from fitness floor
	
	MoveCharacterBlocking(MAIN, 107, 121, 1);
	character[MAIN].loop= 2;
	SetGlobalInt(7, 2);
	EnableRegion(2);
}

else if(GetGlobalInt(7)== 7) {

	MoveCharacterBlocking(MAIN, 50, 125, 1);		// from sauna
	SetGlobalInt(7, 2);
}

if(GetGlobalInt(21)== 0) {
	
	MoveCharacterBlocking(MAIN, 153, 129, 0);
	SetCharacterSpeechView(MAIN, 74);
	Wait(10);
	DisplaySpeech(MAIN, "Hmm... ");
	SetCharacterSpeechView(MAIN, 2);
	Wait(10);
	SetCharacterView(MAIN, 75);
	Wait(40);
	ReleaseCharacterView(MAIN);
	Wait(10);
	MoveCharacterBlocking(MAIN, 125, 128, 0);
	Wait(30);
	character[MAIN].loop= 3;
	Wait(40);
	character[MAIN].loop= 1;
	Wait(10);
	DisplaySpeech(MAIN, "I wonder where Morry is...?");  
	Wait(10);
	SetCharacterView(TRAINER, 145);				// trainer excited
	SetCharacterSpeechView(TRAINER, 146);
	Wait(10);
	int temp= DisplaySpeechBackground(TRAINER, "Hello, and welcome to 25-Hour Fitness!");
	SetCharacterView(TRAINER, character[TRAINER].talkview + 1);
	AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
	Wait(20);
	MoveCharacterBlocking(MAIN, 111, 120, 0);
	character[MAIN].loop= 3;
	Wait(10);
	character[MAIN].loop= 2;
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	temp= DisplaySpeechBackground(TRAINER, "Today is a Grrr-eat Day to Get in Shape!");
	SetCharacterView(TRAINER, character[TRAINER].talkview + 1);
	AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
	Wait(30);
	MoveCharacterBlocking(MAIN, 56, 123, 0);
	character[MAIN].loop= 1;
	Wait(30);
	SetCharacterView(MAIN, 75);
	Wait(40);
	ReleaseCharacterView(MAIN);
	Wait(20);
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	ReleaseCharacterView(TRAINER);				// trainer normal
	SetCharacterSpeechView(TRAINER, 26);
	Wait(10);
	DisplaySpeechBackground(TRAINER, "Just let me see that membership card...");
	SetCharacterView(TRAINER, character[TRAINER].talkview + 1);
	AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
	Wait(40);
	MoveCharacterBlocking(MAIN, 163, 129, 0);
	character[MAIN].loop= 2;
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	SetCharacterView(TRAINER, 145);
	SetCharacterSpeechView(TRAINER, 146);
	DisplaySpeech(TRAINER, "... and you can get your workout started!");
	SetCharacterView(MAIN, 72);				 // jackson angry finger
	SetCharacterSpeechView(MAIN, 62);
	Wait(10);
	DisplaySpeech(MAIN, "Silence!");
	SetCharacterView(MAIN, 72);
	SetCharacterView(TRAINER, 147);				// trainer nervous
	SetCharacterSpeechView(TRAINER, 148);
	SetCharacterIdle(TRAINER, 149, 5);
	SetCharacterSpeechView(MAIN, 60);			// jackson angry
	Wait(10);
	DisplaySpeech(MAIN, "There's no workout being started here...");
	DisplaySpeech(MAIN, "... I'm trying to get my friend out of this place!");
	Wait(10);
	ReleaseCharacterView(MAIN);				// jackson normal
	SetCharacterSpeechView(MAIN, 2);
	SetCharacterIdle(MAIN, 61, 6);
	MoveCharacterBlocking(MAIN, 105, 128, 0);
	Wait(10);
	DisplaySpeech(MAIN, "We have a Slackmaster game to...");
	character[MAIN].loop= 3;
	Wait(30);
	DisplaySpeech(MAIN, "Where is he...");
	temp= DisplaySpeechBackground(MAIN, "... back here?");
	SetCharacterView(MAIN, character[MAIN].talkview + 1);
	AnimateCharacter(MAIN, character[MAIN].loop, 5, 1);
	Wait(80);
	ReleaseCharacterView(MAIN);
	DisableRegion(2);
	MoveCharacter(MAIN, 105, 103);
	DisplaySpeech(TRAINER, "Umm, sir...");
	StopMoving(MAIN);
	FaceCharacter(MAIN, TRAINER);
	SetCharacterSpeechView(TRAINER, 150);
	DisplaySpeech(TRAINER, "Uhh... hehe..."); 
	SetCharacterSpeechView(TRAINER, 148);
	DisplaySpeech(TRAINER, "Yeah, um...");
	DisplaySpeech(TRAINER, "... I can't let you in without a membership card.");
	MoveCharacterBlocking(MAIN, 160, 128, 0);
	EnableRegion(2);
	character[MAIN].loop= 2;
	Wait(10);
	DisplaySpeech(MAIN, "A membership card?");
	Wait(10);
	DisplaySpeech(TRAINER, "Yeah, they're kind of... required.");
	SetGlobalInt(21, 1);					// has gone through cutscene
	Wait(30);
	ReleaseCharacterView(TRAINER);
	SetCharacterSpeechView(TRAINER, 26);
	SetCharacterIdle(TRAINER, 27, 6);
	Wait(10);
	SetMusicMasterVolume(90);
	Wait(10);
	
	EndCutscene();
	GUIOn(2);
}

}



function object1_a() {
  // script for object1: Interact object
  
DisplaySpeech(MAIN, "I refuse to interact with it.");
}

function object1_b() {
  // script for object1: Look at object
  
DisplaySpeech(MAIN, "It's a big, pink, rubber ball.");
DisplaySpeech(MAIN, "Looks like there's a tiny hole used to fill it up with air on it.");
DisplaySpeech(MAIN, "It's only discernable weakness.");
DisplaySpeech(MAIN, "You shall prove a formidable foe, oh rubber ball.");
}

function object1_c() {
  // script for object1: Pick up object
  
DisplaySpeech(MAIN, "Not likely.");
}

function object2_a() {
  // script for object2: Look at object
  
DisplaySpeech(MAIN, "Victory is mine!");
}

function object2_b() {
  // script for object2: Interact object
  
DisplaySpeech(MAIN, "Oh, I'm afraid it's useless now that it's been slain.");
}

function object2_c() {
  // script for object2: Pick up object
  
DisplaySpeech(MAIN, "Oh, I'm afraid it's useless now that it's been slain.");
}

function object1_d() {
  // script for object1: Use inventory on object

character[MAIN].loop= 2;
DisplaySpeech(MAIN, "Look, someone over there is mocking the pink ball!");
character[TRAINER].loop= 2;
Wait(10);
FollowCharacter(TRAINER, -1);
MoveCharacter(TRAINER, 236, 113);
DisplaySpeechBackground(TRAINER, "Who would do such a despicable thing.");  
MoveCharacterBlocking(MAIN, 28, 134, 1);
character[MAIN].loop= 0;
Wait(10);
DisplaySpeech(MAIN, "Muhahaha");
SetCharacterView(MAIN, 6);
AnimateCharacter(MAIN, 3, 5, 0);
Wait(20);
ReleaseCharacterView(MAIN);
ObjectOff(1);
ObjectOn(2);
MoveCharacterBlocking(MAIN, 84, 119, 1);
character[MAIN].loop= 1;
DisplaySpeech(MAIN, "Gee, they must have ran off.");
DisplaySpeech(TRAINER, "Well anyways, back to...");
MoveCharacterBlocking(TRAINER, 45, 116, 0);
Wait(60);
DisplaySpeech(MAIN, "I think I sat on it too hard.");
DisplaySpeech(TRAINER, "That's strange, those balls were designed to hold the weight of a 500 lb. fat person.");
DisplaySpeech(TRAINER, "I'll have to talk to our distributor about that.");
DisplaySpeech(TRAINER, "We'll miss you, pink ball.");
DisplaySpeech(TRAINER, "We'll miss you.");
DisplaySpeech(TRAINER, "Anyways, is there any other equipment in here you want to try out?");
FollowCharacterEx(TRAINER, MAIN, 20, 30);
SetGlobalInt(9, 2);


}

function object3_a() {
  // script for object3: Any click on object
  
if(GetGlobalInt(9)== 1) {
  	GUIOff(2);
  	DisplaySpeech(TRAINER, "That's not the big pink ball!");
      DisplaySpeech(MAIN, "Listen I've got other things to be doing in here...");
      DisplaySpeech(TRAINER, "Well you've seen what 25 Hour Fitness has to offer.");
      DisplaySpeech(TRAINER, "The tour is finished.");
      FollowCharacter(TRAINER, -1);
      FollowCharacterEx(MAIN, TRAINER, 20, 30);
      MoveCharacterBlocking(TRAINER, 179, 123, 0);
      Wait(10);
      character[TRAINER].loop= 1;
      MoveCharacterBlocking(TRAINER, 600, 129, 0);
      FollowCharacter(MAIN, -1);
      MoveCharacterBlocking(TRAINER, 684, 111, 1);
      character[TRAINER].x= 680;
      character[TRAINER].y= 81;
      ChangeCharacterView(TRAINER, 25);
      character[TRAINER].talkview= 25;
      MoveCharacterBlocking(MAIN, 712, 129, 0);
      DisplaySpeech(TRAINER, "Pretty cool, huh?");
      DisplaySpeech(MAIN, "Hardly.");
      EnableHotspot(3);
      GUIOn(2);
      SetGlobalInt(9, 0);					// Trainer is sitting back down
}

}

function object3_b() {
  // script for object3: Interact object
  
if(ACTION== USE) {
	if(GetGlobalInt(9)== 2){
      	if(GetGlobalInt(10)== 0) {
			DisplaySpeech(MAIN, "This primitive apparatus looks promising.");
	            MoveCharacterBlocking(MAIN, 250, 141, 1);
	            SetObjectView(3, 6);
	            SetCharacterTransparency(MAIN, 100);
	            AnimateObject(3, 4, 5, 0);
	            Wait(100);
                  DisplaySpeechBackground(TRAINER, "Step aside boy.");
                  MoveCharacterDirect(TRAINER, 250, 141);
                  Wait(90);
                  DisplaySpeechBackground(TRAINER, "Let a real man show you how it's done.");
	            SetCharacterTransparency(MAIN, 0);
	            Wait(10);
	            MoveCharacterBlocking(MAIN, 209, 121, 1);
	            character[MAIN].loop= 2;
                	SetObjectPosition(3, 206, 160);
                  SetObjectView(3, 39);
                  SetCharacterTransparency(TRAINER, 100);
                  AnimateObject(3, 4, 5, 0);
                  Wait(155);
                  SetObjectPosition(3, 231, 160);
                  SetCharacterTransparency(TRAINER, 0);
                  Wait(10);
                  MoveCharacterBlocking(TRAINER, 171, 120, 1);
                  DisplaySpeech(TRAINER, "Oooh.");
                  DisplaySpeech(TRAINER, "That felt good.");
            }
            else if(GetGlobalInt(10)== 1) {
              	DisplaySpeech(MAIN, "This primitive apparatus looks promising.");
	            MoveCharacterBlocking(MAIN, 250, 141, 1);
	            SetObjectView(3, 6);
	            SetCharacterTransparency(MAIN, 100);
	            AnimateObject(3, 4, 5, 0);
	            Wait(100);
                  DisplaySpeechBackground(TRAINER, "Step aside boy.");
                  MoveCharacterDirect(TRAINER, 250, 141);
                  Wait(90);
                  DisplaySpeechBackground(TRAINER, "Let a real man show you how it's done.");
	            SetCharacterTransparency(MAIN, 0);
	            Wait(10);
	            MoveCharacterBlocking(MAIN, 209, 121, 1);
	            character[MAIN].loop= 2;
                	SetObjectPosition(3, 206, 160);
                  SetObjectView(3, 40);
                  SetCharacterTransparency(TRAINER, 100);
                  AnimateObject(3, 4, 5, 0);
                  Wait(200);
                  SetObjectPosition(3, 231, 160);
                  SetCharacterTransparency(TRAINER, 0);
                  Wait(10);
                  FollowCharacter(TRAINER, -1);
                  MoveCharacterBlocking(TRAINER, 171, 120, 1);
                  DisplaySpeech(TRAINER, "Oh sweet lord.");
                  DisplaySpeech(TRAINER, "I've become a weakling.");
                  DisplaySpeechBackground(TRAINER, "<sob>");
                  MoveCharacterBlocking(TRAINER, 489, 115, 0);
                  character[TRAINER].x= 680;
   		      character[TRAINER].y= 81;
    		      ChangeCharacterView(TRAINER, 25);
    		      character[TRAINER].talkview= 25;
                  SetGlobalInt(9, 3);				// Set trainers state to embarrassed
            }  	
            
      }
}
}


function object3_c() {
  // script for object3: Use inventory on object
  
MoveCharacterBlocking(MAIN, 245, 125, 0);
FaceCharacter(MAIN, TRAINER);
DisplaySpeech(MAIN, "Is that person using the cardio equipment properly?");
FollowCharacter(TRAINER, -1);
character[TRAINER].loop= 3;
DisplaySpeech(TRAINER, "Where?");
character[MAIN].loop= 0;
DisplaySpeech(MAIN, "A little dab on the bar should do quite nicely...");
SetCharacterView(MAIN, 2);
AnimateCharacter(MAIN, 4, 10, 0);
Wait(10);
ReleaseCharacterView(MAIN);
MoveCharacterBlocking(MAIN, 284, 122, 0);
SetCharacterView(MAIN, 2);
AnimateCharacter(MAIN, 4, 10, 0);
Wait(10);
ReleaseCharacterView(MAIN);
FaceCharacter(MAIN, TRAINER);
SetGlobalInt(10, 1);
character[MAIN].loop= 0;
DisplaySpeech(TRAINER, "I swear more people hurt themselves that way than...");
DisplaySpeech(TRAINER, "Hmm.  Everything looks ok in there.");
character[TRAINER].loop= 0;
DisplaySpeech(TRAINER, "Don't worry lad...");
DisplaySpeech(TRAINER, "...you'll be familiar with all the proper protocol and procedures when I'm finished with you.");
DisplaySpeech(TRAINER, "You won't make these stupid mistakes again.");
FollowCharacterEx(TRAINER, MAIN, 20, 30);

}


function room_c() {
  // script for room: Player enters screen (before fadein)


if(GetGlobalInt(7)== 6) {				// coming from map

	character[MAIN].x= 320;
	character[MAIN].y= 131;
	character[MAIN].loop= 1;
}

else if(GetGlobalInt(7)== 4) {				// from club floor

	character[MAIN].x= 157;
	character[MAIN].y= 99;
	character[MAIN].loop= 1;
	DisableRegion(2);
}

else if(GetGlobalInt(7)== 7) {				// coming from sauna

	character[MAIN].x= 12;
	character[MAIN].y= 125;
	character[MAIN].loop= 2;
}

if(GetGlobalInt(9)== 0) {				// seated at table

	character[TRAINER].x= 236;
	character[TRAINER].y= 98;
	character[TRAINER].loop= 0;
	SetCharacterIdle(TRAINER, 27, 5);
}

else if(GetGlobalInt(9)== 1) {				// if he's coming back from tour

	GUIOff(4);
	StartCutscene(5);
	DisableRegion(2);
	ReleaseCharacterView(TRAINER);
	SetCharacterSpeechView(TRAINER, 40);
	character[TRAINER].room= 18;
	character[TRAINER].x= 133;
	character[TRAINER].y= 110;
	character[TRAINER].loop= 0;
}

else if(GetGlobalInt(9)== 2) {

	GUIOff(4);
	StartCutscene(5);
	DisableRegion(2);
	ReleaseCharacterView(TRAINER);
	SetCharacterSpeechView(TRAINER, 40);	
	character[TRAINER].room= 18;
	character[TRAINER].x= 133;
	character[TRAINER].y= 110;
	character[TRAINER].loop= 0;
}

if(GetGlobalInt(21)== 0) {				// for initial encounter

	GUIOff(2);  
	StartCutscene(5);
	PlayMusic(2);
	PlayMusicQueued(3);
	SetMusicMasterVolume(30);
}

else {

	PlayMusic(3);
	SetMusicRepeat(0);
}
}


function hotspot2_a() {
  // script for hotspot2: Interact hotspot
  
if(ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 320, 131, 0);
	character[MAIN].loop= 2;
	
	FadeOut(5);
	Wait(30);
	StopMusic();
	Wait(30);
	SetScreenTransition(TRANSITION_FADE);
	
	NewRoom(12);
}
}

function object0_a() {
  // script for object0: Pick up object
  
MoveCharacterBlocking(MAIN, 92, 136, 0);
character[MAIN].loop= 1;
Wait(10);
character[MAIN].loop= 5;
character[MAIN].frame= 2;
Wait(10);

if(GetGlobalInt(20)== 1) {			// if he's given coupon to trainer

	Wait(10);
	PlaySound(4);
	ObjectOff(0);
	AddInventory(30);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}	

else {

	GUIOff(2);
	StartCutscene(5);
	
	Wait(20);
	SetCharacterSpeechView(TRAINER, 150);
	DisplaySpeech(TRAINER, "Uh... hehe...");
	Wait(10);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	Wait(10);
	character[MAIN].loop= 0;
	Wait(10);
	character[MAIN].loop= 2;
	SetCharacterSpeechView(TRAINER, 26);
	DisplaySpeech(TRAINER, "I'm sorry, those aren't free samples.");
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "Oh.", 1);
	Wait(20);
	
	GUIOn(2);
	EndCutscene();
}
}


function hotspot3_a() {
  // script for hotspot3: Interact hotspot
  
if(ACTION== USE) {
	
	MoveCharacter(MAIN, mouse.x, mouse.y);
}
}

function hotspot1_a() {
  // script for hotspot1: Interact hotspot
  
if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 57, 120, 0);
	character[MAIN].loop= 1;
	
	if(GetGlobalInt(9)== 3) {			// if trainer is stuck on bench press
		
		Wait(10);
		MoveCharacterBlocking(MAIN, 0, 120, 1);
		NewRoom(20);
	}
		
	else {
	  
		DisplaySpeech(TRAINER, "The locker rooms and sauna are for members only!");
		Wait(10);
		MoveCharacterBlocking(MAIN, 85, 126, 0);
	}
}
}

function hotspot1_b() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, 26, 75);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It leads back into the locker rooms.", 1);
}

function hotspot2_b() {
  // script for hotspot2: Look at hotspot
  
FaceLocation(MAIN, 317, 95);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It leads out of the buildling.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, 117, 59);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's where all the workout stuff is.", 1);
}

function hotspot4_b() {
  // script for hotspot4: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I doubt he knows how to operate it.", 1);
}

function hotspot4_c() {
  // script for hotspot4: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I've got my own computer if I wanted to do that.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "They'd probably make me pay for it.", 1);
}

}

function hotspot4_d() {
  // script for hotspot4: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's attached to the desk.", 1);
}

function hotspot5_a() {
  // script for hotspot5: Look at hotspot
  
FaceLocation(MAIN, 33, 116);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's a big pile o'supplement.", 1);
}

function hotspot5_b() {
  // script for hotspot5: Interact hotspot
  
if(ACTION== USE || ACTION== OPEN) {

	FaceLocation(MAIN, 33, 116);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't need a sample.", 1);
}

else if(ACTION== PUSH) {

	FaceLocation(MAIN, 33, 116);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't need to do that.", 1);
}
}

function hotspot5_c() {
  // script for hotspot5: Pick up hotspot
  
MoveCharacterBlocking(MAIN, 92, 136, 0);
character[MAIN].loop= 1;
Wait(10);
character[MAIN].loop= 5;
character[MAIN].frame= 2;
Wait(10);

if(GetGlobalInt(20)== 1) {			// if he's given coupon to trainer

	ObjectOff(0);
	AddInventory(30);
	Wait(10);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}	

else {

	character[TRAINER].loop= 3;
	DisplaySpeech(TRAINER, "Uh... hehe..."); 
	character[TRAINER].loop= 1;
	DisplaySpeech(TRAINER, "You can't take that.");
	Wait(10);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}
}

function object0_b() {
  // script for object0: Look at object


FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "'Kaboom! High Performance Dietary Supplement'", 1);
}

function object0_c() {
  // script for object0: Interact object
  
if(ACTION== USE) {

	FaceLocation(MAIN, 67, 110);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't want any.", 1);
}

else if(ACTION== PUSH) {

	FaceLocation(MAIN, 67, 110);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't need to do that.", 1);
}
}

function room_b() {
  // script for room: Repeatedly execute
  
CheckSpeech();
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot

FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "The Kaboom display is on it.", 1);  
}

function hotspot6_b() {
  // script for hotspot6: Interact hotspot
  
if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "That would just knock everything over.", 1);
}
}

function hotspot8_a() {
  // script for hotspot8: Look at hotspot

MoveCharacterBlocking(MAIN, 81, 126, 0);
character[MAIN].loop= 1;
Wait(20);
GUIOff(2);
StartCutscene(5);

Wait(20);  
DisplaySpeech(MAIN, "'Tired of exercising...'"); 
DisplaySpeech(MAIN, "'... and not getting those results you were looking for?'");
DisplaySpeech(MAIN, "'Try Kaboom! fitness supplement-- FREE!!'");
DisplaySpeechNoBlock(MAIN, "'(see ad in your local paper)'", 1);
Wait(20);
SetGlobalInt(50, 1);

GUIOn(2);
EndCutscene();

}

function hotspot8_b() {
  // script for hotspot8: Interact hotspot
  
if(ACTION== USE) {
 
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's just an ad.", 1);
}
}

function hotspot8_c() {
  // script for hotspot8: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't think the ad itself is worth anything.", 1);
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I suppose this is where the gatekeeper sits.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's not my desk.", 1);
}
}

function hotspot9_c() {
  // script for hotspot9: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "There's nothing interesting on it.", 1);
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's an ad for 25-Hour Fitness.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's not a poster I would want on my wall.", 1);
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot

MoveCharacterBlocking(MAIN, 278, 132, 0);
character[MAIN].loop= 3;
Wait(20);
GUIOff(2);
StartCutscene(5);

Wait(20);  
DisplaySpeech(MAIN, "'Kaboom! fitness supplement'");
Wait(10);
DisplaySpeech(TRAINER, "That stuff rocks hard!");
Wait(10);
DisplaySpeech(TRAINER, "Check out our display by the locker room.");
Wait(10);
character[MAIN].loop= 1;
Wait(20);

GUIOn(2);
EndCutscene();
}

function hotspot11_b() {
  // script for hotspot11: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'd rather just ignore it.", 1);
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'm guessing it seperates this entrance from the club floor.", 1);
}

function hotspot12_b() {
  // script for hotspot12: Interact hotspot
  
if(ACTION== PUSH || ACTION== PULL) {
 
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It looks pretty sturdy.", 1);
}
}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "No one's in there right now.", 1);
}

function hotspot13_b() {
  // script for hotspot13: Interact hotspot
  
MoveCharacter(MAIN, mouse.x, mouse.y);
}

function hotspot13_c() {
  // script for hotspot13: Pick up hotspot
  
MoveCharacter(MAIN, mouse.x, mouse.y);
}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "No one is using it right now.", 1);
}

function hotspot14_b() {
  // script for hotspot14: Interact hotspot
  
MoveCharacter(MAIN, mouse.x, mouse.y);
}

function hotspot14_c() {
  // script for hotspot14: Pick up hotspot
  
MoveCharacter(MAIN, mouse.x, mouse.y);
}

function region2_a() {
  // script for region2: Player walks onto region
  
if(GetGlobalInt(9)== 0) {			// if he hasn't given free workout card to trainer

	if(GetDialogOption(5, 9)== 1) {
	
		StopMoving(MAIN);
		Wait(20);
		StartCutscene(5);
		GUIOff(2);
		
		Wait(20);
		character[MAIN].loop= 2;
		Wait(10);
		DisplaySpeech(MAIN, "Could I go on that tour again?");
		DisplaySpeech(TRAINER, "... sure!");
		SetGlobalInt(9, 1);
		
		Wait(20);
		ChangeCharacterView(TRAINER, 39);
		SetCharacterSpeechView(TRAINER, 40);
		SetCharacterIdle(TRAINER, 41, 6);
		character[TRAINER].y= 115;
		Wait(20);
		MoveCharacterDirect(TRAINER, 150, 115);
		MoveCharacterBlocking(TRAINER, 150, 115, 1);
		MoveCharacterBlocking(MAIN, 114, 117, 0);
		MoveCharacterBlocking(MAIN, 144, 104, 1);
		NewRoom(24);
	}
	
	if(GetDialogOption(5, 10)== 1) {
	
		StopMoving(MAIN);
		Wait(20);
		StartCutscene(5);
		GUIOff(2);
		
		Wait(20);
		character[MAIN].loop= 2;
		Wait(10);
		DisplaySpeech(MAIN, "Could I resume my workout now?");
		DisplaySpeech(TRAINER, "... sure!");
		SetGlobalInt(9, 2);
		
		Wait(20);
		ChangeCharacterView(TRAINER, 39);
		SetCharacterSpeechView(TRAINER, 40);
		SetCharacterIdle(TRAINER, 41, 6);
		character[TRAINER].y= 115;
		Wait(20);
		MoveCharacterDirect(TRAINER, 150, 115);
		MoveCharacterBlocking(TRAINER, 150, 115, 1);
		MoveCharacterBlocking(MAIN, 114, 117, 0);
		MoveCharacterBlocking(MAIN, 144, 104, 1);
		NewRoom(24);
	}
	
	else {
	  
		StopMoving(MAIN);
		DisplaySpeech(TRAINER, "Sorry, members only!");
		MoveCharacterBlocking(MAIN, 119, 124, 0);
	}	
}

else {

	MoveCharacterBlocking(MAIN, character[MAIN].x, character[MAIN].y - 5, 0);
	NewRoom(24);
}

}




$$$!$$$ ROOM room19.crm
$$$!$$$ RS
// text script for room

int ViewportX= 220;
int XScroll= 0;
int CharacterX;

import int SteveIdle;							// flag set when steve has idle speech
import int SteveIdleSpeech;						// contains overlay id of steve's idle speech
int SteveIdleCounter= 0;						// counter for different idle speech


function room_a() {
  // script for room: Player enters screen (before fadein)

if(GetGlobalInt(42)== 1) {						// talked into vent

	character[STEVE].x= 215;
	character[STEVE].y= 170;
	character[STEVE].loop= 3;
	
	character[GUYSTUDENT].x= 185;
	character[GUYSTUDENT].y= 125;
	character[GUYSTUDENT].loop= 0;
	
	SetCharacterIdle(LADYSTUDENT, 56, 5);
	character[LADYSTUDENT].x= 235;
	character[LADYSTUDENT].y= 125;
	character[LADYSTUDENT].loop= 0;
	
	ChangeCharacterView(ANDERSON, 57);
	SetCharacterSpeechView(ANDERSON, 58);
	SetCharacterIdle(ANDERSON, 59, 6);
	character[ANDERSON].room= 19;
	character[ANDERSON].x= 135;
	character[ANDERSON].y= 125;
	character[ANDERSON].loop= 0;
	ReleaseCharacterView(ANDERSON);
	
	SetViewport(0, 0);
}

else if(GetGlobalInt(42)== 2) {						// walkie talkie in vent

	character[STEVE].x= 215;
	character[STEVE].y= 170;
	character[STEVE].loop= 3;
	
	character[GUYSTUDENT].x= 185;
	character[GUYSTUDENT].y= 125;
	character[GUYSTUDENT].loop= 0;
	
	SetCharacterIdle(LADYSTUDENT, 56, 5);
	character[LADYSTUDENT].x= 235;
	character[LADYSTUDENT].y= 125;
	character[LADYSTUDENT].loop= 0;
	
	ChangeCharacterView(ANDERSON, 57);
	SetCharacterSpeechView(ANDERSON, 58);
	SetCharacterIdle(ANDERSON, 59, 6);
	character[ANDERSON].room= 19;
	character[ANDERSON].x= 135;
	character[ANDERSON].y= 125;
	character[ANDERSON].loop= 0;
	ReleaseCharacterView(ANDERSON);
	
	SetViewport(0, 0);
}

else if(GetGlobalInt(42)== 3) {						// walkie talkie in vent

	character[STEVE].x= 215;
	character[STEVE].y= 170;
	character[STEVE].loop= 3;
	
	character[GUYSTUDENT].x= 185;
	character[GUYSTUDENT].y= 125;
	character[GUYSTUDENT].loop= 0;
	
	SetCharacterIdle(LADYSTUDENT, 56, 5);
	character[LADYSTUDENT].x= 235;
	character[LADYSTUDENT].y= 125;
	character[LADYSTUDENT].loop= 0;
	
	ChangeCharacterView(ANDERSON, 57);
	SetCharacterSpeechView(ANDERSON, 58);
	SetCharacterIdle(ANDERSON, 59, 6);
	character[ANDERSON].room= 19;
	character[ANDERSON].x= 135;
	character[ANDERSON].y= 125;
	character[ANDERSON].loop= 0;
	ReleaseCharacterView(ANDERSON);
	
	SetViewport(0, 0);
}

else { 

	if(GetGlobalInt(7)== 0) {					// coming from outside
	
		SetMusicRepeat(0);
		PlayMusic(3);

		character[MAIN].x= 523;
		character[MAIN].y= 95;
		character[MAIN].loop= 1;
	
		if(GetGlobalInt(33)== 2) {				// if he's put robe on before
		
			ChangeCharacterView(MAIN, 7);
			SetCharacterIdle(MAIN, 45, 5);
			character[MAIN].talkview= 34;
			character[MAIN].loop= 1;
			AddInventory(35);
			LoseInventory(12);
			SetGlobalInt(33, 3);
		}

		if(GetGlobalInt(51)== 0 && GetGlobalInt(34)== 0) {	// first time entering building (if steve is there)
		
			GUIOff(2);
			GUIOn(4);
			StartCutscene(5);
			SetMusicRepeat(0);
			PlayMusic(8);
		}
	}
	
	if(GetGlobalInt(34)== 0) {			// steve instructing class
	  
		character[STEVE].x= 215;
		character[STEVE].y= 170;
		character[STEVE].loop= 3;
		SetCharacterIdle(STEVE, 34, 5);
		SetTimer(1, 100);					// idle speech timer
	
		character[GUYSTUDENT].x= 185;
		character[GUYSTUDENT].y= 125;
		character[GUYSTUDENT].loop= 0;
		
		SetCharacterIdle(LADYSTUDENT, 56, 5);
		character[LADYSTUDENT].x= 235;
		character[LADYSTUDENT].y= 125;
		character[LADYSTUDENT].loop= 0;
	}
	
	else if(GetGlobalInt(34)== 1) {			// steve outside
	
		SetTimer(1, 0);
	}
	
	else if(GetGlobalInt(34)== 3) {			// steve ko'd
		
		SetTimer(1, 0);
		ReleaseCharacterView(STEVE);
		AnimateCharacter(STEVE, 7, 7, 1);
		SetCharacterBaseline(STEVE, 20);
		RemoveWalkableArea(4);
	}
	
	if(GetGlobalInt(29)== 0) {					// if anderson isn't rescued
	
		ChangeCharacterView(ANDERSON, 57);
		SetCharacterSpeechView(ANDERSON, 58);
		SetCharacterIdle(ANDERSON, 59, 6);
		character[ANDERSON].room= 19;
		character[ANDERSON].x= 135;
		character[ANDERSON].y= 125;
		character[ANDERSON].loop= 0;
		ReleaseCharacterView(ANDERSON);
	}
}
}

function room_b() {
  // script for room: Player enters screen (after fadein)

if(GetGlobalInt(42)== 1) {					// talked into vent

	if(GetGlobalInt(25)== 0) {				// if he hasn't talked into vent before

		Wait(20);
		DisplaySpeechBackground(STEVE, "... and incapacitate the foe with--");
		Wait(60);
		DisplaySpeechAt(0, 20, 50, MAIN, "Hello?");
		Wait(10);
		SetMusicRepeat(1);
		SetMusicMasterVolume(30);
		PlayMusic(12);
		Wait(30);
		
		while(GetViewportX() < 55) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
		
		Wait(10);
		int temp= DisplaySpeechBackground(STEVE, "... ?");
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}

		Wait(40);
		DisplaySpeech(STEVE, "... did someone have a question?");
		Wait(20);
		character[GUYSTUDENT].loop= 1;
		Wait(10);
		character[ANDERSON].loop= 6;
		Wait(20);
		character[LADYSTUDENT].loop= 1;
		character[GUYSTUDENT].loop= 2;
		Wait(20);
		character[ANDERSON].loop= 0;
		ReleaseCharacterView(ANDERSON);
		Wait(10);
		character[GUYSTUDENT].loop= 0;
		Wait(10);
		character[LADYSTUDENT].loop= 0;
		Wait(20);
		DisplaySpeech(STEVE, "I thought I heard something...?");
		ReleaseCharacterView(STEVE);
		MoveCharacterDirect(STEVE, 373, 128);
		
		while(GetViewportX() < 110) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
		
		Wait(10);
		character[LADYSTUDENT].loop= 2;
		Wait(10);
		character[GUYSTUDENT].loop= 2;
		Wait(5);
		character[ANDERSON].loop= 2;
		Wait(30);
		character[STEVE].loop= 0;
		Wait(5);
		character[STEVE].loop= 1;
		Wait(10);
		DisplaySpeech(STEVE, "... keep practicing those meditative exercises, students!");
		Wait(10);
		character[STEVE].loop= 0;
		Wait(5);
		character[STEVE].loop= 2;
		Wait(10);
		DisplaySpeech(STEVE, "... I'm breaching compound security in case a student is late!");
		Wait(10);
		MoveCharacterBlocking(STEVE, character[STEVE].x + 100, character[STEVE].y, 0);
		Wait(10);
		FadeOut(1);
		
		SetGlobalInt(13, 5);					// set appropriate cutscene
		SetScreenTransition(TRANSITION_BOXOUT);
		SetMusicRepeat(0);
		EndCutscene();
		Wait(30);
		NewRoom(22);						// to intro
	}
	
	else if(GetGlobalInt(25)== 1) {					// has talked into the vent before
	
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		DisplaySpeechBackground(STEVE, "... and drop repeated blows to the--");
		Wait(60);
		DisplaySpeechAt(0, 20, 50, MAIN, "Hello?");
		Wait(10);
		
		
		while(GetViewportX() < 55) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}

		int temp= DisplaySpeechBackground(STEVE, "... ?");
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}

		Wait(40);
		DisplaySpeech(STEVE, "... who is that?");
		Wait(20);
		character[GUYSTUDENT].loop= 1;
		Wait(5);
		character[ANDERSON].loop= 6;
		ReleaseCharacterView(ANDERSON);
		Wait(20);
		character[LADYSTUDENT].loop= 1;
		character[GUYSTUDENT].loop= 2;
		Wait(20);
		character[ANDERSON].loop= 0;
		ReleaseCharacterView(ANDERSON);
		Wait(10);
		character[GUYSTUDENT].loop= 0;
		Wait(10);
		character[LADYSTUDENT].loop= 0;
		Wait(10);
		StopMusic();
		Wait(10);
		DisplaySpeech(STEVE, "... I'm not letting it bother me.");
		Wait(30);
		NewRoom(15);
	}
}

else if(GetGlobalInt(42)== 2) {					// walkie talkie

	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	DisplaySpeechBackground(STEVE, "... and repeatedly kick the testicles with--");
	Wait(60);
	DisplaySpeechAt(0, 20, 50, TALKIE, "YOU LITTLE PUNK!");
	Wait(10);
	SetMusicRepeat(1);
	PlayMusic(7);
	SetMusicRepeat(0);
	Wait(10);
	
	while(GetViewportX() < 55) {
		
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
	
	ChangeCharacterView(STEVE, 170);			// angry walk
	SetCharacterSpeechView(STEVE, 168);
	MoveCharacterDirect(STEVE, 276, 130);
	Wait(10);
	character[ANDERSON].loop= 6;
	Wait(10);
	character[GUYSTUDENT].loop= 2;
	Wait(10);
	character[LADYSTUDENT].loop= 2;
	Wait(5);
	MoveCharacterDirect(STEVE, 276, 130);
	Wait(20);
	character[ANDERSON].loop= 2;
	MoveCharacterBlocking(STEVE, 276, 130, 1);
	Wait(20);
	DisplaySpeech(STEVE, "... I KNOW I didn't just hear THAT!");
	Wait(5);
	character[LADYSTUDENT].loop= 1;
	MoveCharacterDirect(STEVE, 473, 130);
	Wait(30);
	character[LADYSTUDENT].loop= 0;
	Wait(5);
	character[LADYSTUDENT].loop= 2;
	Wait(20);
	MoveCharacterBlocking(STEVE, 473, 130, 1);
	Wait(20);
	
	NewRoom(15);
}

else if(GetGlobalInt(42)== 3) {					// walkie talkie again

	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	DisplaySpeechNoBlock(STEVE, "... so with that in mind--", 1);
	Wait(60);
	DisplaySpeechAt(0, 20, 50, TALKIE, "I'LL SHOW YOU WHAT PAIN IS!");
	Wait(10);
	SetMusicRepeat(1);
	PlayMusic(7);
	Wait(10);
	
	while(GetViewportX() < 55) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
	}
	
	ChangeCharacterView(STEVE, 170);			// angry walk
	SetCharacterSpeechView(STEVE, 168);
	MoveCharacterDirect(STEVE, 276, 130);
	Wait(10);
	character[ANDERSON].loop= 6;
	ReleaseCharacterView(ANDERSON);
	Wait(10);
	character[GUYSTUDENT].loop= 2;
	Wait(10);
	character[LADYSTUDENT].loop= 2;
	Wait(5);
	MoveCharacterBlocking(STEVE, 276, 130, 1);
	Wait(10);
	DisplaySpeech(STEVE, "No... I'll show YOU!");
	Wait(10);
	MoveCharacterBlocking(STEVE, 473, 130, 1);
	Wait(30);
	
	NewRoom(15);
}

else {
  
	if(GetGlobalInt(7)== 0) {					// coming from outside
	
		MoveCharacterBlocking(MAIN, 505, 100, 1);
		MoveCharacter(MAIN, 485, 106);
		SetGlobalInt(7, 3);					// set state to in dojo
		
		if(GetGlobalInt(51)== 0 && GetGlobalInt(34)== 0) {	// first time entering building (if steve is in there)
		
			Wait(10);
			SetMusicMasterVolume(30);
			Wait(10);
			DisplaySpeechBackground(STEVE, "... so students...");
		
			while(GetViewportX() > 55) {
			
				SetViewport(GetViewportX() - 3, 0);
				Wait(1);
			}
			
			DisplaySpeech(STEVE, "You must master the MIND...");
			DisplaySpeech(STEVE, "... before you may wield the BODY!");
			Wait(20);
			MoveCharacterDirect(STEVE, 76, 128);
		
			while(GetViewportX() > 0) {
			
				SetViewport(GetViewportX() - 2, 0);
				Wait(1);
			}
			
			MoveCharacterBlocking(STEVE, 76, 128, 1);
			character[STEVE].loop= 1;
			Wait(20);
			character[STEVE].loop= 0;
			Wait(5);
			character[STEVE].loop= 2;
			Wait(20);
			DisplaySpeech(STEVE, "... observe!");
			Wait(10);
			character[STEVE].loop= 0;
			Wait(5);
			character[STEVE].loop= 1;
			Wait(20);
			character[STEVE].x= 78;
			character[STEVE].y= 133;
			ObjectOff(5);
			AnimateCharacterEx(STEVE, 4, 7, 0, 0, 1);
			ReleaseCharacterView(STEVE);
			StopMusic();
			character[STEVE].loop= 1;
			character[STEVE].x= 76;
			character[STEVE].y= 128;
			Wait(20);
			character[STEVE].loop= 0;
			Wait(5);
			character[STEVE].loop= 2;
			Wait(20);
			SetCharacterView(STEVE, 165);
			SetCharacterSpeechView(STEVE, 166);
			Wait(20);
			DisplaySpeech(STEVE, "... any questions?");
			SetCharacterView(STEVE, 165);
			
			if(GetGlobalInt(33)== 1 || GetGlobalInt(33)== 3) {			// if robe is on
		
				SetCharacterView(MAIN, 63);
			}
	
			Wait(20);
			
			while(GetViewportX() < 320) {
			
				SetViewport(GetViewportX() + 3, GetViewportY());
				Wait(1);
			}
			
			ReleaseCharacterView(STEVE);
			SetCharacterSpeechView(STEVE, 33);
			character[STEVE].x= 215;
			character[STEVE].y= 170;
			character[STEVE].loop= 3;
			
			SetGlobalInt(51, 1);				// so we don't see cutscene again
			Wait(40);
			ReleaseCharacterView(MAIN);
			Wait(10);
			SetMusicRepeat(0);
			PlayMusic(3);
			SetMusicMasterVolume(90);
			Wait(10);
			
			GUIOn(2);
			GUIOff(4);
			EndCutscene();
		}

		else if(GetGlobalInt(34)== 3) {				// steve ko'd
		
			PlayAmbientSound(1, 34, 100, 65, 125);
		}

		SetTimer(1, 200);					// for steve's idle speech
	}
}
}

function hotspot1_a() {
  // script for hotspot1: Interact hotspot
  
if(ACTION== USE) {

	MoveCharacter(MAIN, 506, 98);
	
	while(GetViewportX() < 320) {
	
		SetViewport(GetViewportX() + 2, 0);
		Wait(1);
	}

	MoveCharacterBlocking(MAIN, 506, 98, 0);
	character[MAIN].loop= 2;
	Wait(5);
	MoveCharacterBlocking(MAIN, 527, 95, 1);
	NewRoom(15);
}

else if(ACTION== CLOSE) {

	if(IsObjectOn(2)) {
	
		FaceLocation(MAIN, GetViewportX() + mouse.x, GetViewportY() + mouse.y);
		Wait(5);
		
		DisplaySpeechNoBlock(MAIN, "It's held open by that doorstop.", 1);
	}
	
	else {
	
		FaceLocation(MAIN, GetViewportX() + mouse.x, GetViewportY() + mouse.y);
		Wait(5);
		
		DisplaySpeechNoBlock(MAIN, "The chair is in front of it.", 1);
	}
}
}

function object0_a() {
  // script for object0: Interact object
  
if(ACTION== USE || ACTION== CLOSE) {

	FaceLocation(MAIN, GetViewportX() + mouse.x, GetViewportY() + mouse.y);
	Wait(5);
	
	if(IsObjectOn(2)) {
	  
		DisplaySpeech(MAIN, "It's held open by the door stop.");
	}
	
	else {
	
		DisplaySpeech(MAIN, "The chair is now propped in front of the door."); 
	}
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, GetViewportX() + mouse.x, GetViewportY() + mouse.y);
	Wait(5);
	
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}
}

function object2_a() {
  // script for object2: Pick up object

if(GetGlobalInt(34)== 1) {							// steve outside

	MoveCharacterBlocking(MAIN, 555, 120, 0);
	character[MAIN].loop= 2;
	Wait(20);
	GUIOff(2);
	GUIOn(4);
	ReleaseCharacterView(MAIN);
	StartCutscene(5);
	Wait(20);

	while(GetViewportX() < 320) {
	
		SetViewport(GetViewportX() + 2, 0);
		Wait(1);
	}

	Wait(10);
	character[STEVE].x= 535;
	character[STEVE].y= 98;
	character[STEVE].loop= 1;
	character[STEVE].room= 19;
	ReleaseCharacterView(STEVE);
	MoveCharacterBlocking(STEVE, 498, 101, 1);
	MoveCharacterBlocking(STEVE, 463, 116, 0);
	SetCharacterView(STEVE, 165);
	SetCharacterSpeechView(STEVE, 166);
	Wait(10);
	FaceCharacter(MAIN, STEVE);
	Wait(10);
	DisplaySpeech(STEVE, "Alright, back to work!");
	Wait(10);
	ReleaseCharacterView(STEVE);
	MoveCharacterDirect(STEVE, 215, 170);
	Wait(20);
	MoveCharacter(MAIN, 444, 130);
	Wait(20);
	MoveCharacterBlocking(STEVE, 215, 170, 1);
	ReleaseCharacterView(STEVE);
	SetCharacterSpeechView(STEVE, 33);
	character[STEVE].loop= 3;
	Wait(20);
	EnableRegion(1);
	SetGlobalInt(34, 0);					// reset steve's state
	SetTimer(1, 200);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();
}  
  
else {
  
	MoveCharacterBlocking(MAIN, 555, 120, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 9;
	character[MAIN].frame= 1;
	Wait(15);
	PlaySound(4);
	ObjectOff(2);
	AddInventory(6);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	
	if(GetGlobalInt(14)== 0 || GetGlobalInt(14)== 2) {
	
		if(SteveIdle== 1) {
		
			ReleaseCharacterView(STEVE);
			
			if(IsOverlayValid(SteveIdleSpeech)) {
			
				RemoveOverlay(SteveIdleSpeech);
			}
		}
	
		SetTimer(1, 0);
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		
		PlaySound(12);
		ObjectOn(1);
		ObjectOff(0);
		Wait(10);
		character[MAIN].loop= 3;
		Wait(20);
		DisplaySpeech(STEVE, "Hey!");
		Wait(10);
		character[MAIN].loop= 1;
		ChangeCharacterView(STEVE, 170);
		MoveCharacterBlocking(STEVE, 360, 129, 1);
		SetCharacterView(STEVE, 167);
		SetCharacterSpeechView(STEVE, 168);
		Wait(10);
		DisplaySpeech(STEVE, "Leave my doorstop be, or I WILL perpetrate you!");
		SetCharacterView(STEVE, 167);
		Wait(10);
		ReleaseCharacterView(STEVE);
		MoveCharacterBlocking(STEVE, 215, 170, 1);
		ChangeCharacterView(STEVE, 32);
		character[STEVE].loop= 3;
		ReleaseCharacterView(STEVE);
		character[MAIN].loop= 1;
		Wait(5);
		character[MAIN].loop= 0;
		Wait(10);
		DisplaySpeech(MAIN, "... guess that means I need to put it back.");
		Wait(10);
		MoveCharacterBlocking(MAIN, 515, 103, 0);
		Wait(10);
		character[MAIN].loop= 3;
		Wait(10);
		PlaySound(13);
		ObjectOff(1);
		ObjectOn(0);
		Wait(10);
		MoveCharacterBlocking(MAIN, 549, 111, 0);
		character[MAIN].loop= 9;
		character[MAIN].frame= 1;
		Wait(10);
		ObjectOn(2);
		LoseInventory(6);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;	
		Wait(10);
		MoveCharacterBlocking(MAIN, 531, 119, 0);
		SetTimer(1, 200);
		Wait(10);
		SetMusicMasterVolume(90);
		Wait(10);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
}
}

function object3_a() {
  // script for object3: Interact object

if(ACTION== USE) {

	FaceLocation(MAIN, 622, 87);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't feel like sitting down.", 1);
}
  
if(ACTION== PUSH || ACTION== PULL) {

	if(GetGlobalInt(14)== 0) {					// hasn't been moved, cutscene
	
		MoveCharacterBlocking(MAIN, 583, 125, 0);
		character[MAIN].loop= 2;
		Wait(20);
		GUIOff(2);
		StartCutscene(5);
		
		Wait(20);
		DisplaySpeech(MAIN, "I don't think he'd mind if I moved this around.");
		Wait(10);
		character[MAIN].loop= 6;
		character[MAIN].frame= 2;
		Wait(10);
		PlaySound(6);
		MoveObjectDirect(3, 565, 120, 5);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		RemoveWalkableArea(2);					// set walkaround for chair's new position
		MoveCharacterBlocking(MAIN, 549, 120, 1);
		character[MAIN].loop= 2;
		SetGlobalInt(14, 1);					// set state to in front of door	
		
		GUIOn(2);
		EndCutscene();
	}

	else if(GetGlobalInt(14)== 1) {					// in front of door
	
		if(IsObjectOn(2)) {
		  
			MoveCharacterBlocking(MAIN, 549, 120, 0); 
			character[MAIN].loop= 2;
			Wait(10);
			character[MAIN].loop= 6;
			character[MAIN].frame= 2;
			Wait(10);
			PlaySound(7);
			MoveObjectDirect(3, 593, 123, 5);
			character[MAIN].loop= 2;
			character[MAIN].frame= 0;
			RestoreWalkableArea(2);			// set walkaround for chair's new position
			SetGlobalInt(14, 2);			// set state to back in original position but has been moved
		}

		else {
		
			FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
			Wait(10);
			DisplaySpeechNoBlock(MAIN, "... it's holding the door open.", 1);
		}
	}

	else if(GetGlobalInt(14)== 2) {					// in original position, already moved
	  
		MoveCharacterBlocking(MAIN, 583, 125, 0);
		character[MAIN].loop= 2;
		Wait(10);
		character[MAIN].loop= 6;
		character[MAIN].frame= 2;
		Wait(10);
		PlaySound(6);
		MoveObjectDirect(3, 565, 120, 5);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		RemoveWalkableArea(2);					// set walkaround for chair's new position
		MoveCharacterBlocking(MAIN, 549, 120, 1);
		character[MAIN].loop= 2;
		SetGlobalInt(14, 1);					// set state to in front of door
	}
}
}

function hotspot4_a() {
  // script for hotspot4: Look at hotspot
  
}

function hotspot3_a() {
  // script for hotspot3: Pick up hotspot

if(GetGlobalInt(59)== 0) {			// if he doesn't have one
  
	MoveCharacterBlocking(MAIN, 485, 95, 0);
	character[MAIN].loop= 1;
	Wait(10);
	
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(5);
	ObjectOn(4);
	Wait(5);
	PlaySound(4);
	ObjectOff(4);
	AddInventory(26);					// 25 hour fitness card
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	SetGlobalInt(59, 1);
}

else {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "One should be enough.", 1);
}
}

function room_c() {
  // script for room: Repeatedly execute
  
CheckSpeech();


/*** VIEWPORT SCROLLING *************************************************************************************/

ViewportX= GetViewportX();

CharacterX= character[MAIN].x;

if(CharacterX - ViewportX < 100) {

	XScroll= -1;
}

else if(CharacterX - ViewportX > 220) {

	XScroll= 1;
}

if(XScroll!= 0) {

	SetViewport(ViewportX+ (2* XScroll), 0);
}

if(ViewportX>= (game.room_width- 320) || 					// all the way right

  ViewportX<= 0 || 								// all the way left
 
  ((CharacterX - ViewportX)>= 150) && ((CharacterX - ViewportX)<= 170)) {	// he's in the middle

	XScroll= 0;
}


/*** IDLE STUFF *********************************************************************************/


if(IsTimerExpired(1) && (GetGlobalInt(34)== 0 || GetGlobalInt(34)== 2)) {			

	if(SteveIdle== 0) {				// if instructing class
	
		SteveIdle= 1;
		ReleaseCharacterView(STEVE);
		SteveIdleCounter= Random(5);
	
		if(SteveIdleCounter== 0) {
		
			SteveIdleSpeech= DisplaySpeechBackground(STEVE, "... and thusly, leaving your opponent crippled and unconscious...");
			SetCharacterView(STEVE, 33);
			AnimateCharacter(STEVE, character[STEVE].loop, 5, 1);
		}

		if(SteveIdleCounter== 1) {
		
			SteveIdleSpeech= DisplaySpeechBackground(STEVE, "... and stomp the groin, like... SO!");
			SetCharacterView(STEVE, 33);
			PlaySound(56);
			AnimateCharacter(STEVE, character[STEVE].loop, 5, 1);
		}

		if(SteveIdleCounter== 2) {
		
			SteveIdleSpeech= DisplaySpeechBackground(STEVE, "... Anderson, why don't you help me demonstrate this next hold?");
			SetCharacterView(STEVE, 33);
			AnimateCharacter(STEVE, character[STEVE].loop, 5, 1);
		}

		if(SteveIdleCounter== 3) {
		
			SteveIdleSpeech= DisplaySpeechBackground(STEVE, "... nobody will push you around with these lessons!");
			SetCharacterView(STEVE, 33);
			AnimateCharacter(STEVE, character[STEVE].loop, 5, 1);
		}


		if(SteveIdleCounter== 4) {
		
			SteveIdleSpeech= DisplaySpeechBackground(STEVE, "... can anybody tell me what he's doing wrong?");
			SetCharacterView(STEVE, 33);
			AnimateCharacter(STEVE, character[STEVE].loop, 5, 1);
		}

		if(SteveIdleCounter== 5) {
		
			SteveIdleSpeech= DisplaySpeechBackground(STEVE, "... just grab the arm and twist, like ... SO!");
			SetCharacterView(STEVE, 33);
			PlaySound(19);
			AnimateCharacter(STEVE, character[STEVE].loop, 5, 1);
		}
	}
	
	else {			// if he's already idle, reset timer if he's instructing class
		
		SetTimer(1, 200);
	}
}

if(IsOverlayValid(SteveIdleSpeech)== 0) {

	if(SteveIdle== 1) {
	
		ReleaseCharacterView(STEVE);
		SteveIdle= 0;
		SetTimer(1, 100);
	}
}
}


function region1_a() {
  // script for region1: Player walks onto region
  
if(GetGlobalInt(33)== 0 || GetGlobalInt(33)== 2) {		// if he doesn't have robe on

	if(GetGlobalInt(34)== 0) {					// steve inside
	
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(20);
		
		StopMoving(MAIN);
		ReleaseCharacterView(STEVE);
		MoveCharacterDirect(STEVE, 300, 133);
		
		while(GetViewportX() > 170) {
		
			SetViewport(GetViewportX() - 2, GetViewportY());
			Wait(1);		if(SteveIdle== 1) {
		
			ReleaseCharacterView(STEVE);
			
			if(IsOverlayValid(SteveIdleSpeech)) {
			
				RemoveOverlay(SteveIdleSpeech);
			}
		}
	
		SetTimer(1, 0);
		}
		
		MoveCharacterDirect(STEVE, 300, 133);
		Wait(20);
		character[GUYSTUDENT].loop= 2;
		Wait(10);
		character[LADYSTUDENT].loop= 2;
		MoveCharacterBlocking(STEVE, 300, 133, 1);
		SetCharacterView(STEVE, 167);
		SetCharacterSpeechView(STEVE, 168);
		Wait(10);
		DisplaySpeech(STEVE, "Students only!");
		ReleaseCharacterView(STEVE);
		SetCharacterSpeechView(STEVE, 33);
		Wait(10);
		DisplaySpeech(MAIN, "... but we have a--");
		Wait(10);
		DisplaySpeech(STEVE, "... you can wait in the reception area!");
		Wait(10);
		MoveCharacterDirect(STEVE, 215, 170);
		MoveCharacter(MAIN, 444, 130);
		
		while(GetViewportX() < 280) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
		
		character[GUYSTUDENT].loop= 0;
		character[LADYSTUDENT].loop= 0;
		MoveCharacterBlocking(MAIN, 444, 130, 0);
		character[STEVE].loop= 3;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "... how long is this class?", 1);
		SetTimer(1, 200);
		Wait(30);
		SetMusicMasterVolume(90);
		Wait(30);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
	
	else if(GetGlobalInt(34)== 1) {					// steve outside

		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		GUIOff(2);
		GUIOn(4);
		ReleaseCharacterView(MAIN);
		StartCutscene(5);
		Wait(20);
	
		while(GetViewportX() < 320) {
		
			SetViewport(GetViewportX() + 2, 0);
			Wait(1);
		}
	
		Wait(10);
		character[STEVE].x= 535;
		character[STEVE].y= 98;
		character[STEVE].loop= 1;
		character[STEVE].room= 19;
		ReleaseCharacterView(STEVE);
		MoveCharacterBlocking(STEVE, 498, 101, 1);
		MoveCharacterBlocking(STEVE, 463, 116, 0);
		SetCharacterView(STEVE, 167);
		SetCharacterSpeechView(STEVE, 168);
		Wait(10);	  
		DisplaySpeech(STEVE, "Students only!");
		Wait(10);
		ReleaseCharacterView(STEVE);
		SetCharacterSpeechView(STEVE, 33);
		Wait(10);
		FaceCharacter(MAIN, STEVE);
		Wait(10);
		character[LADYSTUDENT].loop= 0;
		character[GUYSTUDENT].loop= 0;
		Wait(10);
		MoveCharacter(STEVE, 215, 170);
		Wait(30);
		int temp= DisplaySpeechBackground(STEVE, "... now let's return to the lesson, class.");
		MoveCharacter(MAIN, 442, 125);
		MoveCharacterBlocking(STEVE, 215, 170, 1);
		character[STEVE].loop= 3;
		MoveCharacterBlocking(MAIN, 442, 125, 0);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "... very timely.", 1);
		SetGlobalInt(34, 0);				// reset steve's state
		Wait(30);
		SetMusicMasterVolume(90);
		Wait(30);
		
		GUIOff(4);
		GUIOn(2);
		EndCutscene();
	}
}

else if(GetGlobalInt(33)== 1 || GetGlobalInt(33)== 3) {			// if robe is on

	if(GetGlobalInt(34)== 0) {					// steve inside

		if(SteveIdle== 1) {
		
			ReleaseCharacterView(STEVE);
			
			if(IsOverlayValid(SteveIdleSpeech)) {
			
				RemoveOverlay(SteveIdleSpeech);
			}
		}
	
		SetTimer(1, 0);

		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(20);
		
		StopMoving(MAIN);
		ReleaseCharacterView(STEVE);
		MoveCharacterDirect(STEVE, 300, 133);
		
		while(GetViewportX() > 170) {
		
			SetViewport(GetViewportX() - 2, GetViewportY());
			Wait(1);
		}
	
		character[GUYSTUDENT].loop= 2;
		Wait(10);
		character[LADYSTUDENT].loop= 2;	
		MoveCharacterDirect(STEVE, 300, 133);
		Wait(20);
		character[GUYSTUDENT].loop= 2;
		Wait(10);
		character[LADYSTUDENT].loop= 2;
		MoveCharacterBlocking(STEVE, 300, 133, 1);
		Wait(10);
		DisplaySpeech(STEVE, "... a late student?");
		SetCharacterView(STEVE, 165);
		SetCharacterSpeechView(STEVE, 166);
		Wait(10);
		DisplaySpeech(STEVE, "Sorry, the class has already started...");
		ReleaseCharacterView(STEVE);
		SetCharacterSpeechView(STEVE, 33);
		Wait(10);
		DisplaySpeech(STEVE, "... try to make it earlier next time!");
		Wait(10);
		MoveCharacterDirect(STEVE, 215, 170);
		MoveCharacter(MAIN, 444, 130);
		Wait(10);
		character[LADYSTUDENT].loop= 0;
		character[GUYSTUDENT].loop= 0;
		
		while(GetViewportX() < 280) {
		
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
		
		MoveCharacterBlocking(MAIN, 444, 130, 0);
		character[STEVE].loop= 3;
		Wait(20);
		DisplaySpeechNoBlock(MAIN, "... I could use a distraction.", 1);
		Wait(30);
		SetMusicMasterVolume(30);
		SetTimer(1, 200);
		Wait(30);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
	
	else if(GetGlobalInt(34)== 1) {					// steve outside

		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		
		ReleaseCharacterView(MAIN);
		Wait(20);
		character[MAIN].loop= 2;
		Wait(20);
	
		while(GetViewportX() < 320) {
		
			SetViewport(GetViewportX() + 2, 0);
			Wait(1);
		}
	
		Wait(10);
		character[STEVE].x= 535;
		character[STEVE].y= 98;
		character[STEVE].loop= 1;
		character[STEVE].room= 19;
		ReleaseCharacterView(STEVE);
		MoveCharacterBlocking(STEVE, 498, 101, 1);
		MoveCharacterBlocking(STEVE, 463, 116, 0);
		Wait(30);
		SetCharacterView(STEVE, 167);
		SetCharacterSpeechView(STEVE, 168);
		Wait(10);	  
		DisplaySpeech(STEVE, "You can't leave early!");
		SetCharacterView(STEVE, 167);
		Wait(10);
		FaceCharacter(MAIN, STEVE);
		Wait(30);
		ReleaseCharacterView(STEVE);
		SetCharacterSpeechView(STEVE, 33);
		Wait(10);
		DisplaySpeech(STEVE, "... back to the lesson!");
		Wait(30);
		MoveCharacter(MAIN, 272, 123);
		Wait(10);
		ReleaseCharacterView(STEVE);
		MoveCharacterDirect(STEVE, 215, 170);
		Wait(10);
		character[LADYSTUDENT].loop= 0;
		Wait(10);
		character[GUYSTUDENT].loop= 0;
		Wait(10);
		
		while(GetViewportX() > 55) {
		
			SetViewport(GetViewportX() - 3, 0);
			Wait(1);
		}
		
		Wait(20);
		MoveCharacterBlocking(STEVE, 215, 170, 1);
		character[STEVE].loop= 3;
		ReleaseCharacterView(STEVE);
		SetCharacterSpeechView(STEVE, 33);
		Wait(20);
		
		character[ANDERSON].loop= 2;
		Wait(10);
		DisplaySpeech(ANDERSON, "... Jackson, what are you doing here?");
		Wait(10);
		character[GUYSTUDENT].loop= 2;
		Wait(10);
		character[LADYSTUDENT].loop= 2;
		Wait(10);
		DisplaySpeech(MAIN, "What are YOU doing here...");
		Wait(10);
		DisplaySpeech(MAIN, "... we had Slackmaster scheduled today!");
		Wait(10);
		character[GUYSTUDENT].loop= 1;
		Wait(10);
		character[LADYSTUDENT].loop= 1;
		Wait(30);
		DisplaySpeech(STEVE, "... FOCUS!");
		Wait(10);
		character[GUYSTUDENT].loop= 0;
		character[LADYSTUDENT].loop= 0;
		Wait(10);
		character[ANDERSON].loop= 0;
		ReleaseCharacterView(ANDERSON);
		Wait(30);
		DisplaySpeech(STEVE, "Now, does anyone have a question about what we're doing here?");
		Wait(30);
		character[LADYSTUDENT].loop= 2;
		Wait(10);
		character[GUYSTUDENT].loop= 2;
		Wait(30);
		DisplaySpeech(MAIN, "Um, I have a question...");
		Wait(10);
		DisplaySpeech(STEVE, "... lay it on me!");
		Wait(10);
		character[GUYSTUDENT].loop= 0;
		Wait(10);
		character[LADYSTUDENT].loop= 0;
		SetGlobalInt(34, 2);				// reset steve's state
		SetViewport(55, 0);
		SetTimer(1, 0);					// make sure timer isn't on
		EndCutscene();
		Wait(20);
		
		if(character[MAIN].inv[34] > 0) {		// if he has cutting board
		
			SetDialogOption(16, 2, 2);		// change dialog options with steve
			SetDialogOption(16, 3, 1);
		}
		
		RunDialog(16);
	}
	
	else if(GetGlobalInt(34)== 2) {
	
		if(SteveIdle== 1) {
		
			ReleaseCharacterView(STEVE);
			
			if(IsOverlayValid(SteveIdleSpeech)) {
			
				RemoveOverlay(SteveIdleSpeech);
			}
		}
	
		SetTimer(1, 0);
		
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		ReleaseCharacterView(MAIN);
		MoveCharacter(MAIN, 272, 123);
		
		while(GetViewportX() > 55) {
		
			SetViewport(GetViewportX() - 3, 0);
			Wait(1);
		}
		
		MoveCharacterBlocking(MAIN, 272, 123, 0);
		character[MAIN].loop= 1;
		Wait(20);
		DisplaySpeech(STEVE, "Alright, now that we have everyone here...");
		Wait(10);
		DisplaySpeech(MAIN, "Um... I have another question.");
		Wait(10);
		character[LADYSTUDENT].loop= 2;
		Wait(10);
		character[GUYSTUDENT].loop= 2;
		Wait(10);
		DisplaySpeech(STEVE, "Ok...?");
		Wait(20);
		character[GUYSTUDENT].loop= 0;
		Wait(10);
		character[LADYSTUDENT].loop= 0;
		EndCutscene();
		SetViewport(55, 0);
		Wait(20);
		
		if(character[MAIN].inv[34] > 0) {		// if he has cutting board
		
			SetDialogOption(16, 2, 2);		// change dialog options with steve
			SetDialogOption(16, 3, 1);
		}
		
		RunDialog(16);	
	}
}
}



function object3_b() {
  // script for object3: Look at object

FaceLocation(MAIN, 622, 87);
Wait(5);
DisplaySpeechNoBlock(MAIN, "That seat looks available.", 1);
}

function object3_c() {
  // script for object3: Pick up object
  
FaceLocation(MAIN, 622, 87);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't need to take a seat.", 1);
DisplaySpeechNoBlock(MAIN, "... that was horrible.", 2);
}


function object0_b() {
  // script for object0: Look at object
  
FaceLocation(MAIN, GetViewportX() + mouse.x, GetViewportY() + mouse.y);
Wait(5);

if(GetGlobalInt(14)== 1) {			// if chair is in front of door
	
	DisplaySpeechNoBlock(MAIN, "The chair is propped in front of it now.", 1);
}

else {
  
	DisplaySpeechNoBlock(MAIN, "It's being held open by that doorstop.", 1);
}
}


function object2_b() {
  // script for object2: Look at object
  
FaceLocation(MAIN, GetViewportX() + mouse.x, GetViewportY() + mouse.y);
Wait(5);

DisplaySpeechNoBlock(MAIN, "It's a doorstop.", 1);
}

function object2_c() {
  // script for object2: Interact object
  
if(ACTION== USE) {
 
	FaceLocation(MAIN, GetViewportX() + mouse.x, GetViewportY() + mouse.y);
	Wait(5);
	
	DisplaySpeechNoBlock(MAIN, "It's already holding the door open.", 1);
}
}

function hotspot1_b() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It leads outside.", 1);
}

function hotspot2_a() {
  // script for hotspot2: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "That must be the front desk.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "'Good for one FREE personal training session at 25 Hour Fitness!'", 1);
}

function hotspot2_b() {
  // script for hotspot2: Interact hotspot
  
if(ACTION== USE || ACTION== OPEN) {
  
	if(GetGlobalInt(34)== 3) {
	
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "There's nothing interesting in there.", 1);
	
	}

	else {
	  
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't think he'll let me go through his desk.", 1);
	}
}
}

function hotspot3_c() {
  // script for hotspot3: Interact hotspot
  
if(ACTION== USE || ACTION== PULL) {

	if(GetGlobalInt(59)== 0) {			// if he doesn't have one
	  
		MoveCharacterBlocking(MAIN, 485, 95, 0);
		character[MAIN].loop= 1;
		Wait(10);
		
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(5);
		ObjectOn(4);
		Wait(5);
		PlaySound(4);
		ObjectOff(4);
		AddInventory(26);					// 25 hour fitness card
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
		SetGlobalInt(59, 1);
	}
	
	else {
	
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "One should be enough.", 1);
	}
}
}

function hotspot4_b() {
  // script for hotspot4: Look at hotspot
  
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "'... take a card for a FREE personal training session at 25-Hour Fitness!'", 1);
}

function hotspot4_c() {
  // script for hotspot4: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I just need to take a card, not the whole poster.", 1);
}

function hotspot5_a() {
  // script for hotspot5: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It looks comfortable enough...", 1);
}

function hotspot5_b() {
  // script for hotspot5: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It looks too heavy to move around.", 1);
}

function hotspot5_c() {
  // script for hotspot5: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't feel like sitting down.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "That looks too heavy to move around.", 1);
}
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a punching bag.", 1);
}

function hotspot6_b() {
  // script for hotspot6: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm not much of a pugilist.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't really want to touch it.", 1);
}
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "Looks like they're setup for breaking boards.", 1);
}

function hotspot7_b() {
  // script for hotspot7: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I can't break anything on there!", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I think they're fine upright.", 1);
}
}

function hotspot7_c() {
  // script for hotspot7: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "They would be too heavy to carry around.", 1);
}

function hotspot8_a() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It looks out onto the street.", 1);
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's so dainty!", 1);
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot

if(ACTION== PUSH || ACTION== PULL) {
  
	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "No reason to smash it.", 1);
}
}

function hotspot9_c() {
  // script for hotspot9: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't need miniature trees.", 1);
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It occupies some space on the desk.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Pick up hotspot
  
}

function hotspot10_c() {
  // script for hotspot10: Interact hotspot
  
if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't need to clear it off.", 1);
}
}

function hotspot10_d() {
  // script for hotspot10: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't need any of that stuff.", 1);
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + 50);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Pretty impressive.", 1);
}


function hotspot11_b() {
  // script for hotspot11: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't want to mess up his arrangement.", 1);
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "Nobody is using them right now.", 1);
}

function hotspot12_b() {
  // script for hotspot12: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't have time for stretching!", 1);
}
}

function hotspot12_c() {
  // script for hotspot12: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't have time for stretching.", 1);
}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "That's probably for practicing tough combo's and finishing moves.", 1);
}

function hotspot13_b() {
  // script for hotspot13: Interact hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I wouldn't know where to start.", 1);
}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a weapon rack.", 1);
}

function hotspot14_b() {
  // script for hotspot14: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't like to grab things from the foreground...", 1);
}

function hotspot15_a() {
  // script for hotspot15: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "That must be where the outside vent ends up!", 1);
}


function hotspot16_a() {
  // script for hotspot16: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "That must be the stock of boards to break.", 1);
}


function hotspot16_b() {
  // script for hotspot16: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I can't break boards.", 1);
}

function hotspot17_a() {
  // script for hotspot17: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's the chair for the desk.", 1);
}

function hotspot17_b() {
  // script for hotspot17: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't feel like sitting down.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'll just leave that where it is.", 1);
}
}

function hotspot18_a() {
  // script for hotspot18: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "They keep it interesting enough in here...", 1);
}


function hotspot19_a() {
  // script for hotspot19: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + 50);
Wait(5);
DisplaySpeechNoBlock(MAIN, "That's an interesting color...", 1);
}

function hotspot16_c() {
  // script for hotspot16: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I can't break those things!", 1);
}
}


function hotspot7_d() {
  // script for hotspot7: Use inventory on hotspot
  
MoveCharacterBlocking(MAIN, 63, 124, 0);
character[MAIN].loop= 1;
Wait(10);
GUIOff(2);
GUIOn(4);
StartCutscene(5);

Wait(20);
character[MAIN].loop= 5;
character[MAIN].frame= 2;
Wait(15);
ObjectOn(6);
LoseInventory(34);
SetGlobalInt(27, 2);						// cutting board down
character[MAIN].loop= 1;
character[MAIN].frame= 0;
Wait(20);
DisplaySpeech(MAIN, "Great board you got here Steve-o.");
DisplaySpeechBackground(STEVE, "Thanks!");
Wait(20);

GUIOn(2);
GUIOff(4);
EndCutscene();
}

$$$!$$$ ROOM room2.crm
$$$!$$$ RS
// text script for room


function object0_a() {
  // script for object0: Any click on object
  
if(GetGlobalInt(37)== 0) {

	PlaySound(35);
	MoveObjectDirect(0, 125, 87, 4);
	SetGlobalInt(37, 1);
}

else if(GetGlobalInt(37)== 1) {

	PlaySound(35);
	MoveObjectDirect(0, 140, 87, 4);
	SetGlobalInt(37, 2);
}

else if(GetGlobalInt(37)== 2) {

	PlaySound(35);
	MoveObjectDirect(0, 109, 87, 4);
	SetGlobalInt(37, 0);
}

}

function object1_a() {
  // script for object1: Any click on object


}

function object2_a() {
  // script for object2: Interact object


}

function object3_a() {
  // script for object3: Any click on object

}

function hotspot2_a() {
  // script for hotspot2: Any click on hotspot

}

function hotspot1_a() {
  // script for hotspot1: Any click on hotspot
  
if(GetGlobalInt(37)== 0) {

	PlaySound(35);
	MoveObjectDirect(0, 125, 87, 4);
	SetGlobalInt(37, 1);
}

else if(GetGlobalInt(37)== 1) {

	PlaySound(35);
	MoveObjectDirect(0, 140, 87, 4);
	SetGlobalInt(37, 2);
}

else if(GetGlobalInt(37)== 2) {

	PlaySound(35);
	MoveObjectDirect(0, 109, 87, 4);
	SetGlobalInt(37, 0);
}

}

$$$!$$$ ROOM room20.crm
$$$!$$$ RS
// room script file

int SteamCounter= 100;					// counter to tint screen white for steam effect

import int MorryIdle;
import int MorryIdleSpeech;

int MorryIdleCounter= 0;

function room_a() {
  // script for room: Player enters screen (before fadein)
  
character[MAIN].x= 45; 
character[MAIN].y= 135;
character[MAIN].loop= 2;

if(GetGlobalInt(28)== 0) {				// if he hasn't been rescued

	SetObjectView(0, 52);			// hot rocks
	AnimateObject(0, 2, 10, 1);

	ChangeCharacterView(MORRY, 38);
	SetCharacterSpeechView(MORRY, 220);
	SetCharacterIdle(MORRY, 223, 5);
	character[MORRY].room= 20;
	character[MORRY].x= 183;
	character[MORRY].y= 127;
	character[MORRY].loop= 0;
	SetTimer(1, 100);
}

else {

	ObjectOff(2);
	ObjectOff(3);
}

if(GetGlobalInt(73)== 0) {

	GUIOff(2);
	StartCutscene(5);
}
}

function room_b() {
  // script for room: Player enters screen (after fadein)

if(GetGlobalInt(73)== 0) {

	Wait(5);
	PlaySound(12);
	ObjectOff(1);						// open door
	MoveCharacterBlocking(MAIN, 99, 132, 1);
	ObjectOn(1);
	SetGlobalInt(7, 7);					// set state to in sauna
	Wait(20);
	SetCharacterView(MAIN, 72);
	SetCharacterSpeechView(MAIN, 60);
	Wait(20);
	DisplaySpeech(MAIN, "What the...!?");
	SetCharacterView(MAIN, 72);
	Wait(10);
	DisplaySpeech(MORRY, "Oh hey, Jackson!");
	Wait(10);
	DisplaySpeech(MORRY, "You have a membership at this club, too?");
	Wait(20);
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	SetTimer(1, 100);
	SetGlobalInt(73, 1);				// increment state
	
	EndCutscene();
	
	GUIOn(2);
}

else {
  
	Wait(5);
	PlaySound(12);
	ObjectOff(1);						// open door
	MoveCharacterBlocking(MAIN, 99, 132, 1);
	ObjectOn(1);
	SetGlobalInt(7, 7);					// set state to in sauna
}



}

function object1_a() {
  // script for object1: Interact object
  
if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 91, 130, 0);
	character[MAIN].loop= 1;
	Wait(5);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(12);
	ObjectOff(1);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	MoveCharacterBlocking(MAIN, 35, 130, 1);
	ObjectOn(1);
	Wait(5);
	NewRoom(18);
}

if(ACTION== OPEN) {

	MoveCharacterBlocking(MAIN, 91, 130, 0);
	character[MAIN].loop= 1;
	Wait(5);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	PlaySound(12);
	ObjectOff(1);
	Wait(5);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	Wait(10);
	ObjectOn(1);
}
}

function object0_a() {
  // script for object0: Use inventory on object
  
MoveCharacterBlocking(MAIN, 152, 141, 0);
character[MAIN].loop= 0;

if(MorryIdle== 1) {

	if(IsOverlayValid(MorryIdleSpeech)) {
	
		RemoveOverlay(MorryIdleSpeech);
	}
	
	ReleaseCharacterView(MORRY);
}

Wait(10);
SetMusicMasterVolume(30);
Wait(10);

GUIOff(2);
StartCutscene(5);

Wait(30);
DisplaySpeech(MAIN, "It's time to leave, Morry...");
Wait(10);
PlayMusic(1);
Wait(30);
ReleaseCharacterView(MAIN);
SetCharacterView(MAIN, 3);
AnimateCharacter(MAIN, 13, 5, 0);
Wait(10);
SetCharacterView(MORRY, 222);
character[MORRY].frame= 5;
int temp= DisplaySpeechBackground(MORRY, "... Nooooooo!");
Wait(60);
ObjectOff(0);
SetObjectTransparency(5, 100);
ObjectOn(5);

while(SteamCounter > 30) {
  
	SetObjectTransparency(5, SteamCounter);
	Wait(5);
	SteamCounter-= 3;
}

if(IsOverlayValid(temp)) {

	RemoveOverlay(temp);
}

ReleaseCharacterView(MORRY);
Wait(10);
ObjectOn(4);
Wait(10);
ObjectOff(5);
LoseInventory(33);
SetGlobalInt(28, 1);						// set morry's state to rescued

character[MORRY].room= -1;

if(GetGlobalInt(29)== 0) {					// if anderson is not rescued
  
	SetGlobalInt(13, 7);					// morry rescued first cutscene
	SetDialogOption(15, 3, 2);
	SetDialogOption(15, 5, 1);				// set correct dialog with cliff
	SetScreenTransition(TRANSITION_FADE);
	EndCutscene();
	FadeOut(1);
	Wait(30);
	StopMusic();
	SetMusicMasterVolume(90);
	Wait(30);
	NewRoom(22);
}

else {								// if anderson is rescued

	SetGlobalInt(13, 9);					// endgame cutscene
	SetScreenTransition(TRANSITION_FADE);
	EndCutscene();
	FadeOut(1);
	Wait(30);
	StopMusic();
	SetMusicMasterVolume(90);
	Wait(30);
	NewRoom(22);	
}
}

function room_c() {
  // script for room: Repeatedly execute
  
CheckSpeech();

if(IsTimerExpired(1)== 1 && MorryIdle== 0) {

	MorryIdle= 1;
	ReleaseCharacterView(MORRY);
	MorryIdleCounter= Random(2);
	
	if(MorryIdleCounter== 0) {
	
		MorryIdleSpeech= DisplaySpeechBackground(MORRY, "... it's nice and warm in here!");
		SetCharacterView(MORRY, 220);
		AnimateCharacter(MORRY, 0, 5, 1);
	}
	
	else if(MorryIdleCounter== 1) {
	
		MorryIdleSpeech= DisplaySpeechBackground(MORRY, "What's the big hurry?");
		SetCharacterView(MORRY, 220);
		AnimateCharacter(MORRY, 0, 5, 1);
	}

	else if(MorryIdleCounter== 2) {
	
		MorryIdleSpeech= DisplaySpeechBackground(MORRY, "I just wanna relax...");
		SetCharacterView(MORRY, 220);
		AnimateCharacter(MORRY, 0, 5, 1);
	}
}


if(IsOverlayValid(MorryIdleSpeech)== 0 && MorryIdle== 1) {		// return to normal after idle anim

	ReleaseCharacterView(MORRY);
	character[COFFEE].loop= 0;
	MorryIdle= 0;
	SetTimer(1, 200);
}
}

function object1_b() {
  // script for object1: Look at object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);

DisplaySpeechNoBlock(MAIN, "It leads back to the club...", 1);
}

function object3_a() {
  // script for object3: Look at object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Green shorts...?", 1);
}

function object3_b() {
  // script for object3: Interact object

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm definitely not changing into those.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "No pockets.", 1);
}
}

function object3_c() {
  // script for object3: Pick up object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I'm not touching them!", 1);
}

function object2_a() {
  // script for object2: Look at object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a sweaty old basketball jersey.", 1);
}

function object2_b() {
  // script for object2: Pick up object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "No way am I touching that!", 1);
}

function object2_c() {
  // script for object2: Interact object

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "No way.", 1);
}
}

function object0_b() {
  // script for object0: Look at object
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Those stones are red hot!", 1);
}

function object0_c() {
  // script for object0: Pick up object
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(5);
DisplaySpeechNoBlock(MAIN, "They look way too hot to touch.", 1);
}

function object0_d() {
  // script for object0: Interact object
  
if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "They're too hot to handle!", 1);
}
}

function hotspot1_a() {
  // script for hotspot1: Look at hotspot

if(character[MORRY].room== 20) {
  
	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It holds those red hot rocks!", 1);
}

else {

	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Those rocks aren't so hot now.", 1);
}
}

function hotspot1_b() {
  // script for hotspot1: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "There are already some rocks in there.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It looks pretty sturdy.", 1);
}
}

function hotspot1_c() {
  // script for hotspot1: Pick up hotspot

if(character[MORRY].room== 20) {
  
	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Those rocks look blazing hot...", 1);
}

else {

	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm going to leave them in there.", 1);
}
}

function hotspot2_a() {
  // script for hotspot2: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
SetCharacterSpeechView(MAIN, 60);
DisplaySpeechNoBlock(MAIN, "They're are plenty of seats available.", 1);
SetCharacterSpeechView(MAIN, 2);
}

function hotspot2_b() {
  // script for hotspot2: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to sink to his level!", 1);
}
}

function hotspot1_d() {
  // script for hotspot1: Use inventory on hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y + 40);
Wait(5);
DisplaySpeechNoBlock(MAIN, "That's not where the heat is coming from.", 1);
}

function object4_a() {
  // script for object4: Pick up object
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I'm going to leave them in there.", 1);
}

function object4_b() {
  // script for object4: Look at object
  
FaceLocation(MAIN, mouse.x, mouse.y + 20);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Those rocks aren't so hot now.", 1);
}

$$$!$$$ ROOM room21.crm
$$$!$$$ RS
// text script for room

function room_a() {
  // script for room: First time player enters screen

SetGlobalInt(11, 0);			// Mom is exercising
StartCutscene(1);  
GUIOff(2);
DisplaySpeech(MORRY, "Help me Jackson!");
DisplaySpeech(MORRY, "I've been on this stupid machine for over 40 minutes already!");
AnimateCharacter(MORRY, 1, 4, 1);
DisplaySpeech(MRSONEAL, "Hello Jackson, I didn't know you belonged to this club.");
DisplaySpeech(MRSONEAL, "Morry and I are getting a little exercise in this weekend.");
DisplaySpeech(MRSONEAL, "We're determined to get in shape!");
AnimateCharacter(MRSONEAL, 0, 4, 1);
DisplaySpeech(MORRY, "She's crazy!");
DisplaySpeech(MORRY, "I'm completely accepting of healthy figure!");
AnimateCharacter(MORRY, 1, 4, 1);
DisplaySpeech(MRSONEAL, "Sorry Jackson...");
DisplaySpeech(MRSONEAL, "We can't talk right now!");
DisplaySpeech(MRSONEAL, "We must become one with the machine!");
AnimateCharacter(MRSONEAL, 0, 4, 1);
DisplaySpeech(MORRY, "Get me out of here!");
AnimateCharacter(MORRY, 1, 4, 1);
GUIOn(2);
EndCutscene();
}

function room_b() {
  // script for room: Player enters screen (before fadein)

SetObjectView(0, 41);
AnimateObject(0, 3, 5, 1);
  
AnimateCharacter(MRSONEAL, 0, 4, 1);
AnimateCharacter(MORRY, 1, 4, 1);
AnimateCharacter(CARDIOMAN, 2, 5, 1);

}

function hotspot1_a() {
  // script for hotspot1: Any click on hotspot
  
MoveCharacterBlocking(MAIN, 164, 140, 0);


}

function hotspot3_a() {
  // script for hotspot3: Player stands on hotspot

DisableHotspot(2);
MoveCharacterBlocking(MAIN, 174, 175, 1);  
EnableHotspot(2);
NewRoomEx(18, 85, 89);
}

function hotspot2_a() {
  // script for hotspot2: Player stands on hotspot
  
DisableHotspot(3);
MoveCharacterBlocking(MAIN, 172, 131, 1);
EnableHotspot(3);
}

$$$!$$$ ROOM room22.crm
$$$!$$$ RS
// text script for room

function room_a() {
  // script for room: Player enters screen (before fadein)

SetMusicRepeat(0);
PlayMusic(4);
SetMusicMasterVolume(90);

GUIOff(2);
GUIOff(4);

ChangeCharacterView(MAIN, 76);
SetCharacterIdle(MAIN, 77, 5);
SetCharacterSpeechView(MAIN, 47);
SetCharacterTransparency(MAIN, 0);
character[MAIN].talkview= 46;
character[MAIN].x= 164;
character[MAIN].y= 112;
character[MAIN].loop= 0;

ChangeCharacterView(MORRY, 48);
SetCharacterIdle(MORRY, -1, 1);
character[MORRY].talkview= 48;
character[MORRY].room= 22;
character[MORRY].x= 49;
character[MORRY].y= 191;

ChangeCharacterView(ANDERSON, 50);
character[ANDERSON].talkview= 50;
SetCharacterIdle(ANDERSON, -1, 1);
character[ANDERSON].room= 22;
character[ANDERSON].x= 269;
character[ANDERSON].y= 196;

}

function room_b() {
  // script for room: First time player enters screen
  
}

function room_d() {
  // script for room: Player enters screen (after fadein)

if(GetGlobalInt(12)== 0) {			// intro
  
	StartCutscene(5);
	
	SetCharacterView(MAIN, 202);
	SetCharacterSpeechView(MAIN, 200);
	Wait(40);
	DisplaySpeech(MAIN, "... and FINALLY, after rescuing both of you...");
	Wait(10);
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 47);
	DisplaySpeech(MAIN, "... we're ready to get some GAME time in today!");
	Wait(10);
	DisplaySpeechAt(10, 70, 140, MORRY, "Hey, EXERCISE is hard work!");
	Wait(10);
	SetCharacterView(MAIN, 202);
	SetCharacterSpeechView(MAIN, 200);
	Wait(10);
	DisplaySpeechAt(10, 70, 140, MORRY, "... you can't snap ME out of the ZONE!");
	Wait(10);
	DisplaySpeechAt(190, 60, 200, ANDERSON, "I was learning how to groin stomp!");
	Wait(10);
	DisplaySpeechAt(190, 60, 200, ANDERSON, "... after careful THOUGHT and MEDITATION!");
	SetCharacterView(MAIN, 76);
	SetCharacterSpeechView(MAIN, 47);
	Wait(10);
	DisplaySpeech(MAIN, "You DON'T UNDERSTAND what I've been DOING all morning...");
	DisplaySpeech(MAIN, "... just to get some hack-n-slash ACTION in today!");
	Wait(30);
	FadeOut(1);
	Wait(30);
	StopMusic();
	Wait(60);
	SetScreenTransition(TRANSITION_FADE);
	
	EndCutscene();
	
	NewRoom(1);
}

else if(GetGlobalInt(12)== 3) {			// dropped from window

	StartCutscene(5);
	SetCharacterView(MAIN, 202);
	SetCharacterSpeechView(MAIN, 200);
	Wait(40);
	DisplaySpeech(MAIN, "... and so, after regaining FULL CONSCIOUSNESS...");
	DisplaySpeech(MAIN, "... I peeled myself off the cement, and pushed on...");
	Wait(10);
	SetCharacterView(MAIN, 203);
	SetCharacterSpeechView(MAIN, 201);
	Wait(20);
	DisplaySpeech(MAIN, "... UNDETERRED and UNDAUNTED!");
	Wait(20);
	SetCharacterView(MAIN, 76);
	SetCharacterSpeechView(MAIN, 47);
	DisplaySpeechAt(10, 70, 140, MORRY, "She DROPPED you from a window?");
	Wait(10);
	DisplaySpeechAt(190, 50, 140, ANDERSON, "... wow, that had to HURT!");
	Wait(10);
	SetCharacterView(MAIN, 202);
	SetCharacterSpeechView(MAIN, 200);
	Wait(10);
	DisplaySpeechAt(10, 70, 140, MORRY, "... what DISCIPLINE!");
	Wait(10);
	DisplaySpeechAt(190, 50, 140, ANDERSON, "What did you DO when we WEREN'T THERE?");
	Wait(10);
	SetCharacterView(MAIN, 202);
	SetCharacterSpeechView(MAIN, 200);
	Wait(30);
	FadeOut(1);
	Wait(30);
	StopMusic();
	Wait(60);
	SetScreenTransition(TRANSITION_FADE);
	
	EndCutscene();
	
	ReleaseCharacterView(MAIN);
	character[MAIN].loop= 2;		// position jackson
	character[MAIN].frame= 0;
	character[MAIN].talkview= 1;
	
	NewRoom(13);
}

else if(GetGlobalInt(13)== 2) {			// ketchup on Dino

	StartCutscene(5);
	DisplaySpeechAt(190, 50, 140, ANDERSON, "... WHAT!?  You mean he bought that RUSE?");
	Wait(10);
	SetCharacterView(MAIN, 202);
	SetCharacterSpeechView(MAIN, 200);
	Wait(10);
	DisplaySpeech(MAIN, "... he wasn't the sharpest TOOL on that lot!");
	SetCharacterView(MAIN, 202);
	Wait(10);
	ReleaseCharacterView(MAIN);
	Wait(20);
	DisplaySpeechAt(10, 70, 140, MORRY, "... why did you MANIPULATE him, again?");
	Wait(60);
	DisplaySpeech(MAIN, "... to get a CLEAR PATH at his MASTER!");
	SetCharacterView(MAIN, 202);
	Wait(30);
	FadeOut(1);
	Wait(30);
	StopMusic();
	Wait(60);
	SetScreenTransition(TRANSITION_FADE);
	EndCutscene();
	NewRoom(13);
	ReleaseCharacterView(MAIN);
}

else if(GetGlobalInt(13)== 3) {				// give grandpa cane

	StartCutscene(5);
	DisplaySpeechAt(10, 70, 140, MORRY, "What does this have to do with US!");
	Wait(10);
	DisplaySpeechAt(10, 70, 140, MORRY, "... where's the ACTION!");
	Wait(10);
	DisplaySpeechAt(190, 50, 140, ANDERSON, "What happened to his cane just doesn't make SENSE!");
	Wait(10);
	DisplaySpeech(MAIN, "Geez, how about a little UNDERSTANDING here...");
	Wait(10);
	DisplaySpeech(MAIN, "... this WASN'T as EASY as it sounds!");
	Wait(30);
	FadeOut(1);
	Wait(30);
	StopMusic();
	Wait(60);
	SetScreenTransition(TRANSITION_FADE);
	EndCutscene();
	NewRoom(8);
	ReleaseCharacterView(MAIN);
}

else if(GetGlobalInt(13)== 5) {				// talk thru vent

	StartCutscene(5);
	DisplaySpeechAt(190, 50, 140, ANDERSON, "... so that's what he HEARD!");
	Wait(20);
	DisplaySpeechAt(190, 50, 140, ANDERSON, "I thought he'd just HIT his head ONE-TOO-MANY times.");
	Wait(20);
	DisplaySpeechAt(10, 70, 140, MORRY, "How did you REACH Anderson and get him OUT of there?");
	Wait(10);
	SetCharacterView(MAIN, 202);
	Wait(5);
	SetCharacterView(MAIN, 203);
	Wait(20);
	DisplaySpeech(MAIN, "Guys, that's only HALF of the story!");
	Wait(30);
	FadeOut(1);
	Wait(30);
	StopMusic();
	Wait(60);
	SetScreenTransition(TRANSITION_FADE);
	EndCutscene();
	NewRoom(15);
	ReleaseCharacterView(MAIN);
}

else if(GetGlobalInt(13)== 6) {				// rufus went in kitchen


}

else if(GetGlobalInt(13)== 7) {				// morry rescued first

	StartCutscene(5);
	
	DisplaySpeechAt(190, 50, 140, ANDERSON, "At least I WANTED TO LEAVE!");
	Wait(20);
	DisplaySpeechAt(10, 70, 140, MORRY, "... but it was so WARM and RELAXING!");
	Wait(10);
	DisplaySpeech(MAIN, "... as FATE would have it, Anderson did not put up as much of a FIGHT...");
	Wait(20);
	DisplaySpeechAt(190, 50, 140, ANDERSON, "... c'mon, I was MENTALLY FATIGUED!");
	Wait(30);
	FadeOut(1);
	Wait(30);
	StopMusic();
	Wait(60);
	SetScreenTransition(TRANSITION_FADE);
	EndCutscene();
	NewRoom(18);
	ReleaseCharacterView(MAIN);
}

else if(GetGlobalInt(13)== 8) {				// anderson rescued first

	StartCutscene(5);
	
	DisplaySpeechAt(10, 70, 140, MORRY, "At least I COULD RELAX whilst awaiting my RESCUE!");
	Wait(20);
	DisplaySpeechAt(190, 50, 140, ANDERSON, "... argh! I never learned a good way to FINISH someone!");
	Wait(10);
	DisplaySpeech(MAIN, "As FATE would have it, Morry was a little more STUBBORN...");
	Wait(20);
	DisplaySpeechAt(10, 70, 140, MORRY, "... c'mon, I was PHYSICALLY DRAINED!");
	Wait(30);
	FadeOut(1);
	Wait(30);
	StopMusic();
	Wait(60);
	SetScreenTransition(TRANSITION_FADE);
	EndCutscene();
	NewRoom(15);
	ReleaseCharacterView(MAIN);
}

else if(GetGlobalInt(13)== 9) {				// end game

	StartCutscene(5);
	
	DisplaySpeech(MAIN, "... and that's how the PROCESS came to an END!");
	Wait(30);
	DisplaySpeechAt(190, 50, 140, ANDERSON, "I never learned a good way to FINISH someone!");
	Wait(10);
	SetCharacterView(MAIN, 202);
	SetCharacterSpeechView(MAIN, 200);
	Wait(10);
	DisplaySpeechAt(10, 70, 140, MORRY, "... it was so WARM and RELAXING!");
	Wait(60);
	DisplaySpeechAt(10, 50, 140, CLIFF, "... hey guys!");
	Wait(10);
	ReleaseCharacterView(MAIN);
	Wait(10);
	DisplaySpeechAt(10, 50, 140, CLIFF, "... could I... DO this THING... some OTHER time?");
	Wait(30);
	SetCharacterView(MAIN, 202);
	SetCharacterSpeechView(MAIN, 200);
	Wait(10);
	DisplaySpeech(MAIN, "... but was it really WORTH the ENERGY?");
	SetCharacterView(MAIN, 202);
	Wait(60);
	FadeOut(1);
	Wait(30);
	StopMusic();
	SetMusicMasterVolume(90);
	PlayMusic(1);
	Wait(180);
	SetScreenTransition(TRANSITION_FADE);
	ReleaseCharacterView(MAIN);
	EndCutscene();
	StopMusic();
	QuitGame(0);
}

SetCharacterIdle(MAIN, 61, 5);
}

function room_c() {
  // script for room: Player leaves screen
  
ChangeCharacterView(MAIN, 1);
character[MAIN].talkview= 1;
}

$$$!$$$ ROOM room23.crm
$$$!$$$ RS
// text script for room

int Yscroll= 0;			// counter used to scroll viewport down

function room_a() {
  // script for room: Player enters screen (after fadein)


if(GetGlobalInt(12)== 2) {
  
	DisplaySpeech(MOM, "Well, well, well..."); 
	DisplaySpeech(MOM, "Looks like I caught you with your hand in the cookie jar!");
	DisplaySpeech(MOM, "I'll let you play with your friends for a while.");
	DisplaySpeechNoBlock(MOM, "Just make sure you spend some time with your Grandparents today!", 1);
	Wait(20);
	
	while(Yscroll != 300) {
	  
		Wait(1);
		Yscroll+= 3;
		SetViewport(0, Yscroll);
	}
	
	Wait(40);
	DisplaySpeech(MAIN, "Durrp.");
	Wait(40);
	FadeOut(1);
	ReleaseCharacterView(MOM);
	character[MOM].x= 630;
	character[MOM].y= 120;
	character[MOM].room= 3;
	character[MOM].talkview= 12;
	character[MOM].loop= 2;
	SetCharacterTransparency(MOM, 0);
	SetGlobalInt(12, 3);					// increment cutscene
	SetGlobalInt(1, 1);					// set moms state to in living room
	SetGlobalInt(3, 1);					// set thurstons state to in shower
	EndCutscene();
	SetScreenTransition(TRANSITION_BOXOUT);
	NewRoom(22);
}
}

function room_b() {
  // script for room: Player enters screen (before fadein)

SetViewport(0, 0);			// set viewport at top of room
character[MOM].room= 23;
character[MOM].x= 181;
character[MOM].y= 152;
character[MOM].talkview= 3;		// change Mom's talk view for cutscene
character[MOM].loop= 8;
character[MAIN].room= 22;

}

$$$!$$$ ROOM room24.crm
$$$!$$$ RS
// text script for room

int CharacterX;
int CharacterY;
int ViewportX;
int ViewportY;
int XScroll= 0;						// flag on whether or not the frame needs updating
int YScroll= 0;

import int TrainerIdleSpeech;			// variable to removing idle speech
import int TrainerIdle;

int TrainerIdleCounter= 0;				// variable for different idle speeches
  
function room_c() {
  // script for room: Repeatedly execute

CheckSpeech();
  
ViewportX= GetViewportX();
ViewportY= GetViewportY();
CharacterX= character[MAIN].x;
CharacterY= character[MAIN].y;

if(CharacterX - ViewportX < 100) {

	XScroll= -1;
}

else if(CharacterX - ViewportX > 220) {

	XScroll= 1;
}

if(CharacterY - ViewportY < 100) {

	YScroll= -1;
}

else if(CharacterY - ViewportY > 110) {

	YScroll= 1;
}

if(XScroll!= 0 || YScroll!= 0) {

	SetViewport(ViewportX+ (2* XScroll), ViewportY+ YScroll);
}

if(ViewportX>= (game.room_width- 320) || 					// all the way right

  ViewportX<= 0 || 								// all the way left
 
  ((CharacterX - ViewportX)>= 150) && ((CharacterX - ViewportX)<= 170)) {	// he's in the middle

	XScroll= 0;
}

if(ViewportY>= (game.room_height- 200) ||

  ViewportY<= 0 ||

  ((CharacterY - ViewportY)>= 100) && ((CharacterY - ViewportY) <= 110)) {

	YScroll= 0;
}

if(IsTimerExpired(1)) {

	if(GetGlobalInt(9)== 2) {						// during jackson's workout ...
	
		if(IsObjectOn(1)== 0) {						// if ball is popped
		
			TrainerIdle= 1;
			ReleaseCharacterView(MAIN);
			TrainerIdleCounter= Random(2);
			
			if(TrainerIdleCounter== 0) {
			  
				TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "... want to hop on this one over here?");
				ReleaseCharacterView(TRAINER);
				SetCharacterView(TRAINER, 40);
				AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
			}
	
			if(TrainerIdleCounter== 1) {
			  
				TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "Ooh, that one over there is ALWAYS a nice workout!");
				ReleaseCharacterView(TRAINER);
				SetCharacterView(TRAINER, 40);
				AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
			}
	
			if(TrainerIdleCounter== 2) {
			  
				TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "... I'll miss that fitness ball!");
				ReleaseCharacterView(TRAINER);
				SetCharacterView(TRAINER, 40);
				AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
			}
		}

		else {
		
			TrainerIdle= 1;
			ReleaseCharacterView(MAIN);
			TrainerIdleCounter= Random(2);
			
			if(TrainerIdleCounter== 0) {
			  
				TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "Sooo, just hop on there when you're ready...");
				ReleaseCharacterView(TRAINER);
				SetCharacterView(TRAINER, 40);
				AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
			}
	
			if(TrainerIdleCounter== 1) {
			  
				TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "... whenever you're ready to get started.");
				ReleaseCharacterView(TRAINER);
				SetCharacterView(TRAINER, 40);
				AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
			}
	
			if(TrainerIdleCounter== 2) {
			  
				TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "These fitness balls are GREAT!");
				ReleaseCharacterView(TRAINER);
				SetCharacterView(TRAINER, 40);
				AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
			}
		}
	}
	
	else if(GetGlobalInt(9)== 3) {						// stuck on the bench press

		TrainerIdle= 1;
		ReleaseCharacterView(TRAINER);
		TrainerIdleCounter= Random(6);
		
		if(TrainerIdleCounter== 0) {
		
			TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "... this time I've got it!");
		}
	
		else if(TrainerIdleCounter== 1) {
	
			TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "I may need a spot on this one...");
		}
		
		else if(TrainerIdleCounter== 2) {
		
			TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "... am I coming down with something?");
		}
		
		else if(TrainerIdleCounter== 3) {
		
			TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "Ok... one more time!");
		}
		
		else if(TrainerIdleCounter== 4) {
		
			TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "... maybe I need to get my chest warmed up.");
		}
		
		else if(TrainerIdleCounter== 5) {
		
			TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "... I have been working out all day...");
		}
		
		else if(TrainerIdleCounter== 6) {
		
			TrainerIdleSpeech= DisplaySpeechBackground(TRAINER, "... just a small setback!");
		}
	}
}

if(IsOverlayValid(TrainerIdleSpeech)== 0) {

	if(TrainerIdle== 1) {
	
		if(GetGlobalInt(9)== 3) {
		  
			AnimateObject(3, 12, 7, 0);
		}

		else if(GetGlobalInt(9)== 2) {
		
			ReleaseCharacterView(TRAINER);
			SetCharacterSpeechView(TRAINER, 40);
		}

		TrainerIdle= 0;
		
		if(GetGlobalInt(9)== 3) {
		  
			SetTimer(1, 300);
		}

		else {
		
			SetTimer(1, 500);
		}
	}
}


}



function hotspot1_a() {
  // script for hotspot1: Interact hotspot
  
if(ACTION== USE) {

	if(GetGlobalInt(9)== 2) {			// during workout
	
		if(IsObjectOn(1)) {			// ball not popped
	
			MoveCharacter(MAIN, 225, 164);
			
			while(GetViewportX() > 0 && GetViewportY() != 25) {
			
				if(GetViewportY() < 25) {
				
					SetViewport(GetViewportX() - 1, GetViewportY() + 1);
				}
		
				else if(GetViewportY() > 25) {
				
					SetViewport(GetViewportX() - 1, GetViewportY() - 1);
				}
				
				Wait(1);
			}
			
			MoveCharacterBlocking(MAIN, 225, 164, 0);
			character[MAIN].loop= 1;
			
			if(TrainerIdle== 1) {
			
				TrainerIdle= 0;
				
				if(IsOverlayValid(TrainerIdleSpeech)) {
				
					RemoveOverlay(TrainerIdleSpeech);
				}
		
				ReleaseCharacterView(TRAINER);
			}
			
			Wait(20);
		
			GUIOff(2);
			GUIOn(4);
			StartCutscene(5);
			
			Wait(20);
			DisplaySpeech(MAIN, "I need to go...");
			Wait(10);
			SetCharacterSpeechView(TRAINER, 156);
			DisplaySpeech(TRAINER, "Come back and we'll pick up right where we left off!");
			SetCharacterView(TRAINER, 155);
			Wait(10);
			ReleaseCharacterView(TRAINER);
			SetCharacterSpeechView(TRAINER, 40);
			Wait(10);
		
			DisableRegion(1);
			DisableRegion(2);					// disable bounding regions
			ReleaseCharacterView(TRAINER);
			MoveCharacter(TRAINER, 219, 97);
			ReleaseCharacterView(MAIN);
			SetCharacterSpeechView(MAIN, 2);
			SetCharacterIdle(MAIN, 61, 5);
			Wait(20);
			MoveCharacter(MAIN, 246, 93);
			
			while(GetViewportY() > 0) {
			
				SetViewport(GetViewportX(), GetViewportY() - 1);
				Wait(1);
			}
			
			MoveCharacterBlocking(TRAINER, 219, 97, 0);
			MoveCharacterBlocking(TRAINER, 169, 83, 1);
			MoveCharacterBlocking(MAIN, 246, 93, 0);
			MoveCharacterBlocking(MAIN, 213, 83, 1);
			NewRoom(18);
			
			EndCutscene();
		}
		
		else {					// ball popped
	
			MoveCharacter(MAIN, 237, 92);
			
			while(character[MAIN].walking) {
				
				room_c();
				Wait(1);
			}
			
			MoveCharacterBlocking(MAIN, 237, 92, 0);
			FollowCharacter(TRAINER, -1);			// if he's following him
			MoveCharacterBlocking(MAIN, 195, 86, 1);
			
			NewRoom(18);
			
			
		}
	}
	
	else if(GetGlobalInt(9)== 3) {			// stuck on bench
	
		MoveCharacter(MAIN, 237, 92);
			
		while(character[MAIN].walking) {
			
			room_c();
			Wait(1);
		}
		
		MoveCharacterBlocking(MAIN, 237, 92, 0);
		MoveCharacterBlocking(MAIN, 195, 86, 1);
		
		NewRoom(18);
	}
}
}


function room_a() {
  // script for room: Player enters screen (before fadein)
  
RemoveWalkableArea(3);						// fitness ball area

DisableRegion(3);

SetViewport(35, 0);
character[MAIN].x= 215;
character[MAIN].y= 90;
character[MAIN].loop= 2;

if(GetGlobalInt(9)== 1) {					// if trainer is following him

	GUIOn(4);
	character[TRAINER].room= 24;
	character[TRAINER].x= 182;
	character[TRAINER].y= 84;
	character[TRAINER].loop= 2;
}

else if(GetGlobalInt(9)== 2) {

	GUIOn(4);
	character[TRAINER].room= 24;
	character[TRAINER].x= 182;
	character[TRAINER].y= 84;
	character[TRAINER].loop= 2;
}

else if(GetGlobalInt(9)== 3) {					// stuck on machine

	character[TRAINER].room= 24;
	FollowCharacter(TRAINER, -1);
	character[TRAINER].x= 474;
	character[TRAINER].y= 220;
	SetCharacterTransparency(TRAINER, 100);
	SetTimer(1, 200);
	SetTimer(2, 500);
}

DisableRegion(1);						// special regions used during workout
DisableRegion(2);

SetMusicRepeat(1);
PlayMusic(5);

}

function room_b() {
  // script for room: Player enters screen (after fadein)

if(GetGlobalInt(9)== 1) {

	if(GetGlobalInt(60)== 0) {

		MoveCharacterDirect(MAIN, 244, 103);
		MoveCharacterDirect(TRAINER, 307, 110);
	
		while(GetViewportX() < 90) {
	
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
		 
		MoveCharacterBlocking(MAIN, 244, 103, 1);
		MoveCharacterBlocking(TRAINER, 307, 110, 1);
		
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		
		EndCutscene();
		StartCutscene(5);
		
		Wait(20);
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		Wait(10);
		DisplaySpeech(TRAINER, "Alright!");
		ReleaseCharacterView(TRAINER);
		SetCharacterSpeechView(TRAINER, 40);
		Wait(10);
		character[TRAINER].loop= 0;
		Wait(15);
		DisplaySpeech(TRAINER, "Now where to start...?");
		Wait(20);
		SetCharacterView(MAIN, 75);
		character[MAIN].loop= 2;
		Wait(10);
		character[TRAINER].loop= 2;
		Wait(10);
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		int temp= DisplaySpeechBackground(TRAINER, "... there's so much great stuff in here!");
		SetCharacterView(TRAINER, character[TRAINER].talkview + 1);
		AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
		Wait(40);
		ReleaseCharacterView(MAIN);
		character[MAIN].loop= 0;
		Wait(40);
		SetCharacterView(MAIN, 75);
		character[MAIN].loop= 3;
		Wait(40);
		ReleaseCharacterView(MAIN);
		character[MAIN].loop= 0;
		Wait(10);
		SetCharacterView(MAIN, 75);
		character[MAIN].loop= 0;
		Wait(40);
		ReleaseCharacterView(MAIN);
		character[MAIN].loop= 1;
		Wait(10);
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}
		
		ReleaseCharacterView(TRAINER);
		Wait(20);
		DisplaySpeech(MAIN, "... I don't see Morry over here...");
		Wait(20);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 2;
		Wait(20);
		ReleaseCharacterView(TRAINER);
		SetCharacterSpeechView(TRAINER, 40);
		MoveCharacter(TRAINER, 425, 128);
		Wait(30);
		MoveCharacter(MAIN, 348, 129);
		
		while(GetViewportX() < 190) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
		
		MoveCharacterBlocking(TRAINER, 425, 128, 0);
		MoveCharacterBlocking(MAIN, 348, 129, 0);
		Wait(10);
		DisplaySpeech(TRAINER, "Ok...");
		Wait(10);
		character[TRAINER].loop= 0;
		Wait(5);
		character[TRAINER].loop= 1;
		Wait(5);
		SetCharacterSpeechView(TRAINER, 40);
		DisplaySpeech(TRAINER, "... over here, we have some of our leg machines!");
		Wait(5);
		character[TRAINER].loop= 1;
		Wait(10);
		SetCharacterSpeechView(TRAINER, 158);
		DisplaySpeech(TRAINER, "... I don't really use these that much...");
		SetCharacterSpeechView(TRAINER, 156);
		DisplaySpeech(TRAINER, "... but the ladies really like'em so it's sort of a...");
		Wait(20);
		SetCharacterView(TRAINER, 40);
		character[TRAINER].frame= 1;
		DisplaySpeechBackground(TRAINER, "... uh...");
		Wait(80);
		DisplaySpeech(MAIN, "A catch-22?");
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		Wait(10);
		DisplaySpeech(TRAINER, "Yeah!... One of those things!");
		SetCharacterView(MAIN, 74);
		SetCharacterSpeechView(MAIN, 67);
		Wait(10);
		DisplaySpeech(MAIN, "Listen, I'm...");
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
		SetCharacterView(TRAINER, 157);
		SetCharacterSpeechView(TRAINER, 158);
		Wait(10);
		DisplaySpeech(TRAINER, "Oh don't worry, sport!");
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		Wait(10);
		DisplaySpeech(TRAINER, "... we have more than just machines!");
		Wait(10);
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		Wait(10);
		SetCharacterView(MAIN, 63);
		SetCharacterSpeechView(MAIN, 64);
		Wait(10);
		DisplaySpeech(MAIN, "... but I--");
		ReleaseCharacterView(TRAINER);
		SetCharacterSpeechView(TRAINER, 40);
		Wait(10);
		DisplaySpeech(TRAINER, "Check this one out, my personal favorite...");
		Wait(20);
		ReleaseCharacterView(TRAINER);
		MoveCharacter(TRAINER, 402, 168);
		Wait(40);
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
		MoveCharacter(MAIN, 375, 181);
	
		while(GetViewportY() < 40) {
		
			if(GetViewportX() < 220) {
	
				SetViewport(GetViewportX() + 1, GetViewportY() + 1);
			}
	
			else {
			  
				SetViewport(GetViewportX(), GetViewportY() + 1);
			}
	
			Wait(1);
		}
		
		MoveCharacterBlocking(TRAINER, 402, 168, 0);
		character[TRAINER].loop= 0;
		MoveCharacterBlocking(MAIN, 375, 181, 0);
		character[MAIN].loop= 2;
		Wait(30);
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		DisplaySpeech(TRAINER, "... the BENCH PRESS!");
		Wait(10);
		DisplaySpeech(TRAINER, "This is GREAT for showing everyone how strong you are...");
		ReleaseCharacterView(TRAINER);
		SetCharacterSpeechView(TRAINER, 40);
		Wait(10);
		DisplaySpeech(TRAINER, "... use a workout partner for best results!");
		Wait(40);
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		Wait(10);
		DisplaySpeech(TRAINER, "... Hey!");
		Wait(30);
		character[MAIN].loop= 3;
		Wait(5);
		character[MAIN].loop= 1;
		Wait(30);
		character[MAIN].loop= 3;
		Wait(5);
		character[MAIN].loop= 2;
		Wait(10);
		DisplaySpeech(TRAINER, "Count'em out for me, partner!");
		Wait(20);
		ReleaseCharacterView(TRAINER);
		MoveCharacter(TRAINER, 399, 184);
	
		while(GetViewportY() < 72) {
		
			SetViewport(GetViewportX(), GetViewportY() + 1);
			Wait(1);
		}
		
		MoveCharacterBlocking(TRAINER, 399, 184, 0);
		MoveCharacterBlocking(TRAINER, 410, 196, 1);
		Wait(20);
		SetObjectView(3, 52);
		SetCharacterTransparency(TRAINER, 100);
		ObjectOff(0);
		ObjectOn(3);
		AnimateObject(3, 8, 7, 0);
		Wait(50);
		SetCharacterView(MAIN, 63);
		SetCharacterSpeechView(MAIN, 64);
		Wait(10);
		DisplaySpeech(MAIN, "One..?");
		Wait(10);
		ChangeCharacterView(MAIN, 74);
		SetCharacterSpeechView(MAIN, 67);
		Wait(20);
		DisplaySpeech(MAIN, "Two..?");
		Wait(40);
		character[MAIN].loop= 0;
		DisplaySpeech(MAIN, "Um, I'm moving on...");
		Wait(10);
		ChangeCharacterView(MAIN, 1);
		SetCharacterSpeechView(MAIN, 2);
		Wait(20);
		SetCharacterView(MAIN, 75);
		Wait(10);
		ReleaseCharacterView(MAIN);
		MoveCharacter(MAIN, 201, 183);
		Wait(20);
		temp= DisplaySpeechBackground(TRAINER, "Wow, I like your enthusiasm!");
		
		while(IsObjectAnimating(3)) {
		
			Wait(1);
		}
		
		ObjectOff(3);
		ObjectOn(0);
		SetCharacterTransparency(TRAINER, 0);
		Wait(5);
		character[TRAINER].loop= 0;
		Wait(5);
		character[TRAINER].loop= 1;
		SetCharacterView(TRAINER, character[TRAINER].talkview + 1);
		AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}
		
		ReleaseCharacterView(TRAINER);
		
		while(GetViewportX() > 0) {
			
			if(GetViewportY() > 40) {
			
				SetViewport(GetViewportX() - 2, GetViewportY() - 1);
			}
	
			else {
			  
				SetViewport(GetViewportX() - 2, GetViewportY());
			}
	
			Wait(1);
		}
		
		Wait(10);
		character[MAIN].loop= 1;
		Wait(30);
		DisplaySpeechBackground(TRAINER, "... this is great...");
		MoveCharacterBlocking(TRAINER, 78, 169, 1);
		character[TRAINER].loop= 0;
		Wait(5);
		character[TRAINER].loop= 2;
		Wait(10);
		SetCharacterView(TRAINER, 39);
		SetCharacterSpeechView(TRAINER, 40);
		Wait(10);
		DisplaySpeech(TRAINER, "It's EXACTLY what I had in mind for you!");
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		Wait(10);
		DisplaySpeech(TRAINER, "These fitness balls are AMAZING!");
		Wait(5);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 2;
		Wait(10);
		temp= DisplaySpeechBackground(TRAINER, "You could work every muscle group on this bouncing beauty!");
		SetCharacterView(TRAINER, 156);
		AnimateCharacter(TRAINER, character[TRAINER].loop, 5, 1);
		Wait(40);
		SetCharacterView(MAIN, 75);
		Wait(40);
		ReleaseCharacterView(MAIN);
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}
		
		ReleaseCharacterView(TRAINER);
		Wait(10);
		ReleaseCharacterView(MAIN);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 1;
		Wait(10);
		DisplaySpeech(MAIN, "... I don't see Morry anywhere.");
		Wait(30);
		ReleaseCharacterView(TRAINER);
		SetCharacterSpeechView(TRAINER, 40);
		Wait(10);
		EndCutscene();
		
		DisplaySpeech(TRAINER, "So, what do you think?");
		SetGlobalInt(60, 1);				// been on tour once
		Wait(20);
		
		RunDialog(13);
	}
	
	else {					// already been on tour	

		MoveCharacterDirect(MAIN, 244, 103);
		MoveCharacterDirect(TRAINER, 307, 110);
	
		while(GetViewportX() < 90) {
	
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
		 
		MoveCharacterBlocking(MAIN, 244, 103, 1);
		MoveCharacterBlocking(TRAINER, 307, 110, 1);
		
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		
		EndCutscene();
		StartCutscene(5);
		
		Wait(20);
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		Wait(10);
		DisplaySpeech(TRAINER, "Alright!");
		ReleaseCharacterView(TRAINER);
		SetCharacterSpeechView(TRAINER, 40);
		Wait(10);
		character[TRAINER].loop= 0;
		Wait(15);
		DisplaySpeech(TRAINER, "Now where to start...?");
		Wait(20);
		character[MAIN].loop= 2;
		Wait(10);
		character[TRAINER].loop= 2;
		Wait(10);
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		DisplaySpeech(TRAINER, "... there's so much great stuff in here!");
		ReleaseCharacterView(TRAINER);
		SetCharacterSpeechView(TRAINER, 40);
		Wait(10);
		MoveCharacter(TRAINER, 425, 128);
		Wait(30);
		MoveCharacter(MAIN, 348, 129);
		
		while(GetViewportX() < 190) {
			
			SetViewport(GetViewportX() + 2, GetViewportY());
			Wait(1);
		}
		
		MoveCharacterBlocking(TRAINER, 425, 128, 0);
		MoveCharacterBlocking(MAIN, 348, 129, 0);
		Wait(10);
		DisplaySpeech(TRAINER, "... over here, we have some of our leg machines!");
		Wait(5);
		character[TRAINER].loop= 1;
		Wait(20);
		DisplaySpeechBackground(TRAINER, "... uh...");
		Wait(80);
		DisplaySpeech(MAIN, "Catch-22, remember?");
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		Wait(10);
		DisplaySpeech(TRAINER, "Right!");
		ReleaseCharacterView(TRAINER);
		Wait(10);
		MoveCharacter(TRAINER, 402, 168);
		Wait(40);
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
		MoveCharacter(MAIN, 375, 181);
	
		while(GetViewportY() < 40) {
		
			if(GetViewportX() < 220) {
	
				SetViewport(GetViewportX() + 1, GetViewportY() + 1);
			}
	
			else {
			  
				SetViewport(GetViewportX(), GetViewportY() + 1);
			}
	
			Wait(1);
		}
		
		MoveCharacterBlocking(TRAINER, 402, 168, 0);
		character[TRAINER].loop= 0;
		MoveCharacterBlocking(MAIN, 375, 181, 0);
		character[MAIN].loop= 2;
		Wait(30);
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		DisplaySpeech(TRAINER, "My personal favorite, the bench press!");
		Wait(10);
		ReleaseCharacterView(TRAINER);
		MoveCharacter(TRAINER, 78, 169);
		Wait(20);
		MoveCharacter(MAIN, 201, 183);
		
		while(GetViewportX() > 0) {
			
			if(GetViewportY() > 40) {
			
				SetViewport(GetViewportX() - 2, GetViewportY() - 1);
			}
	
			else {
			  
				SetViewport(GetViewportX() - 2, GetViewportY());
			}
	
			Wait(1);
		}
		
		MoveCharacterBlocking(MAIN, 201, 183, 0);
		character[MAIN].loop= 1;
		MoveCharacterBlocking(TRAINER, 78, 169, 0);
		Wait(5);
		character[TRAINER].loop= 0;
		Wait(5);
		character[TRAINER].loop= 2;
		Wait(10);
		SetCharacterView(TRAINER, 155);
		SetCharacterSpeechView(TRAINER, 156);
		Wait(10);
		DisplaySpeech(TRAINER, "... and, of course, these amazing FITNESS BALLS!");
		Wait(10);
		DisplaySpeech(MAIN, "... I don't see Morry in here.");
		Wait(30);
		ReleaseCharacterView(TRAINER);
		SetCharacterSpeechView(TRAINER, 40);
		EndCutscene();
		Wait(10);
		DisplaySpeech(TRAINER, "So, what do you think?");
		SetGlobalInt(60, 1);				// been on tour once
		Wait(20);
		
		RunDialog(13);
	}
}
	
else if(GetGlobalInt(9)== 2 && IsObjectOn(1)== 1) {

	MoveCharacterDirect(MAIN, 244, 103);
	MoveCharacterDirect(TRAINER, 307, 110);

	while(GetViewportX() < 90) {

		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
	 
	MoveCharacterBlocking(MAIN, 244, 103, 1);
	MoveCharacterBlocking(TRAINER, 307, 110, 1);
	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	SetCharacterView(TRAINER, 155);
	SetCharacterSpeechView(TRAINER, 156);
	Wait(10);
	DisplaySpeech(TRAINER, "I know right where we should start...");
	Wait(10);
	character[TRAINER].loop= 0;
	Wait(5);
	character[TRAINER].loop= 1;
	Wait(20);
	ReleaseCharacterView(TRAINER);
	SetCharacterSpeechView(TRAINER, 40);
	MoveCharacter(TRAINER, 157, 140);
	MoveCharacter(MAIN, 195, 164);
	
	while(GetViewportX() > 0) {
	
		if(GetViewportY() < 30) {
		
			SetViewport(GetViewportX() - 2, GetViewportY() + 1);
		}

		else {
		
			SetViewport(GetViewportX() - 2, GetViewportY());
		}

		Wait(1);
	}
	
	MoveCharacterBlocking(TRAINER, 157, 140, 0);
	character[TRAINER].loop= 0;
	MoveCharacterBlocking(MAIN, 195, 164, 0);
	character[MAIN].loop= 1;
	Wait(20);
	SetCharacterView(TRAINER, 155);
	SetCharacterSpeechView(TRAINER, 156);
	Wait(10);
	DisplaySpeech(TRAINER, "... the fitness ball!");
	SetCharacterView(MAIN, 74);
	ReleaseCharacterView(TRAINER);
	SetCharacterSpeechView(TRAINER, 40);
	Wait(10);
	DisplaySpeech(TRAINER, "We can do your entire workout on this!");
	Wait(10);
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	EnableRegion(1);
	EnableRegion(2);
	SetTimer(1, 200);				// start idle messages
	SetMusicMasterVolume(90);
	Wait(30);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();
}

else if(GetGlobalInt(9)== 2 && IsObjectOn(1)== 0) {

	MoveCharacterDirect(MAIN, 244, 103);
	MoveCharacterDirect(TRAINER, 307, 110);

	while(GetViewportX() < 90) {

		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
	 
	MoveCharacterBlocking(MAIN, 244, 103, 1);
	MoveCharacterBlocking(TRAINER, 307, 110, 1);
	Wait(10);
	SetCharacterView(TRAINER, 155);
	SetCharacterSpeechView(TRAINER, 156);
	Wait(10);
	DisplaySpeech(TRAINER, "Now where should we start...?");
	FollowCharacterEx(TRAINER, MAIN, 60, 60);
	Wait(10);
	SetTimer(1, 200);
	EnableRegion(3);	// workaround for when trainer stands in front of exit (turned off in before fade in)
	SetMusicMasterVolume(90);
	Wait(30);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();
}

else if(GetGlobalInt(9)== 3) {
  
	MoveCharacterDirect(MAIN, 244, 103);
	
	while(GetViewportX() < 90) {

		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 244, 103, 1);
	EnableRegion(3);
}

SetGlobalInt(7, 4);						// set state to on gym floor
}


function object1_a() {
  // script for object1: Use inventory on object
  
}

function object1_b() {
  // script for object1: Use inventory on object

if(ACTION== USE) {

	MoveCharacter(MAIN, 160, 167);
	
	while(GetViewportY() > 35) {
	
		SetViewport(GetViewportX() - 2, GetViewportY() - 1);
		Wait(1);
	}
  
	MoveCharacterBlocking(MAIN, 160, 167, 0);
	character[MAIN].loop= 1;
	
	SetTimer(1, 0);
	
	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	GUIOff(2);
	GUIOn(4);
	StartCutscene(5);
	
	Wait(30);
	character[MAIN].loop= 0;
	Wait(5);
	MoveCharacterBlocking(MAIN, 220, 167, 0);
	DisplaySpeech(MAIN, "Woah! Is she using that leg machine IMPROPERLY?");
	Wait(10);
	SetCharacterView(TRAINER, 155);
	SetCharacterSpeechView(TRAINER, 156);
	Wait(20);
	ReleaseCharacterView(TRAINER);
	MoveCharacterBlocking(TRAINER, 205, 158, 0);
	SetCharacterView(TRAINER, 155);
	character[TRAINER].loop= 2;
	DisplaySpeech(TRAINER, "W-Where!?");
	Wait(10);
	ReleaseCharacterView(TRAINER);
	MoveCharacter(TRAINER, 260, 170);
	MoveCharacter(MAIN, 160, 167);
	MoveCharacterBlocking(TRAINER, 260, 170, 0);
	SetCharacterView(TRAINER, 155);
	DisplaySpeech(TRAINER, "WHERE!?");
	Wait(20);
	character[MAIN].y+= 20;				// difference in animation and standing frames
	SetCharacterView(MAIN, 3);
	ObjectOff(1);
	AnimateCharacterEx(MAIN, 8, 7, 0, 0, 1);
	StopMusic();
	SetCharacterView(MAIN, 65);
	character[MAIN].y-= 20;
	character[MAIN].loop= 1;
	ObjectOn(2);
	Wait(20);
	SetCharacterView(MAIN, 74);
	SetCharacterSpeechView(MAIN, 67);
	Wait(20);
	DisplaySpeech(MAIN, "Mmm, that felt good.");
	Wait(20);
	ReleaseCharacterView(MAIN);
	character[MAIN].loop= 0;
	Wait(5);
	MoveCharacterBlocking(MAIN, 210, 167, 0);
	SetCharacterView(MAIN, 74);
	Wait(20);
	SetCharacterView(MAIN, 67);
	character[MAIN].frame= 3;
	int temp= DisplaySpeechBackground(MAIN, "Um...");
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	Wait(10);
	DisplaySpeech(MAIN, "... I think I broke it.");
	Wait(20);
	character[TRAINER].loop= 0;
	Wait(5);
	character[TRAINER].loop= 1;
	Wait(10);
	SetCharacterView(TRAINER, 158);
	character[TRAINER].frame= 1;
	temp= DisplaySpeechBackground(TRAINER, "Huh?");
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	ReleaseCharacterView(TRAINER);
	SetCharacterView(TRAINER, 157);
	Wait(20);
	ReleaseCharacterView(TRAINER);
	MoveCharacter(TRAINER, 105, 154);
	Wait(20);
	character[MAIN].loop= 0;
	Wait(5);
	character[MAIN].loop= 1;
	
	while(GetViewportX() > 0) {
	
		SetViewport(GetViewportX() - 2, GetViewportY());
		Wait(1);
	}
	
	MoveCharacterBlocking(TRAINER, 105, 154, 0);
	SetCharacterView(TRAINER, 156);
	SetCharacterSpeechView(TRAINER, 156);
	character[TRAINER].loop= 2;
	Wait(20);
	character[TRAINER].loop= 2;
	character[TRAINER].frame= 1;
	Wait(40);
	DisplaySpeech(TRAINER, "These fitness balls are designed to withstand the weight of a 500 lbs. fat person!");
	SetCharacterView(TRAINER, 156);
	character[TRAINER].loop= 2;
	character[TRAINER].frame= 1;
	Wait(20);
	SetCharacterView(MAIN, 68);
	SetCharacterSpeechView(MAIN, 67);
	Wait(20);
	DisplaySpeech(MAIN, "Well at least we'll have time to check out the locker rooms!");
	SetCharacterView(MAIN, 68);
	SetCharacterView(TRAINER, 157);
	SetCharacterSpeechView(TRAINER, 158);
	Wait(10);
	DisplaySpeech(TRAINER, "What!?");
	Wait(10);
	ReleaseCharacterView(TRAINER);
	SetCharacterSpeechView(TRAINER, 40);
	Wait(10);
	DisplaySpeech(TRAINER, "We're not ready to hit the showers, yet!");
	SetCharacterView(MAIN, 74);
	SetCharacterView(TRAINER, 155);
	SetCharacterSpeechView(TRAINER, 156);
	Wait(20);
	DisplaySpeech(TRAINER, "This is a great opportunity to use the REST of the equipment!");
	ReleaseCharacterView(TRAINER);
	SetCharacterSpeechView(TRAINER, 40);
	Wait(10);
	PlayMusic(5);
	Wait(10);
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	FollowCharacterEx(TRAINER, MAIN, 60, 60);
	SetTimer(1, 200);					// start idle speech displays
	EnableRegion(3);			// workaround for when trainer stands in front of exit
	Wait(10);
	SetMusicMasterVolume(90);
	Wait(10);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();
}
}

function object0_a() {
  // script for object0: Use inventory on object
  
if(IsObjectOn(1)== 0) {

	if(GetGlobalInt(10)== 0) {						// hasn't put glue on it

		MoveCharacter(MAIN, 431, 154);
		
		while(character[MAIN].walking) {
		
			room_c();
			Wait(1);
		}
		
		MoveCharacterBlocking(MAIN, 431, 154, 0);
		character[MAIN].loop= 1;
		
		if(TrainerIdle== 1) {
		
			TrainerIdle= 0;
			
			if(IsOverlayValid(TrainerIdleSpeech)) {
			  
				RemoveOverlay(TrainerIdleSpeech);
			}
	
			ReleaseCharacterView(TRAINER);
		}

		SetTimer(1, 0);
		Wait(10);
		FollowCharacter(TRAINER, -1);
		ReleaseCharacterView(TRAINER);
		MoveCharacterBlocking(TRAINER, 370, 144, 0);
		character[TRAINER].loop= 1;
		ReleaseCharacterView(TRAINER);
		Wait(10);
		
		SetMusicMasterVolume(30);
		Wait(10);
		
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		
		Wait(30);
		DisplaySpeech(MAIN, "This sure is a great facility!");
		Wait(10);
		int temp= DisplaySpeechBackground(TRAINER, "Yeah... just LOOK at it...");
		SetCharacterView(TRAINER, 156);
		AnimateCharacter(TRAINER, 1, 5, 1);
		Wait(30);
		MoveCharacterBlocking(MAIN, 480, 158, 0);
		Wait(10);
		MoveCharacterBlocking(MAIN, 476, 166, 1);
		character[MAIN].loop= 1;
		Wait(10);
		SetCharacterView(MAIN, 3);
		AnimateCharacterEx(MAIN, 9, 7, 0, 0, 1);
		ReleaseCharacterView(MAIN);
		
		while(IsOverlayValid(temp)) {
		
			RemoveOverlay(temp);
			Wait(1);
		}
		
		ReleaseCharacterView(TRAINER);
		character[TRAINER].loop= 1;
		Wait(10);
		character[MAIN].loop= 0;
		Wait(5);
		MoveCharacterBlocking(MAIN, 486, 170, 1);
		character[MAIN].loop= 2;
		Wait(10);
		SetCharacterView(MAIN, 3);
		AnimateCharacterEx(MAIN, 10, 7, 0, 0, 1);
		ReleaseCharacterView(MAIN);
		Wait(10);
		SetGlobalInt(10, 1);						// set state to stuck
		MoveCharacterBlocking(MAIN, 480, 158, 1);
		character[MAIN].loop= 0;
		Wait(30);
		SetTimer(1, 200);
		StopMusic();
		SetMusicMasterVolume(90);
		FollowCharacterEx(TRAINER, MAIN, 60, 60);
		Wait(10);
		PlayMusic(5);
		Wait(10);
		
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
	
	else if(GetGlobalInt(10)== 1) {						// has put glue on it
	
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I already put some glue on there.", 1);
	}
}
}

function object0_b() {
  // script for object0: Interact object

if(ACTION== USE) {
  
	if(GetGlobalInt(10)== 1) {					// if it's glued stuck

		MoveCharacter(MAIN, 399, 184);

		while(character[MAIN].walking) {
		
			room_c();
			Wait(1);
		}
	
		MoveCharacterBlocking(MAIN, 399, 184, 0);
		MoveCharacterBlocking(MAIN, 415, 194, 1);
		
		SetTimer(1, 0);
		
		if(TrainerIdle== 1) {
		
			TrainerIdle= 0;
			
			if(IsOverlayValid(TrainerIdleSpeech)) {
			  
				RemoveOverlay(TrainerIdleSpeech);
			}
	
			ReleaseCharacterView(TRAINER);
		}
		
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		
		Wait(20);
		DisplaySpeech(MAIN, "What's this one all about...?");
		Wait(10);
		SetObjectView(3, 52);
		SetCharacterTransparency(MAIN, 100);
		ObjectOn(3);
		AnimateObject(3, 6, 7, 0);
		Wait(60);
		FollowCharacter(TRAINER, -1);
		FaceCharacter(TRAINER, MAIN);
		Wait(10);
		DisplaySpeech(TRAINER, "No, no, no...");
		Wait(10);
		SetCharacterSpeechView(TRAINER, 156);
		DisplaySpeech(TRAINER, "... you've got it all wrong!");
		SetCharacterSpeechView(TRAINER, 40);
		Wait(10);
		ReleaseCharacterView(TRAINER);
		MoveCharacterBlocking(TRAINER, 350, 174, 0);
		character[TRAINER].loop= 2;
		
		while(IsObjectAnimating(3)) {
		
			Wait(1);
		}
		
		ObjectOff(3);
		SetCharacterTransparency(MAIN, 0);
		Wait(20);
		character[MAIN].loop= 0;
		Wait(5);
		MoveCharacterBlocking(MAIN, 399, 184, 1);
		Wait(20);
		MoveCharacterBlocking(MAIN, 457, 159, 1);
		character[MAIN].loop= 0;
		Wait(10);
		ReleaseCharacterView(TRAINER);
		MoveCharacterBlocking(TRAINER, 399, 184, 0);
		Wait(20);
		DisplaySpeech(TRAINER, "... let ME show you how that's to be DONE!");
		Wait(10);
		MoveCharacterBlocking(TRAINER, 410, 196, 1);
		Wait(20);
		SetObjectView(3, 52);
		SetCharacterTransparency(TRAINER, 100);
		ObjectOff(0);
		ObjectOn(3);
		AnimateObjectEx(3, 10, 7, 2, 0, 1);
		SetObjectFrame(3, 52, 8, 6);
		Wait(30);
		DisplaySpeech(MAIN, "What a whimpy whimp...", 1);
		character[TRAINER].x= 474;
		character[TRAINER].y= 210;
		Wait(10);
		DisplaySpeechBackground(TRAINER, "No, no... I'll do it!");
		Wait(60);
		AnimateObjectEx(3, 12, 7, 0, 0, 1);
		Wait(10);
		DisplaySpeechBackground(TRAINER, "... this time I've got it!");
		Wait(100);
		AnimateObject(3, 12, 7, 0);
		SetGlobalInt(9, 3);					// set state to stuck on machine
		SetTimer(1, 200);					// idle speech timer
		Wait(10);
		SetMusicMasterVolume(90);
		Wait(10);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
		
	else {

		MoveCharacter(MAIN, 399, 184);

		while(character[MAIN].walking) {
		
			room_c();
			Wait(1);
		}
	
		MoveCharacterBlocking(MAIN, 399, 184, 0);
		MoveCharacterBlocking(MAIN, 415, 194, 1);
		
		SetTimer(1, 0);
		
		if(TrainerIdle== 1) {
		
			TrainerIdle= 0;
			
			if(IsOverlayValid(TrainerIdleSpeech)) {
			  
				RemoveOverlay(TrainerIdleSpeech);
			}
	
			ReleaseCharacterView(TRAINER);
		}
		
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		
		Wait(20);
		DisplaySpeech(MAIN, "What's this one all about...?");
		Wait(10);
		SetObjectView(3, 52);
		SetCharacterTransparency(MAIN, 100);
		ObjectOn(3);
		AnimateObject(3, 6, 7, 0);
		Wait(60);
		FollowCharacter(TRAINER, -1);
		FaceCharacter(TRAINER, MAIN);
		Wait(10);
		DisplaySpeech(TRAINER, "No, no, no...");
		Wait(10);
		SetCharacterSpeechView(TRAINER, 156);
		DisplaySpeech(TRAINER, "... you're doing it all wrong!");
		SetCharacterSpeechView(TRAINER, 40);
		Wait(10);
		ReleaseCharacterView(TRAINER);
		MoveCharacterBlocking(TRAINER, 350, 174, 0);
		character[TRAINER].loop= 2;
		
		while(IsObjectAnimating(3)) {
		
			Wait(1);
		}

		ObjectOff(3);
		SetCharacterTransparency(MAIN, 0);
		Wait(20);
		character[MAIN].loop= 0;
		Wait(5);
		MoveCharacterBlocking(MAIN, 399, 184, 1);
		Wait(20);
		MoveCharacterBlocking(MAIN, 457, 159, 1);
		character[MAIN].loop= 0;
		EndCutscene();
		StartCutscene(5);
		Wait(10);
		ReleaseCharacterView(TRAINER);
		MoveCharacterBlocking(TRAINER, 399, 184, 0);
		Wait(20);
		DisplaySpeech(TRAINER, "Let ME show you how that's to be done...");
		Wait(10);
		MoveCharacterBlocking(TRAINER, 410, 196, 1);
		Wait(20);
		SetObjectView(3, 52);
		SetCharacterTransparency(TRAINER, 100);
		ObjectOff(0);
		ObjectOn(3);
		AnimateObjectEx(3, 8, 7, 0, 0, 1);
		ObjectOff(3);
		ObjectOn(0);
		SetCharacterTransparency(TRAINER, 0);
		Wait(20);
		MoveCharacterBlocking(TRAINER, 399, 184, 1);
		character[TRAINER].loop= 3;
		Wait(5);
		character[TRAINER].loop= 2;
		Wait(20);
		DisplaySpeech(TRAINER, "See how rewarding that is!");
		Wait(10);
		SetCharacterView(MAIN, 74);
		SetCharacterSpeechView(MAIN, 67);
		Wait(20);
		DisplaySpeechNoBlock(MAIN, "I'm impressed on the inside...", 1);
		Wait(20);
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
		Wait(10);
		SetTimer(1, 200);
		SetMusicMasterVolume(90);
		FollowCharacterEx(TRAINER, MAIN, 60, 60);
		Wait(10);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
}
}

function object1_c() {
  // script for object1: Look at object
  
FaceLocation(MAIN, 125, 150);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a big pink fitness ball.", 1);
}

function object1_d() {
  // script for object1: Interact object
  
if(ACTION== USE) {

	FaceLocation(MAIN, 125, 150);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Not a chance.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 125, 150);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to encourage him.", 1);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 125, 150);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't see any way to deflate it...", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 125, 150);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I can't close that.", 1);
}
}

function object1_e() {
  // script for object1: Pick up object
  
FaceLocation(MAIN, 125, 150);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I'm not taking that with me.", 1);

}

function object0_c() {
  // script for object0: Look at object
  
FaceLocation(MAIN, 464, 170);
Wait(10);

DisplaySpeechNoBlock(MAIN, "It appears to be some sort of BENCH with a set of weights...", 1);
DisplaySpeechNoBlock(MAIN, "...to be PRESSED over one's chest.", 2);
}

function hotspot2_a() {
  // script for hotspot2: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "Doesn't look like anyone is on it right now.", 1);
}

function hotspot2_b() {
  // script for hotspot2: Interact hotspot
  
if(ACTION== USE) {

	if(IsObjectOn(1)) {
	
		MoveCharacterBlocking(MAIN, 229, 153, 0);
		character[MAIN].loop= 2;
		
		if(TrainerIdle== 1) {
		
			TrainerIdle= 0;
			
			if(IsOverlayValid(TrainerIdleSpeech)) {
			  
				RemoveOverlay(TrainerIdleSpeech);
			}
	
			ReleaseCharacterView(TRAINER);
		}
		
		SetTimer(1, 0);
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(20);
		
		DisplaySpeech(TRAINER, "Hey, what're you doing?");
		FaceCharacter(MAIN, TRAINER);
		Wait(10);
		DisplaySpeech(TRAINER, "You can do it better on the ball!");
		Wait(10);
		character[MAIN].loop= 1;
		Wait(10);
		SetMusicMasterVolume(90);
		SetTimer(1, 100);
		Wait(10);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
	
	else {
	
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't want to get my legs too tired!", 1);
	}
}

}

function hotspot11_a() {
  // script for hotspot11: Interact hotspot
  
if(ACTION== USE) {

	if(IsObjectOn(1)) {
	
		MoveCharacterBlocking(MAIN, 95, 200, 0);
		character[MAIN].loop= 1;
		
		if(TrainerIdle== 1) {
		
			TrainerIdle= 0;
			
			if(IsOverlayValid(TrainerIdleSpeech)) {
			  
				RemoveOverlay(TrainerIdleSpeech);
			}
	
			ReleaseCharacterView(TRAINER);
		}

		SetTimer(1, 0);
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(20);
		
		DisplaySpeech(TRAINER, "Hey, what're you doing?");
		FaceCharacter(MAIN, TRAINER);
		Wait(10);
		DisplaySpeech(TRAINER, "You can do it better on the ball!");
		Wait(10);
		character[MAIN].loop= 2;
		Wait(10);
		SetMusicMasterVolume(90);
		SetTimer(1, 100);
		Wait(10);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
	
	else {
	
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't really want an ab workout...", 1);
	}
}


}

function hotspot11_b() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "Those must be popular.", 1);
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It must be some sort of abdominal workout...", 1);
}

function hotspot10_b() {
  // script for hotspot10: Interact hotspot
  
if(ACTION== USE || ACTION== PUSH || ACTION== PULL) {

	if(IsObjectOn(1)) {
	
		MoveCharacterBlocking(MAIN, 103, 152, 0);
		character[MAIN].loop= 1;
		
		if(TrainerIdle== 1) {
		
			TrainerIdle= 0;
			
			if(IsOverlayValid(TrainerIdleSpeech)) {
			  
				RemoveOverlay(TrainerIdleSpeech);
			}
	
			ReleaseCharacterView(TRAINER);
		}
		
		SetTimer(1, 0);
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(20);
		
		DisplaySpeech(TRAINER, "Hey, what're you doing?");
		FaceCharacter(MAIN, TRAINER);
		Wait(10);
		DisplaySpeech(TRAINER, "You can do it better on the ball!");
		Wait(10);
		character[MAIN].loop= 2;
		Wait(10);
		SetMusicMasterVolume(90);
		Wait(10);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
	
	else {
	
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I really don't want to get on that.", 1);
	}
}
}

function hotspot3_a() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "That must be the aerobics room.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Interact hotspot

if(ACTION== USE || ACTION== OPEN) {
  
	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't really want to go in there...", 1);
}
}

function hotspot8_a() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's probably fake.", 1);
}


function hotspot8_b() {
  // script for hotspot8: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't need to dig around in it.", 1);
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "There's nothing special about it.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot
  
if(ACTION== USE || ACTION== OPEN) {

	if(IsObjectOn(1)) {
	
		MoveCharacterBlocking(MAIN, 159, 156, 0);
		character[MAIN].loop= 3;
		Wait(10);
		
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(20);
		
		DisplaySpeech(TRAINER, "What do you need to go over there for?");
		FaceCharacter(MAIN, TRAINER);
		Wait(10);
		DisplaySpeech(TRAINER, "You got everything you need right here!");
		Wait(10);
		character[MAIN].loop= 2;
		Wait(20);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}

	else {
	  
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "They probably keep them locked.", 1);
	}
}
}

function hotspot9_c() {
  // script for hotspot9: Pick up hotspot
  
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's the weight rack.", 1);
}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "They all look pretty heavy.", 1);
}

function hotspot13_b() {
  // script for hotspot13: Interact hotspot

if(ACTION== USE || ACTION== PULL) {

	if(IsObjectOn(1)) {
	
		MoveCharacterBlocking(MAIN, 258, 187, 0);
		character[MAIN].loop= 2;
		
		SetTimer(1, 0);
		
		if(TrainerIdle== 1) {
		
			TrainerIdle= 0;
			
			if(IsOverlayValid(TrainerIdleSpeech)) {
			  
				RemoveOverlay(TrainerIdleSpeech);
			}
	
			ReleaseCharacterView(TRAINER);
		}
		
		Wait(10);
		
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(20);
		
		DisplaySpeech(TRAINER, "Ho-ho we can get to those later...");
		FaceCharacter(MAIN, TRAINER);
		Wait(10);
		DisplaySpeech(TRAINER, "... let's get some work done on the fitness ball first!");
		Wait(10);
		character[MAIN].loop= 1;
		Wait(20);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}

	else {
	  
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't think I'm strong enough to lift that.", 1);
	}
}

}

function hotspot13_c() {
  // script for hotspot13: Pick up hotspot
  
if(IsObjectOn(1)) {

	MoveCharacterBlocking(MAIN, 258, 187, 0);
	character[MAIN].loop= 2;
	Wait(10);
	
	GUIOff(2);
	GUIOn(4);
	StartCutscene(5);
	Wait(20);
	
	DisplaySpeech(TRAINER, "Ho-ho we can get to those later...");
	FaceCharacter(MAIN, TRAINER);
	Wait(10);
	DisplaySpeech(TRAINER, "... let's get some work done on the fitness ball first!");
	Wait(10);
	character[MAIN].loop= 1;
	Wait(20);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();
}

else {
  
	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't think I'm strong enough to lift that.", 1);
}
}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "... there's more of them?", 1);
}

function hotspot14_b() {
  // script for hotspot14: Interact hotspot

if(ACTION== USE || ACTION== PULL) {
  
	if(IsObjectOn(1)) {
	
		MoveCharacterBlocking(MAIN, 51, 170, 0);
		character[MAIN].loop= 1;
		
		if(TrainerIdle== 1) {
		
			TrainerIdle= 0;
			
			if(IsOverlayValid(TrainerIdleSpeech)) {
			  
				RemoveOverlay(TrainerIdleSpeech);
			}
	
			ReleaseCharacterView(TRAINER);
		}
		
		SetTimer(1, 0);
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(20);
		
		DisplaySpeech(TRAINER, "Hold on there partner...");
		FaceCharacter(MAIN, TRAINER);
		Wait(10);
		DisplaySpeech(TRAINER, "... we've already got one out!");
		Wait(10);
		character[MAIN].loop= 2;
		Wait(10);
		SetMusicMasterVolume(90);
		SetTimer(1, 100);
		Wait(10);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
	
	else {
	  
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't want to get another one out!", 1);
	}
}
}

function hotspot14_c() {
  // script for hotspot14: Pick up hotspot
  
if(IsObjectOn(1)) {

	MoveCharacterBlocking(MAIN, 51, 170, 0);
	character[MAIN].loop= 1;
		
	if(TrainerIdle== 1) {
	
		TrainerIdle= 0;
		
		if(IsOverlayValid(TrainerIdleSpeech)) {
		  
			RemoveOverlay(TrainerIdleSpeech);
		}

		ReleaseCharacterView(TRAINER);
	}
	
	SetTimer(1, 0);
	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	GUIOff(2);
	GUIOn(4);
	StartCutscene(5);
	Wait(10);
	DisplaySpeech(TRAINER, "Hold on there partner...");
	Wait(10);
	FaceCharacter(MAIN, TRAINER);
	Wait(10);
	DisplaySpeech(TRAINER, "... we've already got one out!");
	Wait(10);
	character[MAIN].loop= 2;
	Wait(10);
	SetMusicMasterVolume(90);
	SetTimer(1, 100);
	Wait(10);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();
}

else {
  
	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to get another one out!", 1);
}
}

function hotspot15_a() {
  // script for hotspot15: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It holds the fitness balls.", 1);
}

function hotspot15_b() {
  // script for hotspot15: Interact hotspot

if(ACTION== USE) {
  
	if(IsObjectOn(1)) {
	
		MoveCharacterBlocking(MAIN, 51, 170, 0);
		character[MAIN].loop= 1;
		
		SetTimer(1, 0);
		
		if(TrainerIdle== 1) {
		
			TrainerIdle= 0;
			
			if(IsOverlayValid(TrainerIdleSpeech)) {
			  
				RemoveOverlay(TrainerIdleSpeech);
			}
	
			ReleaseCharacterView(TRAINER);
		}
		
		Wait(10);
		
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(20);
		
		DisplaySpeech(TRAINER, "Hold on there partner...");
		FaceCharacter(MAIN, TRAINER);
		Wait(10);
		DisplaySpeech(TRAINER, "... we've already got one out!");
		Wait(10);
		character[MAIN].loop= 2;
		Wait(20);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
	
	else {
	  
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't want to get another one out!", 1);
	}
}

else if(ACTION== PUSH || ACTION== PULL) {

	if(IsObjectOn(1)) {
	
		MoveCharacterBlocking(MAIN, 51, 170, 0);
		character[MAIN].loop= 1;
		Wait(10);
		
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(20);
		
		DisplaySpeech(TRAINER, "Hold on there partner...");
		FaceCharacter(MAIN, TRAINER);
		Wait(10);
		DisplaySpeech(TRAINER, "... we've already got one out!");
		Wait(10);
		character[MAIN].loop= 2;
		Wait(20);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
	
	else {
	  
		FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "It looks sturdy.", 1);
	}

}
}

function hotspot16_a() {
  // script for hotspot16: Look at hotspot
  
  
Wait(5);
DisplaySpeechNoBlock(MAIN, "They keep it bright in here.", 1);
}


function hotspot4_a() {
  // script for hotspot4: Look at hotspot
  

FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "Nobody's on them right now.", 1);
}

function hotspot4_b() {
  // script for hotspot4: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to get my legs too tired!", 1);
}
}

function hotspot5_a() {
  // script for hotspot5: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It seperates the floor area from the entrance.", 1);
}

function hotspot5_b() {
  // script for hotspot5: Interact hotspot
  
if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It looks to heavy to move.", 1);
}
}

function region1_a() {
  // script for region1: Player walks onto region

if(GetGlobalInt(9)== 2 && IsObjectOn(1)) {			// if he's in workout and ball is still there

	GUIOff(2);
	GUIOn(4);
	StartCutscene(5);
	StopMoving(MAIN);
	
	while(GetViewportX() > 0 && GetViewportY() > 36) {
		
		if(GetViewportY() < 36) {
		
			SetViewport(GetViewportX() - 1, GetViewportY() + 1);
		}

		else if(GetViewportY() > 36) {
		
			SetViewport(GetViewportX() - 1, GetViewportY() - 1);
		}
		
		Wait(1);
	}
	
	SetTimer(1, 0);
	
	if(TrainerIdle== 1) {
	
		TrainerIdle= 0;
		
		if(IsOverlayValid(TrainerIdleSpeech)) {
		  
			RemoveOverlay(TrainerIdleSpeech);
		}

		ReleaseCharacterView(TRAINER);
	}
	
	Wait(10);
	DisplaySpeech(TRAINER, "Hey! The fitness ball is over here!");
	Wait(10);
	character[MAIN].loop= 0;
	Wait(5);
	character[MAIN].loop= 1;
	Wait(10);
	MoveCharacterBlocking(MAIN, 186, 161, 0);
	Wait(10);
	DisplaySpeech(TRAINER, "We'll move on after we're through with it!");
	Wait(20);
	SetTimer(1, 100);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();
}
}

function region2_a() {
  // script for region2: Player walks onto region

if(GetGlobalInt(9)== 2 && IsObjectOn(1)) {			// if he's in workout and ball is still there
  
	GUIOff(2);
	GUIOn(4);
	StartCutscene(5);
	StopMoving(MAIN);
	
	while(GetViewportX() > 0 && GetViewportY() > 36) {
		
		SetViewport(GetViewportX() - 1, GetViewportY() - 1);
		Wait(1);
	}
	
	SetTimer(1, 0);
	
	if(TrainerIdle== 1) {
	
		TrainerIdle= 0;
		
		if(IsOverlayValid(TrainerIdleSpeech)) {
		  
			RemoveOverlay(TrainerIdleSpeech);
		}

		ReleaseCharacterView(TRAINER);
	}
	
	Wait(10);
	DisplaySpeech(TRAINER, "Hey! The fitness ball is over here!");
	Wait(10);
	character[MAIN].loop= 0;
	Wait(5);
	character[MAIN].loop= 1;
	Wait(10);
	MoveCharacterBlocking(MAIN, 186, 161, 0);
	Wait(10);
	DisplaySpeech(TRAINER, "We'll move on after we're through with it!");
	Wait(20);
	SetTimer(1, 100);
	
	GUIOn(2);
	GUIOff(4);
	EndCutscene();
}
}

function object2_a() {
  // script for object2: Look at object
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I slayed it.", 1);
}

function object2_b() {
  // script for object2: Interact object

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's not very useful without air.", 1);
}
}

function object2_c() {
  // script for object2: Pick up object
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't need to be hauling a corpse around.", 1);
}

function object1_f() {
  // script for object1: Use inventory on object
  
FaceLocation(MAIN, 125, 150);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't think that could do enough damage.", 1);
}

function object1_g() {
  // script for object1: Use inventory on object
  
FaceLocation(MAIN, 125, 150);
Wait(5);
DisplaySpeechNoBlock(MAIN, "There's not really a hole to poke it in.", 1);
}

function object1_h() {
  // script for object1: Use inventory on object
  
FaceLocation(MAIN, 125, 150);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It doesn't need to be glued.", 1);
}

function hotspot1_b() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(5);
DisplaySpeechNoBlock(MAIN, "It leads back to the front desk area.", 1);
}

function region3_a() {
  // script for region3: Player walks onto region
  
MoveCharacter(MAIN, 237, 92);

while(character[MAIN].walking) {
	
	room_c();
	Wait(1);
}

MoveCharacterBlocking(MAIN, 237, 92, 0);
MoveCharacterBlocking(MAIN, 195, 86, 1);

NewRoom(18);

FollowCharacter(TRAINER, -1);			// if he's following him
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "More weight room equipment over there.", 1);
}

function hotspot7_b() {
  // script for hotspot7: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "There's enough equipment to choose from over here.", 1);
}
}

function object0_d() {
  // script for object0: Pick up object
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(10);
DisplaySpeechNoBlock(MAIN, "I can't lift that bar!", 1);
}

function object3_a() {
  // script for object3: Talk to object
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(10);
DisplaySpeechNoBlock(MAIN, "... he needs to focus.", 1);
}

function object3_b() {
  // script for object3: Look at object
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(10);
DisplaySpeechNoBlock(MAIN, "He'll be working on that for a while...", 1);
}

function object3_c() {
  // script for object3: Interact object
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "Someone's on it right now.", 1);
}

else if(ACTION== PUSH || ACTION== PULL || ACTION==GIVE) {

	FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't think he wants help.", 1);
}
}

function object3_d() {
  // script for object3: Pick up object
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't think he wants help.", 1);
}

$$$!$$$ ROOM room3.crm
$$$!$$$ RS
// text script for room

int XScroll= 0;							// variable handling room scrolling
int ViewportX;							// variable with X coord of frame
int CharacterX;

int RegionIdle= 0;						// flag for the near versions of mom's idle

int GrandpaIdleCounter= 0;					// counter for different idle messages							// variable with X coord of character
import int GrandpaIdle;						// flag set when grandpa is idle
import int GrandpaIdleSpeech;						// contains overlay id's for grandpa's speech

int MomIdleCounter= 0;
import int MomIdle;
import int MomIdleSpeech;

function room_b() {
  // script for room: Player enters screen (before fadein)

if(GetGlobalInt(12)== 1) {					// scene from intro

	character[GRANDPA].room= 3;
	character[GRANDPA].x= 200;			
	character[GRANDPA].y= 118;
	character[GRANDPA].loop= 1;
	SetCharacterBaseline(GRANDPA, 110);
	SetViewport(0, 0);
}

else if(GetGlobalInt(57)== 1) {						// cinematic from beginning of the game

	ReleaseCharacterView(GRANDPA);
	character[GRANDPA].room= 3;
	character[GRANDPA].x= 200;			
	character[GRANDPA].y= 118;
	character[GRANDPA].loop= 1;
	SetCharacterBaseline(GRANDPA, 110);
	SetViewport(0, 0);
}

else {								// if we aren't in initial cutscene

	if(GetGlobalInt(44)== 1) {				// rufus cutscene from laundry room
	
		character[CAT].x= 412;
		character[CAT].y= 67;
		character[CAT].loop= 2;
		SetViewport(220, 0);
	}

	if(GetGlobalInt(6)== 4) {				// rufus cutscene from kitchen

		character[MAIN].x= 38;
		character[MAIN].y= 94;
		character[MAIN].loop= 2;
		SetCharacterTransparency(MAIN, 0);
	}								

	if(GetGlobalInt(1)== 0) { 				// set mom's state to vacuuming downstairs, if she was vacuuming upstairs before

		SetGlobalInt(1, 1); 
	}		
	
	if(GetGlobalInt(1)== 1 || GetGlobalInt(1)== 3) {	// Mom vacuuming downstairs
	
		ReleaseCharacterView(MOM);
		SetCharacterSpeechView(MOM, 5);
		character[MOM].room= 3;
		character[MOM].x= 404;				
		character[MOM].y= 121;
		AnimateCharacter(MOM, 9, 7, 1);			// start vacuuming
		RemoveWalkableArea(3);				// set walk around 
		SetTimer(2, 600);
		ObjectOff(0);					// make sure vacuum object isn't on
		MomIdle= 0;
		EnableRegion(4);
	}
	
	else {
	
		RestoreWalkableArea(3);				// remove mom's walkaround
		ObjectOff(0);					// turn off vacuum
	}
	
	if(GetGlobalInt(4)== 0 || GetGlobalInt(4)== 1) {	// If Grandpa is sitting on couch with or without hearing aids
	
		ReleaseCharacterView(GRANDPA);
		character[GRANDPA].room= 3;
		character[GRANDPA].x= 200;			
		character[GRANDPA].y= 118;
		character[GRANDPA].loop= 1;
		SetCharacterBaseline(GRANDPA, 110);
		SetTimer(1, 400);
		GrandpaIdle= 0;
	}
	
	if(character[CAT].room== 3) {				// rufus in livingroom
	
		SetCharacterView(CAT, 9);
		AnimateCharacter(CAT, 0, 5, 1);
	}
	
	if(GetGlobalInt(7)== 6) {				// from map
	
		SetViewport(320, 0);
		character[MAIN].x= 539;
		character[MAIN].y= 116;
		character[MAIN].loop= 3;
	}
	
	else if(GetGlobalInt(5)== 6) {				// from hallway
	
		if(GetGlobalInt(43)== 1 || GetGlobalInt(43)== 2) {			// if he just let knuckles out
		
			SetCharacterSpeed(MAIN, 10);
			SetCharacterTransparency(MAIN, 0);
			DisableRegion(4);			// no mom response (enabled in after fade in)
		}

		SetViewport(320, 0);
		character[MAIN].x= 441;
		character[MAIN].y= 43;
		character[MAIN].loop= 2;
		SetWalkBehindBase(5, 0);
		RemoveWalkableArea(2);
	}
	
	else if(GetGlobalInt(5)== 7) {				// from laundry room
		
		SetViewport(320, 0);
		character[MAIN].x= 410;
		character[MAIN].y= 67;
		character[MAIN].loop= 2;
		DisableRegion(3);				// disable safety region
	}
	
	else if(GetGlobalInt(5)== 8) {				// from kitchen
	  
		SetViewport(0, 0);
		character[MAIN].x= 80;
		character[MAIN].y= 87;
		character[MAIN].loop= 1;
		
		if(GetGlobalInt(2)!= 2) {			// if door is not propped open
		
			ObjectOn(5);
			ObjectOff(1);
		}
	}
	
	if(GetGlobalInt(12)== 5) {					// cutscene first time he walks into livingroom

		GUIOff(2);
		GUIOn(4);
		DisableInterface();
		StartCutscene(5);
	}
}


}




function hotspot1_b() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, 632, 141);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It leads outside.", 1);
}

function object0_a() {
  // script for object0: Look at object
  
DisplaySpeech(MAIN, "Stupid vacuum.");
}

function object0_b() {
  // script for object0: Interact with object
  
DisplaySpeech(MAIN, "I don't think I want to start vacuuming.");
DisplaySpeech(MAIN, "I need to get to the game shop!");
}

function object0_c() {
  // script for object0: Pick up object
  
DisplaySpeech(MAIN, "I wouldn't want to take Mom's favorite toy.");
}

function room_a() {
  // script for room: Player enters screen (after fadein)

if(GetGlobalInt(1)== 1 || GetGlobalInt(1)== 3) {			// if mom is vacuuming downstairs

	PlayAmbientSound(1, 2, 100, 491, 107);
}

if(GetGlobalInt(12)== 1) {						// cinematic from beginning of the game

	Wait(20);
	SetCharacterView(GRANDPA, 115);
	SetCharacterSpeechView(GRANDPA, 116);
	Wait(20);
	DisplaySpeech(GRANDPA, "... WHERE'S THE ENTERTAINMENT!");
	ReleaseCharacterView(GRANDPA);
	SetCharacterSpeechView(GRANDPA, 11);
	AnimateCharacterEx(GRANDPA, 11, 5, 0, 0, 1);
	SetCharacterView(GRANDPA, 115);
	Wait(20);
	ReleaseCharacterView(GRANDPA);
	NewRoom(1);
}

else if(GetGlobalInt(57)== 1) {						// cinematic from beginning of the game

	int Scene= Random(1);
	
	if(Scene== 0) {
	
		Wait(20);
		SetCharacterView(GRANDPA, 115);
		SetCharacterSpeechView(GRANDPA, 116);
		Wait(20);
		DisplaySpeech(GRANDPA, "... THESE ANKLES AREN'T GOING TO MASSAGE THEMSELVES!");
		ReleaseCharacterView(GRANDPA);
		SetCharacterSpeechView(GRANDPA, 11);
		NewRoom(5);
	}

	else if(Scene== 1) {
	
		Wait(20);
		SetCharacterView(GRANDPA, 115);
		SetCharacterSpeechView(GRANDPA, 116);
		Wait(10);
		DisplaySpeechBackground(GRANDPA, "... IF I EVER SEE THAT BIRD AGAIN!");
		SetCharacterView(GRANDPA, 116);
		AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);
		Wait(40);
		ReleaseCharacterView(GRANDPA);
		SetCharacterSpeechView(GRANDPA, 11);
		AnimateCharacterEx(GRANDPA, 11, 5, 0, 0, 1);
		Wait(20);
		
		NewRoom(5);		
	}
}

else if(GetGlobalInt(44)== 1) {						// rufus cutscene from laundry room

	Wait(10);
	PlayMusic(11);
	Wait(10);
	ReleaseCharacterView(CAT);
	MoveCharacterBlocking(CAT, 515, 89, 0);
	character[CAT].loop= 0;
	Wait(10);
	SetCharacterView(CAT, 9);
	AnimateCharacter(CAT, 0, 5, 1);
	SetGlobalInt(6, 1);						// set state to in livingroom
	Wait(40);
	NewRoom(4);
} 

else if(GetGlobalInt(6)== 4) {						// rufus cutscene from kitchen

	SetGlobalInt(6, 1);						// set state to in livingroom
	Wait(10);
	SetMusicRepeat(0);
	PlayMusic(7);
	SetMusicMasterVolume(30);
	Wait(10);
	DisplaySpeechAt(80, 15, 150, GRANDMA, "I'm gonna...");
	Wait(10);
	DisplaySpeechAt(80, 15, 150, CAT, "Fsck!  Fsck!");
	Wait(10);
	PlaySound(20);
	ShakeScreen(3);
	DisplaySpeechAt(80, 15, 150, GRANDMA, "My legs!");
	Wait(10);
	PlaySound(47);
	ShakeScreen(3);
	DisplaySpeechAt(80, 15, 150, GRANDMA, "YOU...");
	DisplaySpeechAt(80, 15, 150, CAT, "Raaaaaawwwr.");
	Wait(10);
	PlaySound(46);
	ShakeScreen(3);
	DisplaySpeechAt(80, 15, 150, GRANDMA, "Arrgghh!");
	DisplaySpeechAt(80, 15, 150, GRANDMA, "Get over here!");
	character[CAT].room= -1;
	character[GRANDMA].room= -1;
	SetGlobalInt(6, 5);						// final rufus state
	SetGlobalInt(32, 1);						// grandma gone, hasn't walked in kitchen yet
	SetGlobalInt(2, 2);						// make sure doorstop is still down
	SetDialogOption(1, 5, 2);					// turn off rufus dialog question with mom
	Wait(80);
	DisplaySpeech(MAIN, "Are they finally done in there?");
	Wait(10);
	
	GUIOn(2);
	EndCutscene();
}

else {
  
	if(GetGlobalInt(7)== 6) {						// from map
	
		MoveCharacterBlocking(MAIN, 496, 110, 0);
		SetGlobalInt(7, 5);						// set state to in house
		SetGlobalInt(5, 1);						// set state to in living room
		SetScreenTransition(TRANSITION_CROSSFADE);
	}
	
	else if(GetGlobalInt(5)== 6) {						// from upstairs
	
		if(GetGlobalInt(43)== 1) {					// if he just let knuckles out of his cage
		
			PlayMusic(7);
		}
	
		character[MAIN].x+= 4;
		character[MAIN].y+= 7;
		character[MAIN].frame= 2;
		Wait(5);
		character[MAIN].x+= 4;
		character[MAIN].y+= 7;
		character[MAIN].frame= 4;
		Wait(5);	
		character[MAIN].x+= 4;
		character[MAIN].y+= 7;
		character[MAIN].frame= 5;
		Wait(5);	
		character[MAIN].x+= 4;
		character[MAIN].y+= 7;
		character[MAIN].frame= 1;
		Wait(5);	
		character[MAIN].x+= 4;
		character[MAIN].y+= 7;
		character[MAIN].frame= 2;
		Wait(5);
		character[MAIN].x+= 4;
		character[MAIN].y+= 7;
		character[MAIN].frame= 4;
		Wait(5);
		character[MAIN].loop= 0;
		character[MAIN].frame= 1;
		character[MAIN].x+= 4;
		character[MAIN].y+= 7;
		Wait(5);
		character[MAIN].frame= 1;
		character[MAIN].x+= 4;
		character[MAIN].y+= 7;
		Wait(5);
		MoveCharacterBlocking(MAIN, 479, 95, 1);
		MoveCharacter(MAIN, 484, 99);
		SetGlobalInt(5, 1);
		SetWalkBehindBase(5, 76);					// reset stair walkbehind
		RestoreWalkableArea(2);
		
		if(GetGlobalInt(43)== 1) {					// if he just let knuckles out of his cage
		
			Wait(20);
			DisplaySpeechNoBlock(MAIN, "He can be fairly protective when he's eating.", 1);
			Wait(30);
			EnableRegion(4);
			StopMusic();
			Wait(30);
			
			GUIOn(2);
			EndCutscene();
		}
	
		else if(GetGlobalInt(43)== 2) {
		
			Wait(20);
			DisplaySpeechNoBlock(MAIN, "I guess he's not done eating yet.", 1);
			Wait(30);
			EnableRegion(4);
			StopMusic();
			Wait(30);		
			
			GUIOn(2);
			EndCutscene();
		}
	}
	
	else if(GetGlobalInt(5)== 7) {						// from laundry room
	
		SetGlobalInt(5, 1);						// set state to in living room
		
		if(GetGlobalInt(6)== 1) {					// if rufus is in front of stairs
		
			MoveCharacterBlocking(MAIN, 479, 66, 1);
			EnableRegion(2);
			SetTimer(1, 0);
			SetTimer(2, 0);
			
			Wait(10);
			SetMusicMasterVolume(30);
			PlayMusic(11);
			Wait(10);
			GUIOff(2);
			StartCutscene(5);
			
			Wait(30);
			ReleaseCharacterView(CAT);
			
			if(character[MOM].room== 3) {				// rufus gets scared
			
				MoveCharacterBlocking(CAT, 471, 112, 0);
				Wait(10);
				PlaySound(46);
				StopMusic();
				Wait(10);
				int temp= DisplaySpeechBackground(CAT, "Reeeeeoooowwrr!");
				SetCharacterSpeed(CAT, 15);
				MoveCharacterBlocking(CAT, 412, 66, 0);
				RemoveOverlay(temp);
				character[CAT].room= 4;
				SetGlobalInt(6, 0);					// set state to back on dryer
				SetCharacterSpeed(CAT, 11);
				
				Wait(20);
				PlaySound(38);
				StopAmbientSound(1);	
				Wait(20);
				ReleaseCharacterView(MOM);
				character[MOM].loop= 6;
				character[MOM].frame= 0;
				ObjectOn(0);
				Wait(10);
				character[MOM].loop= 2;
				Wait(10);
				DisplaySpeech(MOM, "Oh, c'mon Rufus!");
				DisplaySpeech(MOM, "It's just a vacuum!");
				Wait(10);
				character[MOM].loop= 6;
				character[MOM].frame= 0;
				Wait(10);
				ObjectOff(0);
				PlayAmbientSound(1, 2, 100, 491, 107);
				AnimateCharacter(MOM, 9, 7, 1);				// start vacuuming
				SetDialogOption(1, 17, 2);				// disable mom dialop option about rufus
				character[MAIN].loop= 0;
				Wait(5);
				character[MAIN].loop= 1;
				Wait(20);
				character[MAIN].loop= 0;
				Wait(5);
				MoveCharacterBlocking(MAIN, 504, 98, 0);
				Wait(10);
				DisplaySpeechNoBlock(MAIN, "He's never liked vacuums.", 1);
				Wait(20);
				
				GUIOn(2);
				EndCutscene();
			}
	
			else {
			
				Wait(10);
				SetMusicMasterVolume(30);
				SetMusicRepeat(1);
				PlayMusic(11);
				SetMusicRepeat(0);
				Wait(10);
				MoveCharacterBlocking(CAT, 325, 133, 0);
				Wait(10);
				SetCharacterView(CAT, 9);
				AnimateCharacter(CAT, 0, 5, 1);
				SetGlobalInt(6, 2);					// set state to past mom
				Wait(20);
				MoveCharacterBlocking(MAIN, 504, 98, 0);
				Wait(20);
				
				GUIOn(2);
				EndCutscene();
			}
	
			SetMusicMasterVolume(90);
			SetTimer(1, 300);				// reset idles
			SetTimer(2, 500);
		}

		else {
		
			MoveCharacterBlocking(MAIN, 494, 76, 1);
			MoveCharacter(MAIN, 504, 98);
		}

		EnableRegion(3);						// turn safety region back on
	}
	
	else if(GetGlobalInt(5)== 8) {						// from kitchen
	
		MoveCharacterBlocking(MAIN, 63, 94, 1);
		MoveCharacter(MAIN, 69, 107);
		SetGlobalInt(5, 1);
		
		if(GetGlobalInt(2)!= 2) {					// if doorstop down, don't close door
		
			PlaySound(30);
			ObjectOff(5);
			ObjectOff(1);
			Wait(15);
			ObjectOn(1);
			DisableHotspot(3);
		}

		if(GetGlobalInt(52)== 2) {				// if grandma kicked him out
			  
			DisplaySpeechNoBlock(MAIN, "This might be a while...", 1);
			Wait(10);
			SetGlobalInt(52, 1);				// set back to normal state
			SetMusicMasterVolume(90);
			Wait(30);
			
			GUIOn(2);
			EndCutscene();
		}
	}
	
	if(GetGlobalInt(12)== 5) {					// cutscene first time he walks into livingroom
	
		SetTimer(2, 0);
		Wait(20);
		PlaySound(38);
		StopAmbientSound(1);	
		ReleaseCharacterView(MOM);
		character[MOM].loop= 6;
		character[MOM].frame= 0;
		ObjectOn(0);
		Wait(10);
		character[MOM].loop= 2;
		SetCharacterView(MOM, 84);
		Wait(40);
		SetCharacterSpeechView(MOM, 86);
		DisplaySpeech(MOM, "Well, well, well...");
		SetCharacterView(MOM, 87);
		Wait(10);
		DisplaySpeech(MOM, "Back already?");
		SetCharacterView(MAIN, 74);
		SetCharacterSpeechView(MAIN, 67);
		Wait(10);
		ReleaseCharacterView(MOM);
		SetCharacterSpeechView(MOM, 5);
		DisplaySpeech(MAIN, "I'm having trouble rounding up the troops!");
		Wait(10);
		SetCharacterSpeechView(MOM, 5);
		Wait(10);
		int temp= DisplaySpeechBackground(MOM, "Grandma's in the kitchen...");
		SetCharacterView(MOM, 5);
		AnimateCharacter(MOM, character[MOM].loop, 5, 1);
		Wait(40);
		ReleaseCharacterView(MOM);
		character[MOM].loop= 0;
		Wait(5);
		character[MOM].loop= 1;
		SetCharacterView(MOM, 5);
		AnimateCharacter(MOM, character[MOM].loop, 5, 1);
		Wait(80);
		ReleaseCharacterView(MOM);
		character[MOM].loop= 0;
		Wait(5);
		character[MOM].loop= 2;
		SetCharacterView(MOM, 5);
		AnimateCharacter(MOM, character[MOM].loop, 5, 1);
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}

		ReleaseCharacterView(MOM);
		SetCharacterView(MOM, 87);
		SetCharacterSpeechView(MOM, 86);
		Wait(10);
		DisplaySpeech(MOM, "... Grandpa's watching TV in the other room...");
		SetCharacterView(MOM, 87);
		Wait(10);
		ReleaseCharacterView(MOM);
		SetCharacterSpeechView(MOM, 5);
		DisplaySpeech(MOM, "... and Thurston is upstairs in the shower!");
		Wait(10);
		character[MOM].loop= 6;
		character[MOM].frame= 0;
		Wait(10);
		ObjectOff(0);
		PlayAmbientSound(1, 2, 100, 435, 115);
		AnimateCharacter(MOM, 9, 7, 1);			// start vacuuming
		Wait(10);
		SetGlobalInt(12, 6);					// increment cutscene state
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
		SetTimer(2, 600);
		Wait(30);
		
		GUIOn(2);
		GUIOff(4);
		EnableInterface();
		EndCutscene();
	}
}
}

function hotspot1_a() {
  // script for hotspot1: Interact hotspot
  
if(ACTION== USE) {
	
	MoveCharacter(MAIN, 527, 111);
	
	while(GetViewportX() < 220) {
	
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 527, 111, 0);
	
	FadeOut(5);
	Wait(30);
	StopMusic();
	PlaySound(0);
	Wait(10);
	PlaySound(1);
	Wait(30);
	SetScreenTransition(TRANSITION_FADE);
	
	NewRoom(12);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 622, 140);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It doesn't need to be left open.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 622, 140);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function room_c() {
  // script for room: Repeatedly execute

 
CheckSpeech();									// global function

/*** VIEWPORT ***********************************************************************************/


ViewportX= GetViewportX();

CharacterX= character[MAIN].x;

if(CharacterX - ViewportX < 100) {

	XScroll= -1;
}

else if(CharacterX - ViewportX > 220) {

	XScroll= 1;
}

if(XScroll!= 0) {

	SetViewport(ViewportX+ (2* XScroll), 0);
}

if(ViewportX>= (game.room_width- 320) || 					// all the way right

  ViewportX<= 0 || 								// all the way left
 
  ((CharacterX - ViewportX)>= 150) && ((CharacterX - ViewportX)<= 170)) {	// he's in the middle

	XScroll= 0;
}


/*** IDLE STUFF *********************************************************************************/


if(IsTimerExpired(1) && character[GRANDPA].room== 3) {

	if(GrandpaIdle== 0) {
	
		ReleaseCharacterView(GRANDPA);
		GrandpaIdleCounter= Random(3);
	
		if(GrandpaIdleCounter== 0) {
		
			GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "WHERE'S THE VOLUME FOR THIS THING?!");
			SetCharacterView(GRANDPA, 116);
			AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);
		}

		if(GrandpaIdleCounter== 1) {
		
			GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "ALRIGHT, I'M READY TO GO UPSTAIRS NOW!");
			SetCharacterView(GRANDPA, 116);
			AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);
		}

		if(GrandpaIdleCounter== 2) {
		
			GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "THESE COMMERCIALS AREN'T FUNNY!");
			SetCharacterView(GRANDPA, 116);
			AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);
		}

		GrandpaIdle= 1;
	}
	
	else if(character[GRANDPA].room== 3) {			// if he's already idle, reset timer if he's in room
		
		SetTimer(1, 400);
	}
}

if(IsOverlayValid(GrandpaIdleSpeech)== 0) {

	if(GrandpaIdle== 1) {
	
		ReleaseCharacterView(GRANDPA);
		GrandpaIdle= 0;
		SetTimer(1, 400);
	}
}

if(IsOverlayValid(MomIdleSpeech)== 0) {

	if(MomIdle== 1) {
	
		ReleaseCharacterView(MOM);
		SetCharacterView(MOM, 4);
		AnimateCharacter(MOM, 9, 7, 1);			// start vacuuming
		MomIdle= 0;
	}
}


/*** RUFUS STUFF **********************************************************************************/

if(GetGlobalInt(6)== 2) {							// if rufus past mom
  
	if(character[MAIN].x - character[CAT].x < 80) {				// if jackson gets close

		StopMoving(MAIN);
		Wait(10);
		PlayMusic(11);
		Wait(30);
		
		GUIOff(2);
		StartCutscene(5);
		
		Wait(10);
		DisplaySpeech(MAIN, "C'mon Rufus...");
		Wait(10);
		ReleaseCharacterView(CAT);
		FaceCharacter(CAT, MAIN);
		Wait(10);
		ReleaseCharacterView(CAT);
		MoveCharacter(CAT, 73, 104);
		
		while(GetViewportX() > 0) {
		
			SetViewport(GetViewportX() - 2, 0);
			Wait(1);
		}

		MoveCharacterBlocking(CAT, 73, 104, 0);
		Wait(10);
		SetCharacterView(CAT, 9);
		AnimateCharacter(CAT, 0, 5, 1);
		
		if(character[GRANDPA].room== 3) {				// if grandpa's around
		
			Wait(10);
			PlayMusic(8);
			Wait(10);
			DisplaySpeech(GRANDPA, "HEY, RUFUS!");
			Wait(10);
			ReleaseCharacterView(CAT);
			character[CAT].loop= 2;
			Wait(10);
			DisplaySpeech(GRANDPA, "... CHECK THIS ACTION OUT!");
			Wait(10);
			ReleaseCharacterView(GRANDPA);
			AnimateCharacter(GRANDPA, 11, 5, 0);
			Wait(60);
			DisplaySpeechBackground(CAT, "Meeeooooowwwwrr!");
			Wait(10);
			PlaySound(46);
			SetCharacterSpeed(CAT, 15);
			ReleaseCharacterView(CAT);
			MoveCharacter(CAT, 411, 67);
			
			while(GetViewportX() < 220) {
			
				SetViewport(GetViewportX() + 2, 0);
				Wait(1);
			}
	
			MoveCharacterBlocking(CAT, 411, 67, 0);
			character[CAT].room= 4;
			SetCharacterSpeed(CAT, 11);
			SetGlobalInt(6, 0);					// set state to back in laundry room
			Wait(20);
			character[GRANDPA].loop= 2;
			ReleaseCharacterView(GRANDPA);
			
			while(GetViewportX() > 0) {
			
				SetViewport(GetViewportX() - 2, 0);
				Wait(1);
			}
			
			Wait(10);
			character[GRANDPA].loop= 1;
			Wait(10);
			DisplaySpeech(GRANDPA, "... THAT'S ONE WEIRD CAT!");
			Wait(30);
			
			while(GetViewportX() < 220) {
			
				SetViewport(GetViewportX() + 2, 0);
				Wait(1);
			}
			
			Wait(10);
			DisplaySpeechNoBlock(MAIN, "... that's one weird Grandparent.", 1);
			Wait(30);
			
			GUIOn(2);
			EndCutscene();
		}

		else {
		
			SetGlobalInt(6, 3);					// set state to past grandpa
			
			while(GetViewportX() < 220) {
			
				SetViewport(GetViewportX() + 2, 0);
				Wait(1);
			}
			
			Wait(20);
			
			GUIOn(2);
			EndCutscene();
		}
	}
}

else if(GetGlobalInt(6)== 3) {							// rufus in kitchen

	if((character[MAIN].x - character[CAT].x) < 50) {
	
		StopMoving(MAIN);
		GUIOff(2);
		StartCutscene(5);
		Wait(10);
		DisplaySpeech(MAIN, "... here Rufus!");
		Wait(10);
		
		if(IsObjectOn(2) && GetGlobalInt(62)== 1) {		// if doorstop is down and grandma making brownies
		
			Wait(10);
			PlayMusic(10);
			Wait(10);
			ReleaseCharacterView(CAT);
			FaceCharacter(CAT, MAIN);
			Wait(10);
			ReleaseCharacterView(CAT);  
			MoveCharacterBlocking(CAT, 67, 91, 0);
			MoveCharacterBlocking(CAT, 99, 83, 1);
			character[CAT].room= 10;
			SetGlobalInt(6, 4);					// set state to cutscene with Grandma
			Wait(20);
			SetCharacterTransparency(MAIN, 100);
			NewRoom(10);
		}

		else {
		
			Wait(10);
			PlayMusic(11);
			Wait(10);
			ReleaseCharacterView(CAT);
			FaceCharacter(CAT, MAIN);
			Wait(10);
			ReleaseCharacterView(CAT);
			MoveCharacterBlocking(CAT, 67, 91, 0);
			Wait(10);
			character[CAT].loop= 2;
			Wait(20);
			character[CAT].loop= 0;
			Wait(5);
			character[CAT].loop= 1;
			Wait(20);
			character[CAT].loop= 0;
			Wait(20);
			SetCharacterSpeed(CAT, 15);
			MoveCharacter(CAT, 411, 67);
			Wait(30);
			DisplaySpeechBackground(CAT, "-snort-");
			Wait(10);
			
			while(GetViewportX() < 220) {
			
				SetViewport(GetViewportX() + 2, 0);
				Wait(1);
			}
			
			MoveCharacterBlocking(CAT, 411, 67, 0);
			character[CAT].room= 4;
			SetGlobalInt(6, 0);					// set state to back in laundry room
			SetCharacterSpeed(CAT, 11);
			
			while(GetViewportX() > 0) {
			
				SetViewport(GetViewportX() - 2, 0);
				Wait(1);
			}
	
			Wait(10);
			DisplaySpeechNoBlock(MAIN, "... he was out of options.", 1);
			Wait(30);
			
			GUIOn(2);
			EndCutscene();
		}
	}
}
}



function hotspot2_b() {
  // script for hotspot2: Interact hotspot

if(ACTION== USE) {

	MoveCharacter(MAIN, 469, 98);
	
	while(GetViewportX() < 220) {
	
		SetViewport(GetViewportX() + 2, 0);
		Wait(1);
	}
  
	MoveCharacterBlocking(MAIN, 469, 98, 0);
	MoveCharacterBlocking(MAIN, 469, 92, 1);
	ReleaseCharacterView(MAIN);
	SetWalkBehindBase(5, 0);			// reset in before fade in
	RemoveWalkableArea(2);				// reset in before fade in
	character[MAIN].loop= 3;
	Wait(5);
	
	character[MAIN].frame= 1;
	Wait(5);
	character[MAIN].x-= 4;
	character[MAIN].y-= 7;
	character[MAIN].frame= 1;
	Wait(5);
	character[MAIN].x-= 4;
	character[MAIN].y-= 7;
	character[MAIN].frame= 0;
	Wait(5);
	character[MAIN].loop= 1;
	character[MAIN].x-= 4;
	character[MAIN].y-= 7;
	character[MAIN].frame= 2;
	Wait(5);
	character[MAIN].loop= 1;
	character[MAIN].x-= 4;
	character[MAIN].y-= 7;
	character[MAIN].frame= 4;
	Wait(5);
	character[MAIN].x-= 4;
	character[MAIN].y-= 7;
	character[MAIN].frame= 5;
	Wait(5);
	character[MAIN].x-= 4;
	character[MAIN].y-= 7;
	character[MAIN].frame= 1;
	Wait(5);
	character[MAIN].x-= 4;
	character[MAIN].y-= 7;
	character[MAIN].frame= 2;
	Wait(5);
	NewRoom(5);
}
}

function hotspot4_a() {
  // script for hotspot4: Interact hotspot
  
if(ACTION== USE) { 

	MoveCharacter(MAIN, 410, 66);

	while(GetViewportX() < 220) {
	
		SetViewport(GetViewportX() + 2, 0);
		Wait(1);
	}

	MoveCharacterBlocking(MAIN, 410, 66, 0);
	NewRoom(4);
}
}


function hotspot3_a() {
  // script for hotspot3: Interact hotspot
  
if(ACTION== USE) {

	MoveCharacter(MAIN, 71, 90);
	
	while(GetViewportX() > 0) {
	
		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}
  
	MoveCharacterBlocking(MAIN, 71, 90, 0);
	character[MAIN].loop= 2;
	Wait(5);
	MoveCharacterBlocking(MAIN, 96, 82, 1);
	NewRoom(10);
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 109, 34);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already propped open.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 109, 34);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I think I should just leave it open for now.", 1);
}
}

function object1_a() {
  // script for object1: Interact object
  
if(ACTION== USE) {

	MoveCharacter(MAIN, 71, 90);
	
	while(GetViewportX() > 0) {
	
		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}
  
	MoveCharacterBlocking(MAIN, 71, 90, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(5);
	ObjectOff(1);
	MoveCharacterBlocking(MAIN, 96, 82, 1);
	
	if(IsObjectOn(2)== 0) {					// if doorstop is down, don't close door behind him
		ObjectOn(1);
	}
	
	NewRoom(10);
}

else if(ACTION== OPEN) {

	MoveCharacter(MAIN, 71, 90);
	
	while(GetViewportX() > 0) {
	
		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}
		
	MoveCharacterBlocking(MAIN, 71, 90, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(5);
	ObjectOff(1);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	Wait(10);
	PlaySound(30);
	ObjectOn(1);
}
}


function object1_b() {
  // script for object1: Use inventory on object

MoveCharacter(MAIN, 61, 94);

while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, GetViewportY());
	Wait(1);
}
  
MoveCharacterBlocking(MAIN, 61, 94, 0);
character[MAIN].loop= 2;
Wait(5);
character[MAIN].loop= 9;
character[MAIN].frame= 1;
Wait(10);
PlaySound(4);
Wait(10);
ObjectOff(1);
ObjectOn(2);
LoseInventory(6);
EnableHotspot(3);
SetGlobalInt(2, 2);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
DisplaySpeechNoBlock(MAIN, "It's propped open now.", 1);
}

function object3_a() {
  // script for object3: Pick up object
  
MoveCharacterBlocking(MAIN, 409, 109, 0);
character[MAIN].loop= 1;
Wait(5);
character[MAIN].loop= 8;
character[MAIN].frame= 1;
Wait(5);
ObjectOff(3);
AddInventory(11);
Wait(5);
character[MAIN].loop= 1;
character[MAIN].frame= 0;
}

function object4_a() {
  // script for object4: Pick up object

MoveCharacter(MAIN, 129, 102);

while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, 0);
	Wait(1);
}

MoveCharacterBlocking(MAIN, 129, 102, 0);  

StartCutscene(5);
MoveCharacterBlocking(MAIN, 172, 110, 1);
Wait(20);

DisplaySpeech(MAIN, "This must have fallen out of his pocket when he stood up!");
Wait(10);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(15);
PlaySound(4);
ObjectOff(4);
AddInventory(8);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(10);
MoveCharacterBlocking(MAIN, 129, 102, 1);
EndCutscene();
}

function hotspot2_a() {
  // script for hotspot2: Look at hotspot
  
FaceLocation(MAIN, 545, 43);
Wait(5);
DisplaySpeechNoBlock(MAIN, "They lead upstairs.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, 109, 34);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's propped open now.", 1);
}

function hotspot3_c() {
  // script for hotspot3: Talk to hotspot
  
FaceLocation(MAIN, 109, 34);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I should just go in if I need to talk to someone in there.", 1);
}

function hotspot4_b() {
  // script for hotspot4: Look at hotspot
  
FaceLocation(MAIN, 530, 14);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It leads back into the laundry room.", 1);
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot
  
FaceLocation(MAIN, 25, 68);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Doesn't look like we're going to be eating any time soon.", 1);
}

function hotspot6_b() {
  // script for hotspot6: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 25, 68);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Finishing the game will have to take priority over breakfast today.", 1);
}
}

function hotspot6_c() {
  // script for hotspot6: Pick up hotspot
  
FaceLocation(MAIN, 25, 68);
Wait(5);
DisplaySpeechNoBlock(MAIN, "There's nothing to be picked up.", 1);
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, 10, 25);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's another nice day outside.", 1);
}

function hotspot7_b() {
  // script for hotspot7: Interact hotspot

if(ACTION== USE || ACTION== OPEN || ACTION== PUSH || ACTION== PULL) {
  
	FaceLocation(MAIN, 10, 25);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm through messing around with windows.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 10, 25);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function hotspot7_c() {
  // script for hotspot7: Talk to hotspot
  
FaceLocation(MAIN, 10, 25);
Wait(5);
DisplaySpeechNoBlock(MAIN, "There's nobody outside to yell at.", 1);
}

function hotspot8_a() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, 48, 8);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's for writing down phone messages and notes.", 1);
}

function hotspot8_b() {
  // script for hotspot8: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, 48, 8);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I can't think of anything clever enough to write on it.", 1);
}
}

function hotspot8_c() {
  // script for hotspot8: Pick up hotspot
  
FaceLocation(MAIN, 48, 8);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I think it's better off on the wall.", 1);
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, 66, 10);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a telephone.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 66, 10);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't need to call anyone right now.", 1);
}
}

function hotspot9_c() {
  // script for hotspot9: Talk to hotspot
  
FaceLocation(MAIN, 66, 10);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't need to call anyone right now.", 1);
}

function hotspot9_d() {
  // script for hotspot9: Pick up hotspot
  
FaceLocation(MAIN, 66, 10);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't need to talk to anyone on the phone right now.", 1);
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, 46, 114);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I can't get distracted with that right now.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 46, 114);
	Wait(5);
	DisplaySpeech(MAIN, "I can't get distracted with that right now.", 1);
}
}

function hotspot10_c() {
  // script for hotspot10: Pick up hotspot
  
FaceLocation(MAIN, 46, 114);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a little big to be carrying around.", 1);
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, 325, 111);
Wait(5);
DisplaySpeechNoBlock(MAIN, "These couches are great.", 1);
}

function hotspot11_b() {
  // script for hotspot11: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't need to rest these spry legs just yet.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "There's anything under the couch.", 1);
}
}

function hotspot11_c() {
  // script for hotspot11: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I check under the cushions for change all the time.", 1);

}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, 155, 95);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Nothing but a couple magazines on it.", 1);
}

function hotspot13_b() {
  // script for hotspot13: Pick up hotspot
  
FaceLocation(MAIN, 155, 95);
Wait(5);
DisplaySpeechNoBlock(MAIN, "There's nothing to pick up.", 1);
}

function hotspot13_c() {
  // script for hotspot13: Interact hotspot
  
if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 155, 95);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't think I should move it.", 1);
}

else if(ACTION== USE) {

	FaceLocation(MAIN, 155, 95);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's really only useful to set things on while you're watching television", 1);
}

}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "There's nothing on it.", 1);
}

function hotspot15_a() {
  // script for hotspot15: Look at hotspot
  
FaceLocation(MAIN, 140, 53);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Some old family pictures.", 1);
}

function hotspot15_b() {
  // script for hotspot15: Pick up hotspot
  
FaceLocation(MAIN, 140, 53);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't think anyone outside of family and friends needs to see these.", 1);
}


function hotspot17_a() {
  // script for hotspot17: Look at hotspot
  
MoveCharacterBlocking(MAIN, 380, 109, 0);
character[MAIN].loop= 1;
Wait(5);
DisplaySpeech(MAIN, "Oh you rogue, you.");
}

function hotspot17_b() {
  // script for hotspot17: Interact hotspot
  
MoveCharacterBlocking(MAIN, 325, 45, 0);
character[MAIN].loop= 1;
Wait(5);
DisplaySpeechNoBlock(MAIN, "Yep, that's me.", 1);
}

function hotspot17_c() {
  // script for hotspot17: Talk to hotspot
  
MoveCharacterBlocking(MAIN, 325, 45, 0);
character[MAIN].loop= 1;
Wait(5);
DisplaySpeech(MAIN, "Mirror, mirror, on the wall");
DisplaySpeech(MAIN, "Who's the most l33t gamer of them all?");
}

function hotspot17_d() {
  // script for hotspot17: Pick up hotspot
  
FaceLocation(MAIN, 325, 45);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't want to accidentally break it.", 1);
DisplaySpeechNoBlock(MAIN, "I can't afford any more bad luck at the gaming table.", 2);
}

function object1_c() {
  // script for object1: Look at object
  
FaceLocation(MAIN, 109, 32);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a swinging door that leads into the kitchen.", 1);
}

function object1_d() {
  // script for object1: Talk to object
  
FaceLocation(MAIN, 109, 32);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I can just go in the kitchen if I need to talk with someone.", 1);
}

function object1_e() {
  // script for object1: Pick up object
  
}

function object2_a() {
  // script for object2: Look at object
  
FaceLocation(MAIN, 126, 68);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's the doorstop I got from Steve's.", 1);

}

function object2_b() {
  // script for object2: Pick up object

FaceLocation(MAIN, 126, 68);  
Wait(5);
DisplaySpeechNoBlock(MAIN, "What better place for a doorstop than holding a door open?", 1);

}

function object3_b() {
  // script for object3: Look at object
  
FaceLocation(MAIN, 389, 109);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Some sunflower seeds fell on the ground when I pushed the flower.", 1);

}

function object4_b() {
  // script for object4: Look at object
  
FaceLocation(MAIN, 253, 64);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Looks like his pocketknife slipped out of his pants when he stood up.", 1);
}

function region1_a() {
  // script for region1: Player walks onto region
  
DisableRegion(1);
DisableRegion(2);

if(GrandpaIdle== 1) {			// in cutscene

	GrandpaIdle= 0;

	if(IsOverlayValid(GrandpaIdleSpeech)) {
	  
		RemoveOverlay(GrandpaIdleSpeech);
	}
	
	ReleaseCharacterView(GRANDPA);
}

else if(MomIdle== 1) {

	MomIdle= 0;

	if(IsOverlayValid(MomIdleSpeech)) {
	  
		RemoveOverlay(MomIdleSpeech);
	}
	
	ReleaseCharacterView(MOM);
	AnimateCharacter(MOM, 9, 7, 1);			// start vacuuming
}

SetTimer(1, 0);
SetTimer(2, 0);
					
GUIOff(2);
StartCutscene(5);

int counter= 0;

while(counter < 10) {					// workaround so screen scrolls while grandpa looks
  
	SetViewport(GetViewportX()- 3, GetViewportY());
	Wait(1);
	counter++;
}

character[GRANDPA].loop= 2;

while(counter < 10) {					// workaround
  
	SetViewport(GetViewportX()- 3, GetViewportY());
	Wait(1);
	counter++;
}

character[GRANDPA].frame= 1;

while(GetViewportX() > 0) {
		
	SetViewport(GetViewportX()- 3, GetViewportY());
	Wait(1);
}

ReleaseCharacterView(GRANDPA);
SetCharacterView(GRANDPA, 123);
SetCharacterSpeechView(GRANDPA, 124);
character[GRANDPA].loop= 1;
character[GRANDPA].frame= 0;
Wait(30);
DisplaySpeech(GRANDPA, "HEY, BOY!");
SetCharacterView(GRANDPA, 123);
SetCharacterView(MAIN, 63);
SetCharacterSpeechView(MAIN, 64);
Wait(10);
DisplaySpeech(GRANDPA, "I'VE BEEN WAITIN' FOR YOU TO DRAG YOUR TAIL IN HERE!");
SetCharacterView(GRANDPA, 123);
SetCharacterSpeechView(GRANDPA, 11);
Wait(10);
DisplaySpeech(GRANDPA, "NOW, COME OVER HERE AND SIT A SPELL WITH GRAMPS!");
SetCharacterView(GRANDPA, 181);
Wait(10);
ReleaseCharacterView(MAIN);
MoveCharacter(MAIN, 128, 102);
Wait(20);
DisplaySpeechBackground(MAIN, "sigh.");
MoveCharacterBlocking(MAIN, 128, 102, 0);
character[MAIN].loop= 2;
Wait(10);
SetCharacterSpeechView(MAIN, 67);
DisplaySpeech(MAIN, "Listen Grandpa, I can't really sit down right--");
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 2);
ReleaseCharacterView(GRANDPA);
SetCharacterSpeechView(GRANDPA, 11);
Wait(10);
DisplaySpeech(GRANDPA, "--NOPE!");
Wait(10);
SetCharacterView(GRANDPA, 118);
SetCharacterSpeechView(GRANDPA, 119);
Wait(20);
DisplaySpeech(GRANDPA, "CAN'T HERE YA!");
SetCharacterView(GRANDPA, 120);
SetCharacterSpeechView(GRANDPA, 121);
Wait(30);
DisplaySpeech(GRANDPA, "... TOOK MY HEARING AID OUT...");
ReleaseCharacterView(GRANDPA);
SetCharacterSpeechView(GRANDPA, 11);
Wait(10);
DisplaySpeech(GRANDPA, "... CAN'T FIND IT WITHOUT MY CANE!");
Wait(20);
AnimateCharacterEx(GRANDPA, 11, 7, 0, 0, 1);
ReleaseCharacterView(GRANDPA);
Wait(20);
EnableRegion(2);

EndCutscene();
Wait(10);
RunDialog(2);
}

function hotspot18_a() {
  // script for hotspot18: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "There's nothing important in there.", 1);
}

function hotspot18_b() {
  // script for hotspot18: Interact hotspot
  
if(ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to mess up anything in the livingroom.", 1);
}
}

function hotspot19_a() {
  // script for hotspot19: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's just sitting next to the TV.", 1);
}

function hotspot19_b() {
  // script for hotspot19: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't need any plants.", 1);
}



function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's just for decoration.", 1);
}

function hotspot12_b() {
  // script for hotspot12: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to mess up the livingroom", 1);
}
}

function hotspot12_c() {
  // script for hotspot12: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I'd rather just leave it there.", 1);
}

function hotspot5_a() {
  // script for hotspot5: Look at hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's colorful.", 1);
}

function hotspot5_b() {
  // script for hotspot5: Interact hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I walk on it anytime I want.", 1);
}

function hotspot5_c() {
  // script for hotspot5: Pick up hotspot
  
FaceLocation(MAIN, mouse.x + GetViewportX(), mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I know there's not anything under there.", 1);
}

function hotspot16_a() {
  // script for hotspot16: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "These couches are great.", 1);
}

function hotspot16_b() {
  // script for hotspot16: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 325, 111);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't need to rest these spry legs just yet.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 325, 111);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "There's anything under the couch.", 1);
}
}

function hotspot16_c() {
  // script for hotspot16: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I check under the cushions for change all the time.", 1);
}

function region2_a() {
  // script for region2: Player walks onto region

if(GrandpaIdle== 0 && character[GRANDPA].room== 3) {

	ReleaseCharacterView(GRANDPA);
	GrandpaIdleSpeech= Random(2);

	if(GrandpaIdleSpeech== 0) {
	
		GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "YOU'RE BLOCKING THE TUBE, BOY!");
		SetCharacterView(GRANDPA, 116);
		AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);
	}
	
	else if(GrandpaIdleSpeech== 1) {

		GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "DON'T LET THAT CAT IN HERE!");
		SetCharacterView(GRANDPA, 11);
		AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);	
	}
	
	else if(GrandpaIdleSpeech== 2) {

		GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "CAN'T YOU SEE I'M WATCHING TV HERE!");
		SetCharacterView(GRANDPA, 116);
		AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);	
	}
	
	GrandpaIdle= 1;
}

}

function region3_a() {
  // script for region3: Player walks onto region
  
MoveCharacterBlocking(MAIN, 410, 66, 0);
NewRoom(4);
}

function region4_a() {
  // script for region4: Player walks onto region
  

if(character[MOM].room== 3 && GetGlobalInt(12)!= 5) {		// not the first time he walks in room

	if(MomIdle== 0) {
	
		MomIdleSpeech= Random(2);
		
		if(MomIdleSpeech== 0) {
	
			MomIdleSpeech= DisplaySpeechBackground(MOM, "Can't you stay in one place?");
			SetCharacterView(MOM, 5);
			AnimateCharacter(MOM, 9, 5, 1);	
		}

		else if(MomIdleSpeech== 1) {
	
			MomIdleSpeech= DisplaySpeechBackground(MOM, "Try not to make a mess upstairs...");
			SetCharacterView(MOM, 5);
			AnimateCharacter(MOM, 9, 5, 1);	
		}

		else if(MomIdleSpeech== 2) {
	
			MomIdleSpeech= DisplaySpeechBackground(MOM, "Back again?");
			SetCharacterView(MOM, 5);
			AnimateCharacter(MOM, 9, 5, 1);	
		}

		MomIdle= 1;
	}
}
}

$$$!$$$ ROOM room4.crm
$$$!$$$ RS
// text script for room


int Asleep= 1;



function room_a() {
  // script for room: Player enters screen (before fadein)

if(GetGlobalInt(36)== 2) {							// if cutting back from washing machine

	SetCharacterTransparency(MAIN, 0);
	
	if(character[CAT].room== 4) {
	  
		character[CAT].x= 165;
		character[CAT].y= 119;  
		AnimateCharacter(CAT, 4, 10, 1);
		SetCharacterBaseline(CAT, 70);
		SetGlobalInt(6, 0);						// set rufus' state to sleeping on washer
	}
	
	else {
	
	
	}
}

else if(GetGlobalInt(44)== 1) {							// cutting back from rufus in livingroom

	SetCharacterTransparency(MAIN, 0);
	character[MAIN].x= 120;
	character[MAIN].y= 117;
	character[MAIN].loop= 2;
}

else {
  
	if(GetGlobalInt(5)==1) {						// if he came from hallway
	
		if(GetGlobalInt(67)== 0) {					// first time he sees rufus
		
			GUIOff(2);
			StartCutscene(5);
		}

		ReleaseViewport();
		character[MAIN].x= 318;
		character[MAIN].y= 115;
		character[MAIN].loop= 1;
		SetCharacterProperty(MAIN, CHAR_IGNORESCALING, 1);		// so he doesn't start out at 80%
	}
	
	else if(GetGlobalInt(9)== 0) {						// came from backyard
		
		ReleaseViewport();
		character[MAIN].x= 3;
		character[MAIN].y= 119;
		character[MAIN].loop= 2;
	}
	
	if(character[CAT].room== 4) {
	
		ReleaseCharacterView(CAT);
		character[CAT].x= 165;
		character[CAT].y= 119;  
		AnimateCharacter(CAT, 4, 10, 1);
		SetCharacterBaseline(CAT, 70);
		SetGlobalInt(6, 0);						// set rufus' state to sleeping on washer
	}
	
	if(IsObjectOn(0)) {							// if door is closed
	
		DisableHotspot(3);
	}
}
}




function object5_a() {
  // script for object5: Interact object
  
if(ACTION== OPEN) {
	MoveCharacterBlocking(MAIN, 160, 117, 0);
    	character[MAIN].loop= 3;
      Wait(5);
      ObjectOn(6);
      ObjectOff(5);
}

else if(ACTION== USE) {
  	DisplaySpeech(MAIN, "Laundry's not my thing.");
}
}

function object6_a() {
  // script for object6: Interact object
  
if(ACTION== CLOSE) {
	MoveCharacterBlocking(MAIN, 160, 117, 0);
	character[MAIN].loop= 3;
	Wait(5);
	ObjectOn(5);
	ObjectOff(6);
}

}

function object6_b() {
  // script for object6: Look at object
  
if(character[MAIN].inv[18]== 0) {
  	DisplaySpeech(MAIN, "Looks like some change fell out in here.");
}

else {
 	DisplaySpeech(MAIN, "It's empty now.");
}
}

function object6_c() {
  // script for object6: Pick up object

if(character[MAIN].inv[18]== 0) {  				// if character doesn't have the coins
	MoveCharacterBlocking(MAIN, 160, 117, 0);
	character[MAIN].loop= 3;
	AnimateCharacter(MAIN, 6, 10, 0);
	Wait(5);
    	if(character[MAIN].inv[19]== 0) {			// if he already has some change give him the dollar
		AddInventory(18);	
      }
      else {
        	AddInventory(20);
      }
      
	ReleaseCharacterView(MAIN);
	character[MAIN].loop= 3;
}

else {
  	DisplaySpeech(MAIN, "There's nothing in there now.");
}
}

function hotspot2_a() {
  // script for hotspot2: Interact hotspot
  

if(ACTION== USE) {
	MoveCharacterBlocking(MAIN, 275, 118, 0);
	MoveCharacterBlocking(MAIN, 281, 118, 0);
	NewRoom(3);
}
}

function object0_a() {
  // script for object0: Interact object
  

if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 39, 121, 0);
	character[MAIN].loop= 1;
	Wait(5);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(0);
	ObjectOff(0);
	EnableHotspot(3);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	Wait(5);
	ReleaseCharacterView(MAIN);
	MoveCharacterBlocking(MAIN, 32, 121, 0);
	NewRoom(12);
}

else if(ACTION== OPEN) {

	MoveCharacterBlocking(MAIN, 39, 121, 0);
	character[MAIN].loop= 1;
	Wait(5);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(0);
	ObjectOff(0);
	EnableHotspot(3);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 32, 121);
	Wait(5);
	DisplaySpeech(MAIN, "It's already closed.");
}


	}

function object2_b() {
  // script for object2: Pick up object
  
MoveCharacterBlocking(MAIN, 77, 112, 0);
character[MAIN].loop= 3;
Wait(10);
AnimateCharacter(MAIN, 5, 10, 0);
Wait(5);
PlaySound(4);
ObjectOff(4);
AddInventory(13);
ReleaseCharacterView(MAIN);
character[MAIN].loop= 3;
}

function object3_a() {
  // script for object3: Interact object
  
if(ACTION== OPEN) {
	MoveCharacterBlocking(MAIN, 166, 117, 0);
	character[MAIN].loop= 3;
	AnimateCharacter(MAIN, 6, 10, 0);
	Wait(5);
	ObjectOn(4);
	ObjectOff(3);
	ReleaseCharacterView(MAIN);
	character[MAIN].loop= 3;
}

else if(ACTION== USE) {
	DisplaySpeech(MAIN, "I don't want to do the laundry right now.");
}
}

function object4_a() {
  // script for object4: Interact object
  
if(ACTION== CLOSE) {
	MoveCharacterBlocking(MAIN, 166, 117, 0);
	character[MAIN].loop= 3;
	AnimateCharacter(MAIN, 6, 10, 0);
	Wait(5);
	ObjectOn(3);
	ObjectOff(4);
	character[MAIN].loop= 3;
}

}

function object4_b() {
  // script for object4: Look at object
  
character[MAIN].loop= 3;
DisplaySpeech(MAIN, "It looks like some change fell out in there.");
}

function object4_c() {
  // script for object4: Pick up object
  
if(character[MAIN].inv[18]== 0) {
	MoveCharacterBlocking(MAIN, 166, 117, 0);
	character[MAIN].loop= 3;
	AnimateCharacter(MAIN, 6, 10, 0);
	Wait(5);
	if(character[MAIN].inv[19]== 0) {				// if he already has some change give him the dollar
		AddInventory(18);
	}
	else {
		AddInventory(20);
        	SetDialogOption(4, 8, 2);				// allow him to buy hotdog with dialog request
            SetDialogOption(4, 9, 1);
	}
	ReleaseCharacterView(MAIN);
	character[MAIN].loop= 3;
}

else {
	DisplaySpeech(MAIN, "The washing machine is empty now.");
}
}

function object1_a() {
  // script for object1: Pick up object
  
MoveCharacterBlocking(MAIN, 96, 109, 0);
character[MAIN].loop= 3;
Wait(10);

character[MAIN].loop= 7;
character[MAIN].frame= 1;
Wait(15);
PlaySound(4);
ObjectOff(1);
AddInventory(13);
DisableHotspot(5);
character[MAIN].loop= 3;
character[MAIN].frame= 0;
}

function room_b() {
  // script for room: Player enters screen (after fadein)


if(GetGlobalInt(36)== 2) {						// shower cutscene

	Wait(20);
	character[MAIN].loop= 1;
	Wait(5);
	character[MAIN].loop= 0;
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "Impressive.", 1);
	Wait(20);
	SetGlobalInt(36, 3);
	
	GUIOn(2);
	EndCutscene();
}

else if(GetGlobalInt(44)== 1) {						// cutting back from rufus in livingroom

	Wait(40);
	SetGlobalInt(44, 0);						// out of cutscene
	
	GUIOn(2);
	EndCutscene();
}

else {

	if(character[CAT].room== 4) {
	
		PlayAmbientSound(1, 34, 50, 162, 62);
	}
  
	if(GetGlobalInt(5)== 1) {					// came from living room
	
		MoveCharacterBlocking(MAIN, 271, 118, 1);
		MoveCharacter(MAIN, 229, 118);
		SetGlobalInt(5, 7);					// set state to in laundry room
		SetCharacterProperty(MAIN, CHAR_IGNORESCALING, 0);	// so he doesn't start out at 80%
		
		if(GetGlobalInt(67)== 0) {				// first time he comes in

			Wait(10);
			SetMusicMasterVolume(30);
			PlayMusic(9);
			Wait(30);
			DisplaySpeech(MAIN, "There you are, Rufus!");
			Wait(10);
			ReleaseCharacterView(CAT);
			AnimateCharacter(CAT, 8, 5, 1);
			Wait(80);
			DisplaySpeechBackground(CAT, "-snort-");
			Wait(40);
			ReleaseCharacterView(CAT);
			AnimateCharacter(CAT, 4, 10, 1);
			Wait(20);
			DisplaySpeechNoBlock(MAIN, "Always glad to see me!", 1);
			SetGlobalInt(67, 1);				// increment rufus talk to state
			Wait(30);
			SetMusicMasterVolume(90);
			Wait(10);
			
			GUIOn(2);
			EndCutscene();
		}
	}
	
	else if(GetGlobalInt(7)== 0) {					// he came from outside
	
		MoveCharacterBlocking(MAIN, 46, 118, 1);
		MoveCharacter(MAIN, 56, 118);
		SetGlobalInt(5, 7);					// set state to in laundry room
	}
}

if(IsObjectOn(4)) {						// washing machine

	PlayAmbientSound(1, 36, 100, 216, 76);
}
}

function hotspot3_a() {
  // script for hotspot3: Interact hotspot
  
if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 39, 121, 0);
	character[MAIN].loop= 1;
	Wait(5);
	MoveCharacterBlocking(MAIN, 32, 121, 0);
	NewRoom(12);
}

else if(ACTION== CLOSE) {

	MoveCharacterBlocking(MAIN, 39, 121, 0);
	character[MAIN].loop= 1;
	Wait(5);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(1);
	ObjectOn(0);
	DisableHotspot(3);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 32, 121);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}
}



function hotspot5_a() {
  // script for hotspot5: Pick up hotspot
  
MoveCharacterBlocking(MAIN, 96, 109, 0);
character[MAIN].loop= 3;
Wait(10);

character[MAIN].loop= 7;
character[MAIN].frame= 1;
Wait(15);
PlaySound(4);
ObjectOff(1);
AddInventory(13);
DisableHotspot(5);
character[MAIN].loop= 3;
character[MAIN].frame= 0;
}

function hotspot6_a() {
  // script for hotspot6: Interact hotspot
  
if(ACTION== OPEN) {
  
	MoveCharacterBlocking(MAIN, 128, 111, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(15);
	ObjectOn(2);
	
	if(GetGlobalInt(46)== 0) {		// if quarter is not picked up

		ObjectOn(3);
	}
	
	RemoveWalkableArea(3);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}

else if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 174, 113, 0);
	character[MAIN].loop= 3;
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to mess with it.", 1);
}

if(ACTION== CLOSE) {

	if(IsObjectOn(2)) {			// if dryer door is open
  
		MoveCharacterBlocking(MAIN, 234, 119, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		PlaySound(16);
		ObjectOff(2);
		ObjectOff(3);
		RestoreWalkableArea(3);
		Wait(5);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
	}
	
	else {
	
		FaceLocation(MAIN, 161, 79);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "The door is already closed.", 1);
	}
}
}

function object2_a() {
  // script for object2: Interact object
  
if(ACTION== CLOSE) {
  
	MoveCharacterBlocking(MAIN, 234, 119, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(16);
	ObjectOff(2);
	ObjectOff(3);
	RestoreWalkableArea(3);
	Wait(5);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 161, 84);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}

else if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 174, 113, 0);
	character[MAIN].loop= 3;
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to mess with it.", 1);
}
}

function object3_b() {
  // script for object3: Pick up object
  
MoveCharacterBlocking(MAIN, 128, 111, 0);
character[MAIN].loop= 2;
Wait(10);
character[MAIN].loop= 9;
character[MAIN].frame= 1;
Wait(15);
PlaySound(4);
ObjectOff(3);
SetGlobalInt(46, 1);
AddInventory(18);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
}

function hotspot8_a() {
  // script for hotspot8: Interact hotspot
  
if(ACTION== USE) {

	if(GetGlobalInt(3)== 2) {

		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't think I need to mess with it anymore.", 1);  
	}
	
	else {

		MoveCharacterBlocking(MAIN, 224, 115, 0);
		character[MAIN].loop= 3;
		Wait(10);
		GUIOff(2);
		Wait(20);
		SetMouseBounds(100, 25, 220, 92);
		GUIOn(0);
	}
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 212, 79);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Wet clothes aren't interesting.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 212, 79);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function hotspot2_b() {
  // script for hotspot2: Look at hotspot
  
FaceLocation(MAIN, 294, 71);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It leads back into the living room.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, 24, 70);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a nice day out there.", 1);
}

function hotspot5_b() {
  // script for hotspot5: Look at hotspot
  
FaceLocation(MAIN, 109, 47);
Wait(5);
DisplaySpeechNoBlock(MAIN, "An unused wire hangar.", 1);
}

function object1_b() {
  // script for object1: Look at object
  
FaceLocation(MAIN, 109, 47);
Wait(5);
DisplaySpeechNoBlock(MAIN, "An unused wire hangar.", 1);
}


function hotspot6_b() {
  // script for hotspot6: Look at hotspot
  
FaceLocation(MAIN, 161, 79);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's our clothes dryer.", 1);
}

function hotspot6_c() {
  // script for hotspot6: Pick up hotspot
  
FaceLocation(MAIN, 161, 79);
Wait(5);
DisplaySpeechNoBlock(MAIN, "That would require herculean strength.", 1);
}

function hotspot8_b() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, 212, 79);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's our washing machine.", 1);

if(GetGlobalInt(16)== 0) {				// if machine is on

	DisplaySpeechNoBlock(MAIN, "Sounds like it's on.", 2);
}
else {

	DisplaySpeechNoBlock(MAIN, "It's not on.", 2);
}
}


function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, 42, 110);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Looks reliable enough.", 1);
}

function hotspot7_b() {
  // script for hotspot7: Interact hotspot
  
FaceLocation(MAIN, 42, 110);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I'll let Mom handle the ironing.", 1);
}

function hotspot7_c() {
  // script for hotspot7: Pick up hotspot
  
FaceLocation(MAIN, 42, 110);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't want to lug that around with me.", 1);
}

function hotspot4_a() {
  // script for hotspot4: Look at hotspot
  
FaceLocation(MAIN, 100, 130);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's empty.", 1);
}

function hotspot4_b() {
  // script for hotspot4: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, 100, 130);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm not interesting in doing laundry.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 100, 130);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's fine where it is.", 1);
}
}

function hotspot4_c() {
  // script for hotspot4: Pick up hotspot
  
FaceLocation(MAIN, 100, 130);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't want to do laundry right now.", 1);
}

function hotspot1_a() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, 70, 57);
Wait(5);
DisplaySpeechNoBlock(MAIN, "None of MY clothes came through here.", 1);
}

function hotspot1_b() {
  // script for hotspot1: Use inventory on hotspot
  
FaceLocation(MAIN, 70, 57);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I think my current outfit is doing fine.", 1);
}

function hotspot1_c() {
  // script for hotspot1: Pick up hotspot
  
FaceLocation(MAIN, 70, 57);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I can take them upstairs later.", 2);
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
MoveCharacterBlocking(MAIN, 261, 112, 0);
character[MAIN].loop= 3;
Wait(5);
MoveCharacterBlocking(MAIN, 261, 104, 1);
Wait(30);
MoveCharacterBlocking(MAIN, 261, 112, 1);
DisplaySpeechNoBlock(MAIN, "Looks like it just got emptied today.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 257, 81);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't have anything I'd want to throw away.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 257, 81);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Why make a mess?", 1);
}
}

function hotspot9_c() {
  // script for hotspot9: Pick up hotspot
  
MoveCharacterBlocking(MAIN, 261, 112, 0);
character[MAIN].loop= 3;
Wait(5);
MoveCharacterBlocking(MAIN, 261, 104, 1);
Wait(10);
MoveCharacterBlocking(MAIN, 261, 112, 1);
DisplaySpeechNoBlock(MAIN, "There's nothing in there.", 1);
}

function object0_b() {
  // script for object0: Look at object
  
FaceLocation(MAIN, 24, 69);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It leads outside.", 1);
}

function hotspot5_c() {
  // script for hotspot5: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 110, 47);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't have an immediate use for it.", 1);
}
}

function object1_c() {
  // script for object1: Interact object
  
if(ACTION== USE) {

	FaceLocation(MAIN, 110, 47);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't have an immediate use for it.", 1);
}
}

function object2_c() {
  // script for object2: Look at object
  
FaceLocation(MAIN, 161, 84);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Sure is dark in there.", 1);
if(IsObjectOn(3)) {

	DisplaySpeechNoBlock(MAIN, "It looks like a coin fell out in there.", 2);
}
}

function object2_d() {
  // script for object2: Pick up object
 
if(IsObjectOn(3)) {

	MoveCharacterBlocking(MAIN, 128, 111, 0);
	character[MAIN].loop= 2;
	Wait(10);
	DisplaySpeech(MAIN, "Looks like a coin fell out in there.");
	Wait(10);
	character[MAIN].loop= 9;
	character[MAIN].frame= 1;
	Wait(15);
	PlaySound(4);
	ObjectOff(3);
	SetGlobalInt(46, 1);				// set state to picked up
	AddInventory(18);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
} 

else {

	FaceLocation(MAIN, 160, 75);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's empty.", 1);
}
}

function object3_c() {
  // script for object3: Look at object
  
FaceLocation(MAIN, 151, 191);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a coin.", 1);
DisplaySpeechNoBlock(MAIN, "It must have fallen out of someone's clothes.", 2);
}

function room_c() {
  // script for room: Repeatedly execute
  
CheckSpeech();
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Clothes get hung up on there after they're dry.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't need to hang anything up.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't need to knock it over.", 1);
}
}

function hotspot10_c() {
  // script for hotspot10: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I definitely don't need the whole rack.", 1);
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't have much experience with the stuff.", 1);
}

function hotspot11_b() {
  // script for hotspot11: Interact hotspot
  
if(ACTION== USE) {
	
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't need to do the laundry.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "That would just make a mess.", 1);
}
}

function hotspot11_c() {
  // script for hotspot11: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It belongs in the laundry room.", 1);
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I guess it doesn't get used much.", 1);
}

function hotspot12_b() {
  // script for hotspot12: Interact hotspot
  
if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't even know how to use bleach.", 1);
}
}

function hotspot12_c() {
  // script for hotspot12: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It would be more trouble than it's worth.", 1);
}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "There's nothing on there.", 1);
}

function hotspot13_b() {
  // script for hotspot13: Interact hotspot
  
if(ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "There aren't any drawers.", 1);
}
}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Looks like they run upstairs and into the kitchen from here.", 1);
}

function hotspot14_b() {
  // script for hotspot14: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "They look like they're already working.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "They look way too strong to bend.", 1);
}
}

function hotspot14_c() {
  // script for hotspot14: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "They're securely fastened to the wall.", 1);
}

function object4_d() {
  // script for object4: Interact object
  
if(ACTION== USE) {

	if(GetGlobalInt(3)!= 2) {
  
		MoveCharacterBlocking(MAIN, 224, 115, 0);
		character[MAIN].loop= 3;
		SetCharacterIdle(MAIN, -1, 1);
		Wait(10);
		GUIOff(2);
		Wait(20);
		GUIOn(0);
	}
	
	else {
	
		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "I don't think I need to mess with it anymore.", 1);
	}
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 212, 79);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "Wet clothes aren't interesting.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 212, 79);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function object4_e() {
  // script for object4: Look at object
  
FaceLocation(MAIN, 212, 79);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's our washing machine.", 1);

if(GetGlobalInt(16)== 0) {				// if machine is on

	DisplaySpeechNoBlock(MAIN, "Sounds like it's on.", 2);
}
else {

	DisplaySpeechNoBlock(MAIN, "It's not on.", 2);
}
}

function region1_a() {
  // script for region1: Player walks onto region
  
  
if(character[CAT].room== 4 && GetGlobalInt(6)== 0) {			// if rufus is on the machine

	ReleaseCharacterView(CAT);
	AnimateCharacter(CAT, 8, 5, 1);
		
	if(IsObjectOn(4)== 0) {				// if washing machine isn't on, turn off snoring when close
	  
		StopAmbientSound(1);
	}
}
}

function region2_a() {
  // script for region2: Player walks onto region
  
if(character[CAT].room== 4 && GetGlobalInt(6)== 0) {			// if rufus is on machine

	ReleaseCharacterView(CAT);
	AnimateCharacter(CAT, 4, 10, 1);
	
	if(IsObjectOn(4)== 0) {				// washing machine off, restart rufus snoring
	  
		PlayAmbientSound(1, 34, 50, 162, 62);
	}
}
}

$$$!$$$ ROOM room5.crm
$$$!$$$ RS
// text script for room

int counter= 1;
int IdlePlaying= 0;				// flag to check to see if animation is supposed to be running
int IdleCounter= 0;				// keeps track of different idle animations

/* REPEATEDLY EXECUTE Needs to be declared first to use in other functions */


function room_c() {
  // script for room: Repeatedly execute

CheckSpeech();

if(IdlePlaying== 1 && character[KNUCKLES].animating== 0) {

	character[KNUCKLES].loop= 0;
	character[KNUCKLES].frame= 0;
	IdlePlaying= 0;
}

if(IsTimerExpired(1)) {

	if(IdleCounter== 0) {

		MoveCharacter(KNUCKLES, 272, 48);
		MoveCharacterPath(KNUCKLES, 258, 42);
		MoveCharacterPath(KNUCKLES, 272, 48);
		MoveCharacterPath(KNUCKLES, 264, 45);
		SetTimer(1, 500);
		IdleCounter++;
	}
	
	else if(IdleCounter== 1) {
	
		MoveCharacter(KNUCKLES, 257, 42);
		MoveCharacterPath(KNUCKLES, 258, 37);
		MoveCharacterPath(KNUCKLES, 278, 36);
		PlaySound(11);
		DisplaySpeechBackground(KNUCKLES, "Squuaaaaaawk.");
		MoveCharacterPath(KNUCKLES, 285, 39);
		MoveCharacterPath(KNUCKLES, 264, 45);
		SetTimer(1, 500);
		IdleCounter++;
	}
	
	else if(IdleCounter== 2) {
	
		PlaySound(11);
		DisplaySpeechBackground(KNUCKLES, "Squuaaaaaawk.");
		SetTimer(1, 300);
		IdleCounter= 0;
	}
}
}

/*****************************************************************************/



function hotspot3_a() {
  // script for hotspot3: Interact with hotspot

if(ACTION== USE || ACTION== OPEN) {
  
	FaceLocation(MAIN, 333, 61);
	Wait(5);  
	DisplaySpeechNoBlock(MAIN, "I can't go in there, that's my Mom's room.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 333, 61);
	Wait(5);  
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function hotspot4_a() {
  // script for hotspot4: Interact with hotspot

if(ACTION== USE) {  

	MoveCharacterBlocking(MAIN, 220, 102, 0);
	character[MAIN].loop= 3;
	Wait(5);
	MoveCharacterBlocking(MAIN, 218, 99, 1);
	MoveCharacterBlocking(MAIN, 218, 95, 1);
	NewRoom(8);
}

else if(ACTION== CLOSE) {
  
	MoveCharacterBlocking(MAIN, 220, 102, 0);
	character[MAIN].loop= 3;
	Wait(5);
	character[MAIN].loop= 7;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(1);	
	ObjectOn(1);
	DisableHotspot(4);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
}

else if(ACTION== OPEN) {
  
	FaceLocation(MAIN, 220, 102);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}
}

function hotspot5_a() {
  // script for hotspot5: Interact with hotspot

if(ACTION== USE) {  

	MoveCharacterBlocking(MAIN, 50, 111, 0);
	MoveCharacterBlocking(MAIN, 25, 111, 1);
	StopMusic();
	NewRoom(6);
}

else if(ACTION== OPEN) {
	character[MAIN].loop= 1;
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}

else if(ACTION== CLOSE) {
  
	MoveCharacterBlocking(MAIN, 64, 111, 0);
	Wait(5);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(1);
	ObjectOn(0);
	DisableHotspot(5);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}
}

function hotspot1_a() {
  // script for hotspot1: Interact with hotspot
  
if(ACTION== USE) {

	if(GetGlobalInt(1)== 0) {			// if mom is upstairs vacuuming
	
		StartCutscene(5);
		
		MoveCharacter(MAIN, 92, 112);
		
		while(GetViewportX() > 0) {
		
			SetViewport(GetViewportX() - 2, 0);
			Wait(1);
		}
		
		MoveCharacterBlocking(MAIN, 92, 112, 0);
		Wait(20);
		SetCharacterView(MAIN, 63);
		Wait(30);
		SetGlobalInt(57, 1);			// entering cutscene to grandpa downstairs
		SetScreenTransition(TRANSITION_BOXOUT);
		character[MAIN].x= -100;
		NewRoom(3);
	}
	
	else {
		MoveCharacterBlocking(MAIN, 92, 112, 0);
		MoveCharacterBlocking(MAIN, 97, 105, 1);
		character[MAIN].loop=3;
		Wait(5);
		SetWalkBehindBase(4, 200);
		character[MAIN].frame= 1;
		character[MAIN].y+=4;
		character[MAIN].x+=3;
		Wait(5);
		character[MAIN].y+= 4;
		character[MAIN].x+= 3;
		Wait(5);
		character[MAIN].frame= 2;
		character[MAIN].y+=4;
		character[MAIN].x+=3;
		Wait(5);
		character[MAIN].y+= 4;
		character[MAIN].x+= 3;
		Wait(5);
		character[MAIN].frame= 1;
		character[MAIN].y+=4;
		character[MAIN].x+=3;
		Wait(5);
		character[MAIN].y+=4;
		character[MAIN].x+=3;
		Wait(5);
		NewRoom(3);
	}
}


}



function room_a() {
  // script for room: Player enters screen (before fadein)

RemoveWalkableArea(5);								// only used for knuckles chasing jackson

if(GetGlobalInt(36)== 1) {							// if talking to brother in shower

	SetCharacterTransparency(MAIN, 0);
	character[MAIN].x= 72;
	character[MAIN].y= 111;
}

else if(GetGlobalInt(49)== 1) {							// cutscene mom putting knuckles away

	character[MOM].x= 203;
	character[MOM].y= 120;
	character[MOM].loop= 1;
	
	character[MAIN].x= 128;
	character[MAIN].y= 119;
	character[MAIN].loop= 2;
	
	character[KNUCKLES].x= 272;						// place knuckles
	character[KNUCKLES].y= 48;
	character[KNUCKLES].loop= 0;
	SetCharacterIdle(KNUCKLES, 21, 5);
	SetTimer(1, 500);
	ObjectOn(3);
	ObjectOff(4);
	EnableHotspot(6);
	DisableHotspot(8);
	SetWalkBehindBase(4, 102);
	
	ObjectOn(2);
	ObjectOff(5);
}

else if(GetGlobalInt(57)== 1) {						// cutting back from grandpa

	SetScreenTransition(TRANSITION_CROSSFADE);			// reset screen transition type

	character[MAIN].x= 92;
	character[MAIN].y= 112;
	character[MAIN].loop= 1;
	
	character[MOM].x= 203;
	character[MOM].y= 120;
	AnimateCharacter(MOM, 9, 7, 1);
	RemoveWalkableArea(4);						// walk around for Mom
}
  
else {
  
	if(GetGlobalInt(5)== 0) {						// if he's coming from other hallway
	
		character[MAIN].x= 345;
		character[MAIN].y= 180;
		character[MAIN].loop= 3;
		
		if(GetGlobalInt(61)== 0) {					// if Mom's talk to state is 0 -- cutscene

			GUIOff(2);
			GUIOn(4);
			StartCutscene(5);
		}
	}
	
	else if(GetGlobalInt(5)== 2) {						// see if he's walking in from bathroom
	
		character[MAIN].x= 34;
		character[MAIN].y= 112;
		character[MAIN].loop= 2;
	}	
	
	else if(GetGlobalInt(5)== 3) {						// see if he's walking in from guest room
	
		character[MAIN].x= 212;
		character[MAIN].y= 97;
		character[MAIN].loop= 0;
		SetWalkBehindBase(4, 102);
		ObjectOff(1);
		EnableHotspot(4);
	}
	
	else if(GetGlobalInt(5)== 1) {						// from living room
	
		character[MAIN].x= 121;
		character[MAIN].y= 126;
		character[MAIN].loop= 0;
		SetWalkBehindBase(4, 200);
	}
	
	
	if(GetGlobalInt(1)== 0) {						// mom vacuuming in beginning
	
		character[MOM].x= 203;
		character[MOM].y= 120;
		AnimateCharacter(MOM, 9, 7, 1);
		RemoveWalkableArea(4);						// walk around for Mom
	}
	
	else if(GetGlobalInt(1)== 2) {						// mom cleaning up after knuckles
	
		character[MOM].room= 5;
		character[MOM].x= 203;
		character[MOM].y= 120;
		AnimateCharacter(MOM, 9, 7, 1);
		RemoveWalkableArea(4);
	}
	
	else {									// mom not in room
	
		RestoreWalkableArea(4);						// so you won't walk around her spot
		ObjectOff(0);							// make sure vacuum is off
	}
	
	if(GetGlobalInt(3)== 1) {						// if brother is in shower
		
		ObjectOn(0);
		character[THURSTON].x= 29;
		character[THURSTON].y= 84;
	}
		
	else if(GetGlobalInt(3)== 2) {						// brother out of shower
		
		ObjectOff(0);
	}
	
	if(IsObjectOn(3)== 1) {							// birdcage door closed
	
		EnableHotspot(6);						// fixup hotspots
		DisableHotspot(8);
	}
	
	else {									// birdcage door is open
	
		DisableHotspot(6);
		EnableHotspot(8);
	}
	
	if(IsObjectOn(1)) {							// guestroom door hotspots
	
		DisableHotspot(4);						
	}
	
	else {
	
		EnableHotspot(4);
	}
	
	if(IsObjectOn(0)) {
	
		DisableHotspot(5);
	}
	
	else {
	
		EnableHotspot(5);
	}
	
	if(GetGlobalInt(43)== 1 || GetGlobalInt(43)== 2) {
	  
		AnimateCharacter(KNUCKLES, 4, 5, 1);
	}

	else {
	  
		character[KNUCKLES].x= 272;						// place knuckles
		character[KNUCKLES].y= 48;
		character[KNUCKLES].loop= 0;
		SetCharacterIdle(KNUCKLES, 21, 5);
		SetTimer(1, 500);
		ObjectOff(5);
	}
}
}

function object1_a() {
  // script for object1: Interact with object
  
if(ACTION== USE) {  

	MoveCharacterBlocking(MAIN, 220, 102, 0);
	character[MAIN].loop= 3;
	Wait(10);
	
	if(character[MOM].room== 5 && GetGlobalInt(1)== 0) {
	
		character[MAIN].loop= 7;
		character[MAIN].frame= 2;
		Wait(10);
		GUIOff(2);
		StartCutscene(5);
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		
		StopAmbientSound(1);
		PlaySound(38);
		character[MAIN].loop= 3;
		character[MAIN].frame= 0;
		Wait(5);
		ReleaseCharacterView(MOM);
		character[MOM].loop= 6;
		ObjectOn(2);
		Wait(10);
		character[MOM].loop= 2;
		Wait(10);
		character[MOM].loop= 3;
		Wait(10);
		DisplaySpeechBackground(MOM, "Grandma and Grandpa are downstairs Jackson.");
		SetCharacterView(MOM, 5);
		AnimateCharacter(MOM, 3, 5, 1);
		Wait(40);
		MoveCharacterBlocking(MAIN, 292, 118, 0);
		character[MAIN].loop= 1;
		character[MOM].loop= 2;
		Wait(10);
		DisplaySpeech(MOM, "You don't need anything in there.");
		Wait(10);
		ReleaseCharacterView(MOM);
		character[MOM].loop= 6;
		Wait(10);
		PlayAmbientSound(1, 2, 70, 244, 102);	
		Wait(5);
		ObjectOff(2);
		AnimateCharacter(MOM, 9, 7, 1);
		DisplaySpeechNoBlock(MAIN, "Rats.", 1);			
		Wait(30);
		SetMusicMasterVolume(90);
		Wait(10);
		
		GUIOn(2);
		EndCutscene();
	}
	
	else {
		character[MAIN].loop= 7;
		character[MAIN].frame= 2;
		Wait(5);
		PlaySound(0);
		ObjectOff(1);
		EnableHotspot(4);
		character[MAIN].loop= 3;
		character[MAIN].frame= 0;
		Wait(5);
		MoveCharacterBlocking(MAIN, 218, 95, 1);
		NewRoom(8);
    	}
}

else if(ACTION== OPEN) {
  
	MoveCharacterBlocking(MAIN, 220, 102, 0);
	
	if(character[MOM].room== 5 && GetGlobalInt(1)== 0) {		// if she is vacuuming upstairs the first time
	
		character[MAIN].loop= 7;
		character[MAIN].loop= 2;
		Wait(10);
		GUIOff(2);
		StartCutscene(5);
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		
		StopAmbientSound(1);
		PlaySound(38);
		character[MAIN].loop= 3;
		character[MAIN].frame= 0;
		Wait(5);
		ReleaseCharacterView(MOM);
		character[MOM].loop= 6;
		ObjectOn(2);
		Wait(10);
		character[MOM].loop= 2;
		Wait(10);
		character[MOM].loop= 3;
		Wait(10);
		DisplaySpeechBackground(MOM, "Grandma and Grandpa are downstairs Jackson.");
		SetCharacterView(MOM, 5);
		AnimateCharacter(MOM, 3, 5, 1);
		Wait(40);
		MoveCharacterBlocking(MAIN, 292, 118, 0);
		character[MAIN].loop= 1;
		character[MOM].loop= 2;
		Wait(10);
		DisplaySpeech(MOM, "You don't need anything in there.");
		Wait(10);
		ReleaseCharacterView(MOM);
		character[MOM].loop= 6;
		Wait(10);
		PlayAmbientSound(1, 2, 70, 244, 102);	
		Wait(5);
		ObjectOff(2);
		AnimateCharacter(MOM, 9, 7, 1);
		DisplaySpeechNoBlock(MAIN, "Rats.", 1);			
		Wait(30);
		SetMusicMasterVolume(90);
		Wait(10);
		
		GUIOn(2);
		EndCutscene();
	}
	else {
		Wait(5);
		character[MAIN].loop= 7;
		character[MAIN].frame= 2;
		Wait(5);
		PlaySound(0);
		ObjectOff(1);
		EnableHotspot(4);
		character[MAIN].loop= 3;
		character[MAIN].frame= 0;
	}
}

else if(ACTION== CLOSE) {
  
	FaceLocation(MAIN, 220, 102);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function object3_a() {
  // script for object3: Interact with object
  
if(ACTION== USE || ACTION== OPEN) {
  	MoveCharacterBlocking(MAIN, 345, 107, 0);
      FaceLocation(MAIN, 0, 72);
      Wait(10);
      SetCharacterView(MAIN, 2);
      AnimateCharacter(MAIN, 5, 10, 0);
      PlaySound(0);
      Wait(10);
      ObjectOn(4);
      ObjectOff(3);
      ReleaseCharacterView(MAIN);
      character[MAIN].loop= 1;
      Wait(10);
	NewRoomEx(8, 50, 122);
    	SetGlobalInt(5, 3);
}
}

function object4_a() {
  // script for object4: Interact with object
  
if(ACTION== USE) {
  	MoveCharacterBlocking(MAIN, 317, 97, 0);
      FaceLocation(MAIN, 0, 72);
	NewRoomEx(8, 50, 122);
    	SetGlobalInt(5, 3);
}

else if(ACTION== OPEN) {
  	DisplaySpeech(MAIN, "It's already open.");
}

else if(ACTION== CLOSE) {
  	MoveCharacterBlocking(MAIN, 345, 107, 0);
      FaceLocation(MAIN, 0, 72);
      Wait(10);
      SetCharacterView(MAIN, 2);
      AnimateCharacter(MAIN, 5, 10, 0);
      PlaySound(1);
      Wait(10);
      ObjectOn(3);
      ObjectOff(4);
      ReleaseCharacterView(MAIN);
      character[MAIN].loop= 1;
}

}

function object5_a() {
  // script for object5: Interact with object
  
if(ACTION== USE || ACTION== OPEN) {
	DisplaySpeech(MAIN, "I can't go in there, that's my parents room.");
}
}

function room_b() {
  // script for room: Player enters screen (after fadein)


if(GetGlobalInt(36)== 1) {						// cutting back from shower

	Wait(40);
	PlayAmbientSound(1, 32, 70, 32, 68);
	DisplaySpeechNoBlock(MAIN, "Dang.", 1);
	Wait(20);
	SetGlobalInt(36, 0);
	
	GUIOn(2);
	EndCutscene();
}

else if(GetGlobalInt(49)== 1) {							// cutscene mom putting knuckles away

	Wait(40);
	DisplaySpeech(MOM, "... see, it's not that hard to get him back in his cage!");
	Wait(10);
	character[MOM].loop= 0;
	Wait(5);
	character[MOM].loop= 2;
	Wait(10);
	SetCharacterView(MOM, 87);
	SetCharacterSpeechView(MOM, 86);
	DisplaySpeech(MOM, "It takes more time for me to vacuum up the birdseed that he spills...");
	Wait(20);
	ReleaseCharacterView(MOM);
	SetCharacterSpeechView(MOM, 5);
	Wait(10);
	character[MOM].loop= 6;
	character[MOM].frame= 0;
	Wait(10);
	ObjectOff(2);
	PlayAmbientSound(1, 2, 100, 230, 133);
	AnimateCharacter(MOM, 9, 7, 1);			// start vacuuming
	SetGlobalInt(1, 2);				// set state to upstairs cleaning after knuckles
	SetGlobalInt(49, 2);				// no longer in cutscene
	SetGlobalInt(43, 0);				// knuckles back in his cage
	SetGlobalInt(5, 6);				// set state to in hallway
	SetScreenTransition(TRANSITION_CROSSFADE);
	Wait(20);
	
	GUIOn(2);
	EndCutscene();
}

else if(GetGlobalInt(57)== 1) {

	Wait(20);
	SetCharacterView(MAIN, 74);
	SetCharacterSpeechView(MAIN, 67);
	Wait(20);
	DisplaySpeech(MAIN, "... there has to be a way out of this without going down there.", 1);
	Wait(20);
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	SetGlobalInt(57, 0);
	
	GUIOn(2);
	EndCutscene();
}

else {
	
	if(GetGlobalInt(3)== 1) {					// thurston in shower
	
		PlayAmbientSound(1, 32, 70, 32, 68);
	}

	if(GetGlobalInt(1)== 0 || GetGlobalInt(1)== 2) {		// if mom is upstairs vacuuming
	
		PlayAmbientSound(1, 2, 70, 244, 102);
	}
	
	if(GetGlobalInt(5)== 0) {					// from other hallway
	
		MoveCharacterBlocking(MAIN, 332, 135, 1);
		MoveCharacter(MAIN, 293, 121);
		SetGlobalInt(5, 6);
		
		if(GetGlobalInt(61)== 0) {				// if Mom's talk to state is 0 -- cutscene
		
			MoveCharacterBlocking(MAIN, 292, 118, 0);
			character[MAIN].loop= 1;
			Wait(30);
			SetMusicMasterVolume(30);
			PlaySound(38);
			StopAmbientSound(1);	
			Wait(20);
			ReleaseCharacterView(MOM);
			character[MOM].loop= 6;
			character[MOM].frame= 0;
			ObjectOn(2);
			Wait(10);
			character[MOM].loop= 2;
			SetCharacterView(MOM, 84);			// happy
			SetCharacterSpeechView(MOM, 86);
			Wait(30);
			DisplaySpeech(MOM, "... on your way to the shower, I see!");
			SetCharacterSpeechView(MOM, 5);
			Wait(20);
			DisplaySpeechNoBlock(MAIN, "This isn't amusing.", 1);
			Wait(20);
			ReleaseCharacterView(MAIN);
			MoveCharacter(MAIN, 129, 119);
			Wait(10);
			ReleaseCharacterView(MOM);
			character[MOM].loop= 6;
			character[MOM].frame= 0;
			Wait(10);
			ObjectOff(2);
			PlayAmbientSound(1, 2, 100, 230, 133);
			AnimateCharacter(MOM, 9, 7, 1);			// start vacuuming
			Wait(20);
			MoveCharacterBlocking(MAIN, 129, 117, 0);
			character[MAIN].loop= 1;
			SetGlobalInt(61, 1);				// don't see cutscene again.
			Wait(10);
			SetMusicMasterVolume(90);
			Wait(30);
			
			GUIOn(2);
			GUIOff(4);
			EnableInterface();
			EndCutscene();
		}
	}
	
	else if(GetGlobalInt(5)== 1) {					// from livingroom
	
		character[MAIN].frame= 1;
		character[MAIN].x-= 4;
		character[MAIN].y-= 3;
		Wait(5);
		character[MAIN].x-= 4;
		character[MAIN].y-= 3;
		Wait(5);
		character[MAIN].frame= 2;
		character[MAIN].x-= 4;
		character[MAIN].y-= 3;
		Wait(5);
		character[MAIN].x-= 4;
		character[MAIN].y-= 3;
		Wait(5);
		character[MAIN].frame= 1;
		character[MAIN].x-= 4;
		character[MAIN].y-= 3;
		SetWalkBehindBase(4, 102);
		MoveCharacterBlocking(MAIN, 91, 113, 1);
		MoveCharacter(MAIN, 102, 119);
		SetGlobalInt(5, 6);					// set state to in main hallway
	}
	  
	else if(GetGlobalInt(5)== 2) {					// see if he's walking in from bathroom
	
		MoveCharacterBlocking(MAIN, 45, 117, 1);
		MoveCharacter(MAIN, 58, 117);
		SetGlobalInt(5, 6);					// set state to in main hallway
	}
	
	else if(GetGlobalInt(5)== 3) {					// see if he's walking in from guest room
		
		MoveCharacterBlocking(MAIN, 209, 102, 1);
		MoveCharacter(MAIN, 198, 114);
		SetGlobalInt(5, 6);					// set state to in main hallway
	}
	
	if(GetGlobalInt(1)== 2) {					// mom cleaning up after knuckles
	
	}
	
	if(GetGlobalInt(43)== 1 || GetGlobalInt(43)== 2) {		// knuckles is out of the cage
	
		Wait(30);
		PlayMusic(7);
		Wait(30);
		GUIOff(2);
		StartCutscene(5);
		Wait(30);
		
		PlaySound(11);
		DisplaySpeech(KNUCKLES, "Squaaaaaaaaaawwwwwwwk!");
		Wait(10);
		SetCharacterSpeed(KNUCKLES, 20);
		ChangeCharacterView(KNUCKLES, 31);
		RestoreWalkableArea(5);
		MoveCharacterBlocking(KNUCKLES, 203, 36, 1);
		FollowCharacterEx(KNUCKLES, MAIN, 0, 0);
		Wait(20);
		DisplaySpeechBackground(MAIN, "Aaaack!");
		MoveCharacterBlocking(MAIN, 92, 112, 0);
		MoveCharacterBlocking(MAIN, 97, 105, 1);
		character[MAIN].loop=3;
		Wait(5);
		SetWalkBehindBase(4, 200);
		character[MAIN].frame= 1;
		character[MAIN].y+=4;
		character[MAIN].x+=3;
		Wait(5);
		character[MAIN].y+= 4;
		character[MAIN].x+= 3;
		Wait(5);
		character[MAIN].frame= 2;
		character[MAIN].y+=4;
		character[MAIN].x+=3;
		Wait(5);
		character[MAIN].y+= 4;
		character[MAIN].x+= 3;
		Wait(5);
		character[MAIN].frame= 1;
		character[MAIN].y+=4;
		character[MAIN].x+=3;
		Wait(5);
		character[MAIN].y+=4;
		character[MAIN].x+=3;
		Wait(5);
		character[MAIN].y+=4;
		character[MAIN].x+=3;
		Wait(5);
		character[MAIN].y+=4;
		character[MAIN].x+=3;
		
		SetCharacterTransparency(MAIN, 100);
		Wait(20);
		FollowCharacter(KNUCKLES, -1);
		MoveCharacterBlocking(KNUCKLES, 203, 36, 1);
		MoveCharacterBlocking(KNUCKLES, 237, 112, 1);
		SetCharacterSpeed(KNUCKLES, 5);
		ChangeCharacterView(KNUCKLES, 19);
		RemoveWalkableArea(5);
		Wait(40);
		PlaySound(11);
		DisplaySpeech(KNUCKLES, "... squawk.");
		Wait(20);
		AnimateCharacter(KNUCKLES, 4, 5, 1);
		Wait(80);
		SetGlobalInt(43, 2);					// set state to still eating
		
		NewRoom(3);
	}
	
	else {
	
		MoveCharacter(KNUCKLES, 257, 42);
		MoveCharacterPath(KNUCKLES, 258, 37);
		MoveCharacterPath(KNUCKLES, 278, 36);
		MoveCharacterPath(KNUCKLES, 285, 39);
		MoveCharacterPath(KNUCKLES, 264, 45);
	}
}

}



function hotspot7_b() {
  // script for hotspot7: Interact hotspot
  
if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 293, 121, 0);
	MoveCharacterBlocking(MAIN, 347, 155, 1);
	MoveCharacterBlocking(MAIN, 347, 170, 1);

	NewRoom(11);
}
}

function object0_a() {
  // script for object0: Interact object


if(GetGlobalInt(3)== 1) {					// if brother is in shower
	
	MoveCharacterBlocking(MAIN, 72, 111, 0);
	character[MAIN].loop= 1;
	Wait(20);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(40);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(20);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	Wait(10);
	DisplaySpeech(MAIN, "It's locked.");
	Wait(40);
	DisplaySpeech(MAIN, "THURSTON?");
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(20);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	Wait(10);
	DisplaySpeech(MAIN, "ARE YOU IN THERE?");
	Wait(60);
	SetGlobalInt(36, 1);						// set cut scene flag
	SetCharacterTransparency(MAIN, 100);
	NewRoom(6);
}


else { 									// normal interactions
	if(ACTION== USE) {  
	
		MoveCharacterBlocking(MAIN, 60, 111, 0);
		character[MAIN].loop= 1;
		Wait(5);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(5);
		PlaySound(0);
		ObjectOff(0);
		EnableHotspot(5);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
		Wait(5);
		MoveCharacterBlocking(MAIN, 50, 111, 1);
		StopMusic();
		NewRoom(6);
	}
	
	else if(ACTION== OPEN) {
	
		MoveCharacterBlocking(MAIN, 64, 111, 0);
		character[MAIN].loop= 1;
		Wait(5);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(5);
		PlaySound(0);
		ObjectOff(0);
		EnableHotspot(5);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
	}
	
	else if(ACTION== CLOSE) {
	
		FaceLocation(MAIN, 60, 111);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
	}
}
}

function object3_b() {
  // script for object3: Interact object
  
if(ACTION== OPEN || ACTION== USE) { 

	MoveCharacterBlocking(MAIN, 250, 109, 0);
	character[MAIN].loop= 3;
	Wait(5);
	character[MAIN].loop= 7;
	character[MAIN].frame= 1;
	Wait(10);
	PlaySound(17);
	ObjectOff(3);
	DisableHotspot(6);
	EnableHotspot(8);
	ObjectOn(4);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
	Wait(10);
	MoveCharacterBlocking(MAIN, 302, 113, 0);
	character[MAIN].loop= 0;
	Wait(5);
	character[MAIN].loop= 1;
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He usually just stays around his cage.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 262, 109);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 262, 109);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to ruin the cage.", 1);
}
}

function object4_b() {
  // script for object4: Interact object

if(ACTION== CLOSE || ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 262, 109, 0);
	character[MAIN].loop= 3;
	Wait(5);
	character[MAIN].loop= 7;
	character[MAIN].frame= 1;
	Wait(10);
	PlaySound(18);
	ObjectOff(4);
	DisableHotspot(8);
	EnableHotspot(6);
	ObjectOn(3);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 262, 109);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 262, 109);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to ruin the cage.", 1);
}
}

function hotspot6_a() {
  // script for hotspot6: Interact hotspot
  
if(ACTION== OPEN || ACTION== USE) { 

	MoveCharacterBlocking(MAIN, 262, 109, 0);
	character[MAIN].loop= 3;
	Wait(5);
	character[MAIN].loop= 7;
	character[MAIN].frame= 1;
	Wait(10);
	PlaySound(17);
	ObjectOff(3);
	DisableHotspot(6);
	EnableHotspot(8);
	ObjectOn(4);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
	Wait(10);
	MoveCharacterBlocking(MAIN, 302, 113, 0);
	character[MAIN].loop= 0;
	Wait(5);
	character[MAIN].loop= 1;
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He usually just stays around his cage.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 262, 109);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 262, 109);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to ruin the cage.", 1);
}
}

function hotspot8_a() {
  // script for hotspot8: Interact hotspot
  
if(ACTION== CLOSE || ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 262, 109, 0);
	character[MAIN].loop= 3;
	Wait(5);
	character[MAIN].loop= 7;
	character[MAIN].frame= 1;
	Wait(10);
	PlaySound(18);
	ObjectOff(4);
	DisableHotspot(8);
	EnableHotspot(6);
	ObjectOn(3);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 262, 109);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 262, 109);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to ruin the cage.", 1);
}
}

function hotspot1_b() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, 120, 94);
Wait(5);
DisplaySpeechNoBlock(MAIN, "They lead downstairs.", 1);
}

function hotspot1_c() {
  // script for hotspot1: Pick up hotspot
  
MoveCharacterBlocking(MAIN, 92, 112, 0);
character[MAIN].loop= 3;
Wait(5);
DisplaySpeechNoBlock(MAIN, "Pick up stairs?", 1);
DisplaySpeechNoBlock(MAIN, "I wouldn't even know where to begin.", 2);
}

function hotspot1_d() {
  // script for hotspot1: Talk to hotspot
  
MoveCharacterBlocking(MAIN, 92, 112, 0);
character[MAIN].loop= 3;
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't need to talk to anyone down there.", 1);
}

function hotspot4_b() {
  // script for hotspot4: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Loos like Grandma and Grandpa are staying in the guest room.", 1);
}

function hotspot4_c() {
  // script for hotspot4: Talk to hotspot
  
MoveCharacterBlocking(MAIN, 220, 102, 0);
character[MAIN].loop= 3;
Wait(5);

DisplaySpeechNoBlock(MAIN, "Hello guestroom!", 1);
}

function object1_b() {
  // script for object1: Look at object
  
MoveCharacterBlocking(MAIN, 203, 105, 0);
character[MAIN].loop= 3;
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's the guestroom door.", 1);
}

function object1_c() {
  // script for object1: Talk to object
  
MoveCharacterBlocking(MAIN, 203, 105, 0);
character[MAIN].loop= 3;
Wait(5);
DisplaySpeechNoBlock(MAIN, "Open sesame!", 1);
DisplaySpeechNoBlock(MAIN, "Didn't seem to work.", 2);
}

function object0_b() {
  // script for object0: Look at object
  
MoveCharacterBlocking(MAIN, 60, 111, 0);
character[MAIN].loop= 1;
Wait(5);

if(GetGlobalInt(3)== 1) {					// thurston is in shower

	DisplaySpeechNoBlock(MAIN, "Thurston must be using the shower.", 1);
}
else {

	DisplaySpeechNoBlock(MAIN, "It's the bathroom door.", 1);
}
}

function object0_c() {
  // script for object0: Talk to object

MoveCharacterBlocking(MAIN, 76, 114, 0);
character[MAIN].loop= 1;
Wait(5);
  
if(GetGlobalInt(3)== 1) {				// if thurston is in shower

GUIOff(2);
Wait(5);

	if(counter== 1) {

		DisplaySpeech(MAIN, "Hey Thurston!");
		DisplaySpeechNoBlock(MAIN, "Hurry up in there!", 1);
		counter++;
		GUIOn(2);
	}
	
	else if(counter== 2) {
	
		DisplaySpeech(MAIN, "Hey Thurston!");
		DisplaySpeechNoBlock(MAIN, "You're using all the hot water!", 1);
		counter++;
		GUIOn(2);
	}
	
	else if(counter== 3) {
	
		DisplaySpeech(MAIN, "Hey Thurston!");
		DisplaySpeechNoBlock(MAIN, "Save some for the whales!", 1);
		counter++;
		GUIOn(2);
	}
	
	else if(counter== 4) {
	
		DisplaySpeech(MAIN, "Hey Thurston!");
		DisplaySpeechNoBlock(MAIN, "You poohead.", 1);
		counter= 1;
		GUIOn(2);
	}
}

else {

	DisplaySpeechNoBlock(MAIN, "There's no one in there.", 1);
}
	
		}

function hotspot5_b() {
  // script for hotspot5: Look at hotspot
  
MoveCharacterBlocking(MAIN, 50, 111, 0);
character[MAIN].loop= 1;
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's the bathroom.", 1);
}

function hotspot5_c() {
  // script for hotspot5: Talk to hotspot
  
MoveCharacterBlocking(MAIN, 50, 111, 0);
character[MAIN].loop= 1;
Wait(5);

DisplaySpeechNoBlock(MAIN, "It wouldn't have anything interesting to say.", 1);
DisplaySpeechNoBlock(MAIN, "Right Mr. Bathroom?", 2);
}

function hotspot6_b() {
  // script for hotspot6: Look at hotspot
  
FaceLocation(MAIN, 262, 109);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's shut.", 1);
}

function object3_c() {
  // script for object3: Look at object
  
FaceLocation(MAIN, 262, 109);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's shut.", 1);
}


function hotspot6_c() {
  // script for hotspot6: Pick up hotspot
  
FaceLocation(MAIN, 262, 109);
Wait(5);
DisplaySpeechNoBlock(MAIN, "The cage needs it more than I do.", 1);
}

function object3_d() {
  // script for object3: Pick up object
  
FaceLocation(MAIN, 262, 109);
Wait(5);
DisplaySpeechNoBlock(MAIN, "The cage needs it more than I do.", 1);
}

function hotspot8_b() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, 262, 109);
Wait(5);
DisplaySpeechNoBlock(MAIN, "The cage door is wide open.", 1);
}

function hotspot8_c() {
  // script for hotspot8: Pick up hotspot
  
FaceLocation(MAIN, 262, 109);
Wait(5);
DisplaySpeechNoBlock(MAIN, "The cage needs it more than I do.", 1);
}

function object4_c() {
  // script for object4: Pick up object
  
FaceLocation(MAIN, 262, 109);
Wait(5);
DisplaySpeechNoBlock(MAIN, "The cage needs it more than I do.", 1);
}

function object4_d() {
  // script for object4: Look at object
  
FaceLocation(MAIN, 262, 109);
Wait(5);
DisplaySpeechNoBlock(MAIN, "The cage door is wide open.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, 333, 61);
Wait(5);  
DisplaySpeechNoBlock(MAIN, "That's my Mom's room, it's off limits.", 1);
}

function hotspot3_c() {
  // script for hotspot3: Talk to hotspot
  
FaceLocation(MAIN, 333, 61);
Wait(5);  
DisplaySpeechNoBlock(MAIN, "No ones in there.", 1);
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, 355, 135);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It leads back down the hall.", 1);
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, 31, 132);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It looks nice enough.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Pick up hotspot
  
FaceLocation(MAIN, 31, 132);
Wait(5);
DisplaySpeechNoBlock(MAIN, "That stuff's just good for decoration.", 1);
}


function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
MoveCharacterBlocking(MAIN, 81, 117, 0);
character[MAIN].loop= 3;
Wait(5);
DisplaySpeechNoBlock(MAIN, "Seems like those pictures have been up there forever.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Pick up hotspot
  
FaceLocation(MAIN, 83, 52);
Wait(5);
DisplaySpeechNoBlock(MAIN, "They're better off on the wall.", 1);
}

function hotspot10_c() {
  // script for hotspot10: Interact hotspot
  
if(ACTION== PUSH || ACTION== PULL) {

	MoveCharacterBlocking(MAIN, 81, 117, 0);
	character[MAIN].loop= 3;
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "They get bumped enough as it is.", 1);
}
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, 253, 55);
Wait(5);
DisplaySpeechNoBlock(MAIN, "Knuckles has a lot of stuff in there to play with.", 1);
}

function hotspot11_b() {
  // script for hotspot11: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, 253, 55);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's a little too small for me.", 1);
}

else if(ACTION== OPEN) {

	if(IsObjectOn(3)) {			// if door is shut
	
		MoveCharacterBlocking(MAIN, 262, 109, 0);
		character[MAIN].loop= 3;
		Wait(5);
		character[MAIN].loop= 7;
		character[MAIN].frame= 1;
		Wait(10);
		ObjectOff(3);
		DisableHotspot(6);
		EnableHotspot(8);
		ObjectOn(4);
		character[MAIN].loop= 3;
		character[MAIN].frame= 0;
	}
	
	else if(IsObjectOn(4)) {
	
		FaceLocation(MAIN, 262, 109);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
	}
}

else if(ACTION== CLOSE) {

	if(IsObjectOn(3)) {
	
		FaceLocation(MAIN, 262, 109);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
	}
	
	else if(IsObjectOn(4)) {
	
		MoveCharacterBlocking(MAIN, 262, 109, 0);
		character[MAIN].loop= 3;
		Wait(5);
		character[MAIN].loop= 7;
		character[MAIN].frame= 1;
		Wait(10);
		ObjectOff(4);
		DisableHotspot(8);
		EnableHotspot(6);
		ObjectOn(3);
		character[MAIN].loop= 3;
		character[MAIN].frame= 0;
	}

}

else if(ACTION== PUSH || ACTION== PULL) {
 
	FaceLocation(MAIN, 253, 55);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to knock the whole cage over.", 1);
}
}


function object0_d() {
  // script for object0: Use inventory on object
  
FaceLocation(MAIN, 31, 87);
Wait(5);
DisplaySpeechNoBlock(MAIN, "There's no way to unlock these doors from the outside.", 1);
DisplaySpeechNoBlock(MAIN, "Believe me, I've tried.", 2);
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, 267, 74);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's there for the birdcage to sit on.", 1);
}

function hotspot12_b() {
  // script for hotspot12: Interact hotspot
  
if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 267, 74);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't need to knock the whole cage over.", 1);
}

else if(ACTION== USE || ACTION== OPEN) {

	FaceLocation(MAIN, 267, 74);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "We don't keep anything in there.", 1);
}
}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, 128, 133);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It looks a little weak.", 1);
}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "That's just an old family photo.", 1);
}

function hotspot14_b() {
  // script for hotspot14: Pick up hotspot
  
FaceLocation(MAIN, 128, 133);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't need that.", 1);
}

function hotspot15_a() {
  // script for hotspot15: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It must be fine china.", 1);
}

function hotspot15_b() {
  // script for hotspot15: Pick up hotspot
  
FaceLocation(MAIN, 128, 133);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I'd rather not touch it.", 1);
}

function hotspot16_a() {
  // script for hotspot16: Look at hotspot
  
FaceLocation(MAIN, 128, 133);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It blocks off the stairwell.", 1);
}

$$$!$$$ ROOM room6.crm
$$$!$$$ RS
// text script for room

function object0_a() {
  // script for object0: Interact with object

if(ACTION== OPEN) {

	MoveCharacterBlocking(MAIN, 215, 128, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(0);
	PlayAmbientSound(1, 2, 30, 256, 96);
	ObjectOff(0);
	EnableHotspot(5);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}

else if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 215, 128, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(0);
	PlayAmbientSound(1, 2, 30, 256, 96);
	ObjectOff(0);
	EnableHotspot(5);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	MoveCharacterBlocking(MAIN, 240, 128, 1);
	NewRoom(5);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 247, 87);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}

}

function object2_a() {
  // script for object2: Interact with object
  
if(ACTION== USE) {

	FaceLocation(MAIN, 115, 52);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not taking a shower.", 1);
}

else if(ACTION== OPEN || ACTION== PUSH || ACTION== PULL) {
  
	MoveCharacterBlocking(MAIN, 137, 104, 0);
	character[MAIN].loop= 1;
	Wait(10);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(8);
	ObjectOff(2);
	ObjectOn(3);
	
	if(GetGlobalInt(3)== 2 && character[MAIN].inv[12]== 0) {		// if brother took his shower and he doesn't already have it...
		
		ObjectOn(4);							// turn on robe
	}
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

else if(ACTION== CLOSE) {
  
	FaceLocation(MAIN, 115, 52);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "The curtains are already closed.", 1);
}
}

function object3_a() {
  // script for object3: Interact with object

if(ACTION== CLOSE || ACTION== PUSH || ACTION== PULL) {  

	MoveCharacterBlocking(MAIN, 154, 104, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(8);
	ObjectOn(2);
	ObjectOff(3);
	ObjectOff(4);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}


else if(ACTION== OPEN) {
  
	FaceLocation(MAIN, 179, 55); 
	Wait(10); 
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}

else if(ACTION== USE) {

	FaceLocation(MAIN, 179, 55); 
	Wait(10); 
	DisplaySpeechNoBlock(MAIN, "I'm not taking a shower.", 1);
}
}

function object4_a() {
  // script for object4: Pick up object
  
MoveCharacterBlocking(MAIN, 130, 104, 0);
character[MAIN].loop= 1;
Wait(10);
character[MAIN].loop= 12;
character[MAIN].frame= 1;
Wait(10);
ObjectOff(4);
AddInventory(12);
PlaySound(4);
Wait(10);
character[MAIN].loop= 1;
character[MAIN].frame= 0;

}

function object5_a() {
  // script for object5: Pick up object
  
MoveCharacterBlocking(MAIN, 284, 140, 0);
character[MAIN].loop= 0;
DisplaySpeech(MAIN, "Who doesn't need a doorstop?");
AnimateCharacter(MAIN, 4, 10, 0);
Wait(10);
ObjectOff(5);
AddInventory(6);
PlaySound(4);
ReleaseCharacterView(MAIN);
character[MAIN].loop= 0;

}

function room_a() {
  // script for room: Player enters screen (after fadein)

if(GetGlobalInt(1)== 0 || GetGlobalInt(1)== 2) {

	PlayAmbientSound(1, 2, 30, 256, 96);				// ambient vacuum
}


if(GetGlobalInt(36)== 1) {

	PlayAmbientSound(1, 32, 167, 30, 100);
	Wait(40);
	DisplaySpeechAt(100, 23, 200, THURSTON, "GIMME A SEC...");
	DisplaySpeechAt(100, 23, 200, THURSTON, "... I'M IN THE SHOWER!!");
	Wait(40);
	NewRoom(5);
}

else if(GetGlobalInt(36)== 2) {

	if((GetGlobalInt(16) + GetGlobalInt(17)) < 2) {			// only one is on

		PlayAmbientSound(1, 32, 167, 30, 100);
		Wait(40);
		DisplaySpeechAt(100, 23, 200, THURSTON, "Hmm... ");
		DisplaySpeechAt(100, 23, 200, THURSTON, "I'm starting to run out of hot water in here...");
		Wait(40);
		NewRoom(character[MAIN].prevroom);
	}
	
	else {								// both are on correctly set

		PlayAmbientSound(1, 32, 167, 30, 100);
		Wait(40);
		DisplaySpeechAt(100, 23, 200, THURSTON, "WOA-WOAH-C-C-COLD!!");
		Wait(10);
		PlaySound(41);
		StopAmbientSound(1);
		SetObjectGraphic(7, 426);
		PlaySound(51);
		Wait(10);
		PlaySound(51);
		Wait(9);
		PlaySound(51);
		Wait(20);
		PlaySound(51);
		Wait(20);
		DisplaySpeechAt(100, 23, 200, THURSTON, "Yikes! ... We're out of hot water already?");
		Wait(40);
		NewRoom(character[MAIN].prevroom);
	}
}
 
else {

	if(GetGlobalInt(36)== 3) {

		SetGlobalInt(36, 4);					// increment room to final state
	}	 
 
	MoveCharacterBlocking(MAIN, 222, 135, 1);			// entering from the hallway
	MoveCharacter(MAIN, 192, 130);	
	SetGlobalInt(5, 2);						// state to in bathroom
}
}

function hotspot1_a() {
  // script for hotspot1: Look at hotspot

FaceLocation(MAIN, mouse.x, mouse.y - 20);
Wait(10);  
DisplaySpeechNoBlock(MAIN, "Elegant, clean, porcelain...", 1);
DisplaySpeechNoBlock(MAIN, "... everything I look for in a toilet.", 2);
}

function hotspot1_b() {
  // script for hotspot1: Interact with hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y - 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have to go right now.", 1);
}

else if(ACTION== OPEN) {
  
	FaceLocation(MAIN, mouse.x, mouse.y - 20);
	Wait(10);
  	DisplaySpeechNoBlock(MAIN, "I prefer to let the inner workings of a toilet remain a mystery.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y - 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "Why waste the water?", 1);
}
}

function hotspot2_a() {
  // script for hotspot2: Look at hotspot

FaceLocation(MAIN, mouse.x, mouse.y + 10);
Wait(10);  
DisplaySpeechNoBlock(MAIN, "... I'm not getting in there now!", 1);
}

function hotspot2_b() {
  // script for hotspot2: Interact with hotspot
  
if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y - 10);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... I'm better off avoiding them.", 1);
}

}

function hotspot3_a() {
  // script for hotspot3: Look at hotspot

FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);  
DisplaySpeechNoBlock(MAIN, "That's a clean sink.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Interact with hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
  	DisplaySpeechNoBlock(MAIN, "It's empty.", 1);
}
}

function object0_b() {
  // script for object0: Look at object

FaceLocation(MAIN, 246, 88);
Wait(10);  
DisplaySpeechNoBlock(MAIN, "It's the bathroom door.", 1);
}

function object2_b() {
  // script for object2: Look at object
  
FaceLocation(MAIN, 116, 53);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It closes to keep water from splashing out.", 1);
}

function object5_b() {
  // script for object5: Look at object
  
DisplaySpeech(MAIN, "It's holding the door open.");
}

function object3_b() {
  // script for object3: Look at object

FaceLocation(MAIN, 179, 55); 
Wait(10); 
DisplaySpeechNoBlock(MAIN, "It closes to keep water from splashing out.", 1);
}

function object6_a() {
  // script for object6: Pick up object
  
MoveCharacterBlocking(MAIN, 259, 112, 0);
Wait(10);
character[MAIN].loop= 3;
Wait(10);
AnimateCharacter(MAIN, 5, 10, 0);
Wait(10);
AddInventory(5);
PlaySound(5);
ReleaseCharacterView(MAIN);
character[MAIN].loop= 3;
DisplaySpeech(MAIN, "I'll just take one.");
  
}

function object6_b() {
  // script for object6: Look at object

MoveCharacterBlocking(MAIN, 259, 112, 0);
Wait(10);
character[MAIN].loop= 3;
Wait(0);  
DisplaySpeech(MAIN, "\"It cleans deep down in your skin\"");
DisplaySpeech(MAIN, "\"and removes dirt and grime from your pores\"");
DisplaySpeech(MAIN, "\"smooth as your skin's ever been\"");
DisplaySpeech(MAIN, "\"Use oxy-cill.\"");
character[MAIN].loop= 0;
Wait(0);
DisplaySpeech(MAIN, "Hmm. That last line just doesn't work.");
}

function hotspot5_a() {
  // script for hotspot5: Interact hotspot
  
if(ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 215, 128, 0);
	character[MAIN].loop= 2;
	MoveCharacterBlocking(MAIN, 242, 128, 1);
	NewRoom(5);
}

else if(ACTION== CLOSE) {
  
	MoveCharacterBlocking(MAIN, 215, 128, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(10);
	PlaySound(1);
	ObjectOn(0);
	DisableHotspot(5);
	StopAmbientSound(1);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 10);
Wait(10);
DisplaySpeechNoBlock(MAIN, "... looking good.", 1);
}


function hotspot6_b() {
  // script for hotspot6: Interact hotspot
  
if(ACTION== OPEN) {  

	if(GetGlobalInt(41)== 0) {					// if he hasn't opened yet
	  
		MoveCharacterBlocking(MAIN, 180, 111, 0);
		character[MAIN].loop= 2;
		Wait(20);
		GUIOff(2);
		StartCutscene(5);
		
		Wait(20);
		DisplaySpeech(MAIN, "I haven't looked in here for a while...");
		Wait(10);
		MoveCharacterBlocking(MAIN, 186, 107, 1);
		Wait(10);
		character[MAIN].loop= 13;
		character[MAIN].frame= 1;
		Wait(15);
		PlaySound(3);
		ObjectOn(1);				// cabinet
		ObjectOn(5);				// cleanser pads
		DisableHotspot(6);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		Wait(10);
		MoveCharacterBlocking(MAIN, 180, 111, 1);
		character[MAIN].loop= 2;
		SetGlobalInt(41, 1);					// increment state
		Wait(20);
		
		GUIOn(2);
		EndCutscene();
	}
	
	else {
	
		MoveCharacterBlocking(MAIN, 180, 111, 0);
		MoveCharacterBlocking(MAIN, 186, 107, 1);
		character[MAIN].loop= 2;
		Wait(10);
		character[MAIN].loop= 13;
		character[MAIN].frame= 1;
		Wait(15);
		PlaySound(3);
		ObjectOn(1);				// cabinet
		ObjectOn(5);				// cleanser pads
		DisableHotspot(6);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		Wait(10);
		MoveCharacterBlocking(MAIN, 180, 111, 1);
		character[MAIN].loop= 2;
	}
}


else if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y - 10);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... looking good.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, mouse.x, mouse.y - 10);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function object1_a() {
  // script for object1: Interact object
  
if(ACTION== CLOSE || ACTION== USE) {

	MoveCharacterBlocking(MAIN, 159, 86, 0);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 13;
	character[MAIN].frame= 1;
	Wait(10);
	PlaySound(5);
	ObjectOff(1);				// cabinet
	ObjectOff(5);				// cleanser pads
	EnableHotspot(6);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}

else if(ACTION== OPEN) {
  
	FaceLocation(MAIN, 211, 43);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}
}

function object5_c() {
  // script for object5: Pick up object
  
MoveCharacterBlocking(MAIN, 178, 109, 0);
character[MAIN].loop= 2;
Wait(10);

if(character[MAIN].inv[5]== 0) {					// if he doesn't have one

	MoveCharacterBlocking(MAIN, 185, 109, 1);
	Wait(10);
	character[MAIN].loop= 13;
	character[MAIN].frame= 1;
	Wait(15);
	AddInventory(5);
	PlaySound(4);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	MoveCharacterBlocking(MAIN, 178, 109, 1);
	character[MAIN].loop= 2;
	DisplaySpeechNoBlock(MAIN, "These things really cleanse deep!", 1);
	DisplaySpeechNoBlock(MAIN, "... I think one should be enough.", 2);
}

else {

	DisplaySpeechNoBlock(MAIN, "I think just one pad should be enough.", 1);
}
}

function room_b() {
  // script for room: Player enters screen (before fadein)

if(GetGlobalInt(36)== 1) {					// if coming from thurston in shower cutscene

	ObjectOff(2);						// turn off half open/closed shower screens
	ObjectOff(3);
	ObjectOff(5);
	ObjectOn(0);						// close door
	ObjectOn(7);						// turn on shower screen
	ObjectOff(1);						// make sure cabinet is shut
	SetObjectView(7, 52);
	AnimateObject(7, 5, 5, 1);
}


else if(GetGlobalInt(36)== 2) {					// cutscene from dishwasher or washing machine

	ObjectOff(2);
	ObjectOff(3);
	ObjectOff(5);
	ObjectOn(0);
	ObjectOn(7);
	ObjectOff(1);
	SetObjectView(7, 52);
	AnimateObject(7, 5, 5, 1);
}

else {

	PlayMusic(4);
	character[MAIN].x= 246;
	character[MAIN].y= 133;
	character[MAIN].loop= 1;

	if(GetGlobalInt(36)== 3) {

		ObjectOff(0);
		ObjectOff(1);				// close cabinet
		EnableHotspot(6);
		ObjectOn(2);				// cracked curtain
		ObjectOff(3);
		ObjectOff(4);				// make sure robe is off
		ObjectOff(5);				// make sure facial cleansors are off
		ObjectOn(6);				// turn on sponge
		ObjectOff(7);				// turn off spread curtain
	}

	if(GetGlobalInt(3)== 2 && character[MAIN].inv[14]== 0 && character[MAIN].inv[17]== 0) {
		  
		ObjectOn(6);						// turn on sponge if he doesn't already have it
	}
	
	if(GetGlobalInt(3)== 2 && GetGlobalInt(31)== 0) {		// make sure the shower curtains are closed the first time
									// he enters after thurston is out of shower
		ObjectOn(2);
		ObjectOff(3);
		SetGlobalInt(31, 1);
	}
	
	if(GetGlobalInt(1)== 2) {					// if mom is upstairs putting knuckles away
	
		character[MOM].room= 3;
		SetGlobalInt(1, 3);					// have her finish and go downstairs
	}
}
}

function object6_c() {
  // script for object6: Pick up object
  
MoveCharacterBlocking(MAIN, 168, 102, 0);
character[MAIN].loop= 2;
Wait(10);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(10);
PlaySound(4);
ObjectOff(6);
AddInventory(14);
Wait(10);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
}


function hotspot1_c() {
  // script for hotspot1: Talk to hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'm not crazy.", 1);
}

function hotspot1_d() {
  // script for hotspot1: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's a fixture.", 1);
}


function hotspot3_c() {
  // script for hotspot3: Pick up hotspot
  
MoveCharacterBlocking(MAIN, 174, 111, 0);
character[MAIN].loop= 2;
Wait(10);

DisplaySpeechNoBlock(MAIN, "There's nothing in there.", 1);
}

function hotspot4_a() {
  // script for hotspot4: Look at hotspot
  
MoveCharacterBlocking(MAIN, 101, 109, 0);
character[MAIN].loop= 1;
Wait(10);

DisplaySpeechNoBlock(MAIN, "A perfect day for a sweet game of Slackmaster!", 1);
}

function hotspot4_b() {
  // script for hotspot4: Interact hotspot
  
if(ACTION== USE || ACTION== OPEN || ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not sure this one opens...", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function hotspot5_b() {
  // script for hotspot5: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It leads back to the hallway.", 1);
}

function hotspot6_c() {
  // script for hotspot6: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 10);
Wait(10);
DisplaySpeechNoBlock(MAIN, "... it's not going anywhere.", 1);
}

function hotspot7_a() {
  // script for hotspot7: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 10);
Wait(10);
DisplaySpeechNoBlock(MAIN, "... it's a little scummy.", 1);
}

function hotspot7_b() {
  // script for hotspot7: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y - 10);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't need the soap.", 1);
}
}

function hotspot8_a() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I hope it's double-ply.", 1);
}

function hotspot8_b() {
  // script for hotspot8: Interact hotspot
  
if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm good.", 1);
}
}

function hotspot8_c() {
  // script for hotspot8: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "There's no need to have spare toilet paper on-hand.", 1);
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Always on duty.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "...nothing needs plunging.", 1);
}
}

function hotspot9_c() {
  // script for hotspot9: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'll leave that for any emergency flooding.", 1);
}

function object1_b() {
  // script for object1: Look at object
  
FaceLocation(MAIN, 218, 91);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That stuff doesn't look too interesting.", 1);
}

function object1_c() {
  // script for object1: Pick up object
  
FaceLocation(MAIN, 211, 72);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That stuff doesn't really interest me...", 1);
}

function object2_c() {
  // script for object2: Pick up object
  
FaceLocation(MAIN, 115, 52);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It belongs with the shower.", 1);
}

function object3_c() {
  // script for object3: Pick up object
  
FaceLocation(MAIN, 179, 55); 
Wait(10); 
DisplaySpeechNoBlock(MAIN, "It belongs with the shower.", 1);
}

function object4_b() {
  // script for object4: Look at object
  
MoveCharacterBlocking(MAIN, 104, 104, 0);
character[MAIN].loop= 3;
Wait(10);

DisplaySpeechNoBlock(MAIN, "It must be Thurston's bathrobe.", 1);
DisplaySpeechNoBlock(MAIN, "I'm not sure when he started wearing one of those.", 2);
}

function object4_c() {
  // script for object4: Interact object
  
if(ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 104, 104, 0);
	character[MAIN].loop= 3;
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "Mabye I should just pick it up for now.", 1);
}
}

function object5_d() {
  // script for object5: Look at object
  
MoveCharacterBlocking(MAIN, 178, 109, 0);
character[MAIN].loop= 2;
Wait(20);

DisplaySpeechNoBlock(MAIN, "Hey, it's my prescription strength facial cleanser!", 1);

}

function object5_e() {
  // script for object5: Interact object
  
MoveCharacterBlocking(MAIN, 178, 109, 0);
character[MAIN].loop= 2;
Wait(10);

DisplaySpeechNoBlock(MAIN, "I should just pick one up.", 1);
}

function object6_d() {
  // script for object6: Look at object
  
FaceLocation(MAIN, 188, 72);
Wait(10);
DisplaySpeechNoBlock(MAIN, "Looks like Thurston left his shower sponge out.", 1);
}

function object6_e() {
  // script for object6: Interact object
  
FaceLocation(MAIN, 188, 72);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It's already dry.", 1);
}

function room_c() {
  // script for room: Repeatedly execute
  
CheckSpeech();
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, 145, 113);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I step on it all the time.", 1);
}

function hotspot10_b() {
  // script for hotspot10: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's useful where it is.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y + 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't think I should move it around.", 1);
}
}

function room_d() {
  // script for room: Player leaves screen
  
StopMusic();
}

function hotspot10_c() {
  // script for hotspot10: Pick up hotspot

FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I don't want to lug a bath mat around.", 1);  
}

function hotspot16_a() {
  // script for hotspot16: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's the faucet for the sink.", 1);
}

function hotspot16_b() {
  // script for hotspot16: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... why waste the water?", 1);
}
}

function hotspot15_a() {
  // script for hotspot15: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It has things hanging on it occasionally.", 1);
}

function hotspot15_b() {
  // script for hotspot15: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y - 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't have anything to hang there.", 1);
}
}

function hotspot15_c() {
  // script for hotspot15: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "There's nothing on it.", 1);
}

function hotspot14_a() {
  // script for hotspot14: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "... it's soap.", 1);
}

function hotspot14_b() {
  // script for hotspot14: Interact hotspot


if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y - 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "There's no reason to panic...", 1);
}
}

function hotspot14_c() {
  // script for hotspot14: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 20);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'd rather not touch it.", 1);
}

function hotspot13_a() {
  // script for hotspot13: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 10);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's the faucet for the tub.", 1);
}

function hotspot13_b() {
  // script for hotspot13: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y - 20);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't feel like running a bath...", 1);
}
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y - 30);
Wait(10);
DisplaySpeechNoBlock(MAIN, "It puts out a good spray.", 1);
}

function hotspot12_b() {
  // script for hotspot12: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y - 30);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... not now.", 1);
}
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That's our bathtub.", 1);
}

function hotspot11_b() {
  // script for hotspot11: Interact hotspot

if(ACTION== USE) {
  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... I don't need to run a bath.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "It's too heavy to move around.", 1);
}
}

function hotspot11_c() {
  // script for hotspot11: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(10);
DisplaySpeechNoBlock(MAIN, "There's nothing in it.", 1);
}

$$$!$$$ ROOM room7.crm
$$$!$$$ RS
// text script for room

int HoverAcceleration= 0;			// for floating cerebrit
int direction= -1;				// which direction cerebrit is floation
int counter= 0;					// counter for cerebrit's float loop

int CerebritSpeech= 2;				// counter for idle speech
int CerebritIdleSpeech= 0;
int CerebritIdle= 0;

function SkipIntro() {

	string response1;
	string response2;
	string response3;

	InputBox("Skip Intro? (y/n)", response1);
	
	if(StrComp(response1, "y")== 0) {
	
		InputBox("Skip Beginning of game? (y/n)", response2);
		SetGlobalInt(12, 2);						// cutscene increment
		character[MOM].room= 5;
		SetGlobalInt(1, 0);
		GUIOn(2);
		
		if(StrComp(response2, "y")== 0) {
			  
			SetGlobalInt(12, 3);					// right cutscene state
			SetGlobalInt(1, 1);					// set moms state to in living room
			SetGlobalInt(3, 1);					// set thurstons state to in shower
			character[MOM].room= 3;					// mom in hallway
			
			InputBox("Skip to map? (y/n)", response3);
			
			if(StrComp(response3, "y")== 0) {
			
				SetGlobalInt(12, 5);				// did the gameshop cutscene
				StopMusic();
				NewRoom(12);
				GUIOn(2);
				SetMouseCursor(0);
				SetDefaultCursor();
			}
			
			else {
			
				StopMusic();
				NewRoom(22);
				GUIOn(2);
				SetMouseCursor(0);
				SetDefaultCursor();				
			}
		}
		
		else {
		
			StopMusic();
			NewRoom(1);
			SetMouseCursor(0);
			SetDefaultCursor();			
		}
	}
}

function on_key_press(int keycode) {

	if(IsGUIOn(3)== 0) {			// if menu isn't up
		  
		if(keycode== 27) {		// ESC
	
			SetMusicMasterVolume(30);
			SetCursorMode(0);
			SetDefaultCursor();
			GUIOn(3);
		}
		
		else if(keycode==363) {		// F5
			
			SetMusicMasterVolume(30);
			SetCursorMode(0);
			SetDefaultCursor();
			GUIOn(3);
		}
	
		else {
		  
			FadeOut(1);
			Wait(30);
			StopMusic();
			Wait(30);
			SetScreenTransition(TRANSITION_BOXOUT);
			NewRoom(22);
		}

		ClaimEvent();
	}

	else {
		
		GUIOff(3);
		SetCursorMode(7);
		SetMusicMasterVolume(90);
	}

	ClaimEvent();
}
	
function on_mouse_click(int button) {
	
	if(IsGUIOn(3)== 0) {
  
			FadeOut(1);
			Wait(30);
			StopMusic();
			Wait(30);
			SetScreenTransition(TRANSITION_BOXOUT);
			NewRoom(22);
	}
	
	ClaimEvent();
}


function room_a() {
  // script for room: Player enters screen (before fadein)
  
character[MAIN].x= -150;
character[MAIN].y= -150;

character[CEREBRIT].x= 210;
character[CEREBRIT].y= 120;
AnimateCharacter(CEREBRIT, 0, 5, 1);

GUIOff(2);

SetObjectView(0, 52);
AnimateObject(0, 13, 6, 1);

SetObjectView(1, 53);
AnimateObject(1, 3, 4, 1);

SetTimer(1, 50);				// for cerebrit's idle speech



SetCursorMode(7);
}

function room_c() {
  // script for room: Repeatedly execute


if(IsTimerExpired(1)) {

	if(CerebritSpeech== 0) {
	  
		CerebritIdleSpeech= DisplaySpeechBackground(CEREBRIT, "Welcome to my DESIGN!");
		CerebritIdle= 1;
	}
	
	else if(CerebritSpeech== 1) {
	
		CerebritIdleSpeech= DisplaySpeechBackground(CEREBRIT, "Muhahahaha!1!!");
		CerebritIdle= 1;
	}
	
	else if(CerebritSpeech== 2) {
	
		CerebritIdleSpeech= DisplaySpeechBackground(CEREBRIT, "ESC to load, any other key to BEGIN!");
		CerebritIdle= 1;
	}
	
	else if(CerebritSpeech== 3) {
	
		CerebritIdleSpeech= DisplaySpeechBackground(CEREBRIT, "Right-click/ESC to skip cutscenes!");
		CerebritIdle= 1;
	}

	CerebritSpeech= Random(3);	
}

if(IsOverlayValid(CerebritIdleSpeech)== 0 && CerebritIdle== 1) {

	SetTimer(1, 120);
	CerebritIdle= 0;
}

}



function room_b() {
  // script for room: Player enters screen (after fadein)
  
Wait(30);
PlayMusic(1);
SetMusicMasterVolume(90);
}

$$$!$$$ ROOM room8.crm
$$$!$$$ RS
// room script file

import int GrandpaIdle;
import int GrandpaIdleSpeech;
int GrandpaIdleCounter= 0;

function object0_a() {
  // script for object0: Interact object


if(ACTION== USE) {

	MoveCharacterBlocking(MAIN, 44, 113, 0);
	character[MAIN].loop= 1;
	Wait(5);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(0);
	ObjectOff(0);
	EnableHotspot(1);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	Wait(5);
	MoveCharacterBlocking(MAIN, 34, 113, 1);
	NewRoom(5);
}
	


else if(ACTION== OPEN) {
  
	MoveCharacterBlocking(MAIN, 44, 113, 0);
	character[MAIN].loop= 1;
	Wait(5);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(0);
	ObjectOff(0);
	EnableHotspot(1);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 44, 113);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function room_a() {
  // script for room: Player enters screen (before fadein)
  
character[MAIN].x= 23;
character[MAIN].y= 114;
character[MAIN].loop= 2;

if(GetGlobalInt(13)== 3) {						// cutscene

	StartCutscene(5);
	
	character[MAIN].x= 122;
	character[MAIN].y= 128;
	character[MAIN].loop= 2;
	
	character[GRANDPA].x= 198;
	character[GRANDPA].y= 131;
	character[GRANDPA].loop= 1;
	
	SetMusicMasterVolume(30);
}

else {									// normal stuff

	if(character[GRANDPA].room== 8) {
	
		ReleaseCharacterView(GRANDPA);
		character[GRANDPA].x= 198;
		character[GRANDPA].y= 131;
		character[GRANDPA].loop= 1;
		
		RemoveWalkableArea(3);
		EnableRegion(1);
		SetTimer(1, 50);
	}
	
	if(GetGlobalInt(1)== 2) {					// if mom is upstairs putting knuckles away
	
		character[MOM].room= 3;
		SetGlobalInt(1, 3);					// have her finish and go downstairs
	}
}	


PlayMusic(4);
PlayMusicQueued(3);
}

function room_b() {
  // script for room: Player enters screen (after fadein)

if(GetGlobalInt(13)== 3) {

	Wait(40);
	DisplaySpeech(GRANDPA, "... THAT WAS EXCITING.");
	Wait(10);
	DisplaySpeech(GRANDPA, "NOW LET'S GET CRACKIN' ON THAT HEARING AID!");
	Wait(30);
	SetCharacterSpeechView(MAIN, 67);
	DisplaySpeech(MAIN, "Maybe you left it in Thurston's room...?");
	SetCharacterSpeechView(MAIN, 2);
	Wait(10);
	DisplaySpeechBackground(GRANDPA, "... EH?");
	AnimateCharacterEx(GRANDPA, 4, 5, 0, 0, 1);
	Wait(30);
	character[GRANDPA].loop= 1;
	Wait(30);
	SetScreenTransition(TRANSITION_CROSSFADE);
	SetGlobalInt(13, 0);					// cutscene flag set to inactive
	SetGlobalInt(5, 3);					// set state to in guest room
	Wait(10);
	SetMusicMasterVolume(90);
	Wait(10);
	
	GUIOn(2);
	EndCutscene();
}

else {
  
	MoveCharacterBlocking(MAIN, 48, 113, 1);
	MoveCharacter(MAIN, 58, 113);
	SetGlobalInt(5, 3);					// set state to in guest room
}
}

function hotspot1_a() {
  // script for hotspot1: Interact hotspot
  
if(ACTION== USE) {
  
	MoveCharacterBlocking(MAIN, 44, 113, 0);
	MoveCharacterBlocking(MAIN, 34, 113, 1);
	NewRoom(5);
}

else if(ACTION== CLOSE) {

	MoveCharacterBlocking(MAIN, 44, 113, 0);
	character[MAIN].loop= 1;
	Wait(5);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(1);
	ObjectOn(0);
	DisableHotspot(1);
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
}

else if(ACTION== OPEN) {

	FaceLocation(MAIN, 44, 113);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}
}

function hotspot2_a() {
  // script for hotspot2: Interact hotspot
  
if(ACTION== OPEN || ACTION== PULL) {

	MoveCharacterBlocking(MAIN, 228, 114, 0);
	character[MAIN].loop= 2;
	Wait(5);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(15);
	PlaySound(6);
	ObjectOn(1);
	RemoveWalkableArea(2);
	
	if(character[MAIN].inv[10]== 0 && character[MAIN].inv[22]== 0) {	// if he hasn't picked up the bra
	
		ObjectOn(2);								// turn it on when he opens the drawer
	}
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}

else if(ACTION== CLOSE || ACTION== PUSH) {

	if(IsObjectOn(1)== 1) {								// if drawer is open
	
		MoveCharacterBlocking(MAIN, 220, 111, 0);
		character[MAIN].loop= 2;
		Wait(5);
		character[MAIN].loop= 6;
		character[MAIN].frame= 2;
		Wait(5);
		PlaySound(7);
		ObjectOff(1);
		ObjectOff(2);
		RestoreWalkableArea(2);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
	}
	
	else {
		
		FaceLocation(MAIN, 259, 94);
		Wait(5);
		DisplaySpeechNoBlock(MAIN, "All the drawers are closed.", 1);
	}
}

else if(ACTION== USE) {

	FaceLocation(MAIN, 259, 94);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't have any clothes to put away.", 1);
}
}

function object1_a() {
  // script for object1: Interact object
  
if(ACTION== CLOSE || ACTION== PUSH) {

	MoveCharacterBlocking(MAIN, 220, 111, 0);
	character[MAIN].loop= 2;
	Wait(5);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(5);
	PlaySound(7);
	ObjectOff(1);
	ObjectOff(2);
	RestoreWalkableArea(2);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
}

else if(ACTION== OPEN || ACTION== PULL) {

	FaceLocation(MAIN, 251, 92);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already open.", 1);
}

else if(ACTION== USE) {

	FaceLocation(MAIN, 251, 92);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't have anything to put in it.", 1);
}
}

function object2_a() {
  // script for object2: Pick up object
  
MoveCharacterBlocking(MAIN, 228, 114, 0);
character[MAIN].loop= 2;
Wait(5);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(15);
ObjectOff(2);
PlaySound(4);
AddInventory(10);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
DisplaySpeechNoBlock(MAIN, "What IS this thing?", 1);
}

function hotspot1_b() {
  // script for hotspot1: Look at hotspot
  
FaceLocation(MAIN, 24, 62);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It leads back into the hall.", 1);
}

function hotspot2_b() {
  // script for hotspot2: Look at hotspot
  
FaceLocation(MAIN, 259, 94);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a chest.", 1);
DisplaySpeechNoBlock(MAIN, "With drawers.", 2);
}

function hotspot2_c() {
  // script for hotspot2: Pick up hotspot
  
FaceLocation(MAIN, 259, 94);
Wait(5);
DisplaySpeechNoBlock(MAIN, "There's nothing to pick up.", 1);
}

function hotspot3_a() {
  // script for hotspot3: Look at hotspot
  
FaceLocation(MAIN, 88, 46);
Wait(5);
DisplaySpeechNoBlock(MAIN, "They add some color to the room.", 1);
}

function hotspot3_b() {
  // script for hotspot3: Interact hotspot
  
if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 88, 46);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to make a mess in here.", 1);
}

else if(ACTION== USE) {

	FaceLocation(MAIN, 88, 46);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm sure they smell great.", 1);
}

}

function hotspot3_c() {
  // script for hotspot3: Talk to hotspot
  
FaceLocation(MAIN, 88, 46);
Wait(5);  
DisplaySpeechNoBlock(MAIN, "They don't need any encouragement", 1);
DisplaySpeechNoBlock(MAIN, "They're doing just fine.", 2);
}

function hotspot3_d() {
  // script for hotspot3: Pick up hotspot
  
FaceLocation(MAIN, 88, 46);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It would be better to leave them in the water.", 1);
}

function object0_b() {
  // script for object0: Look at object
  
FaceLocation(MAIN, 26, 66);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It leads out into the hall.", 1);
}

function object1_b() {
  // script for object1: Look at object
  
FaceLocation(MAIN, 251, 92);
Wait(5);
if(IsObjectOn(2)) {
  
	DisplaySpeechNoBlock(MAIN, "Looks like there is some strange garment in here.", 1);
}

else {

	DisplaySpeechNoBlock(MAIN, "It's empty.", 1);
}
}

function object1_c() {
  // script for object1: Pick up object
  
if(IsObjectOn(2)) {

	MoveCharacterBlocking(MAIN, 228, 114, 0);
	character[MAIN].loop= 2;
	Wait(5);
	character[MAIN].loop= 6;
	character[MAIN].frame= 2;
	Wait(15);
	ObjectOff(2);
	PlaySound(4);
	AddInventory(10);
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	DisplaySpeechNoBlock(MAIN, "What IS this thing?", 1);
}

else {

	FaceLocation(MAIN, 251, 92);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "There's nothing in it.", 1);
}
}

function object2_b() {
  // script for object2: Look at object
  
FaceLocation(MAIN, 251, 85);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It some strange frilly garment.", 1);
DisplaySpeechNoBlock(MAIN, "I've never seen anything like it.", 2);
}


function hotspot4_a() {
  // script for hotspot4: Look at hotspot
  
FaceLocation(MAIN, 149, 76);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I guess Grandma and Grandpa will be sleeping here tonight.", 1);
}

function hotspot4_b() {
  // script for hotspot4: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, 149, 76);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't feel like jumping on beds right now.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, 149, 76);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's too heavy to move around.", 1);
}
}

function hotspot4_c() {
  // script for hotspot4: Pick up hotspot
  
FaceLocation(MAIN, 149, 76);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's too heavy to pick up.", 1);
}

function hotspot5_a() {
  // script for hotspot5: Look at hotspot
  
FaceLocation(MAIN, 280, 45);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It's a nice day out there.", 1);
}

function hotspot5_b() {
  // script for hotspot5: Interact hotspot
  
if(ACTION== USE || ACTION== OPEN) {

	FaceLocation(MAIN, 280, 45);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to mess around with any more windows.", 1);
}

else if(ACTION== CLOSE) {

	FaceLocation(MAIN, 280, 45);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "It's already closed.", 1);
}
}

function room_c() {
  // script for room: Repeatedly execute
  
CheckSpeech();

if(IsTimerExpired(1) && character[GRANDPA].room== 8) {

	if(GrandpaIdle== 0) {
	
		if(GetGlobalInt(4)== 4) {			// has hearing aids
	
			GrandpaIdle= 1;
			ReleaseCharacterView(GRANDPA);
			GrandpaIdleCounter= Random(3);
		
			if(GrandpaIdleCounter== 0) {
			
				GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "... I heard you coming a mile away!");
				SetCharacterView(GRANDPA, 211);
				AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);
			}
	
			if(GrandpaIdleCounter== 1) {
			
				GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "... what was that?");
				SetCharacterView(GRANDPA, 211);
				AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);
			}
	
			if(GrandpaIdleCounter== 2) {
			
				GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "... yep!");
				SetCharacterView(GRANDPA, 211);
				AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);
			}	
		}

		else {
		  
			GrandpaIdle= 1;
			ReleaseCharacterView(GRANDPA);
			GrandpaIdleCounter= Random(3);
		
			if(GrandpaIdleCounter== 0) {
			
				GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "I LIKE TO BE ON MY FEET!");
				SetCharacterView(GRANDPA, 184);
				AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);
			}
	
			if(GrandpaIdleCounter== 1) {
			
				GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "I CAN'T HEAR ANYTHING!");
				SetCharacterView(GRANDPA, 184);
				AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);
			}
	
			if(GrandpaIdleCounter== 2) {
			
				GrandpaIdleSpeech= DisplaySpeechBackground(GRANDPA, "KNUCKLES LOVES THOSE SEEDS!");
				SetCharacterView(GRANDPA, 184);
				AnimateCharacter(GRANDPA, character[GRANDPA].loop, 5, 1);
			}
		}
	}
}

if(IsOverlayValid(GrandpaIdleSpeech)== 0) {

	if(GrandpaIdle== 1) {
	
		GrandpaIdle= 0;
		ReleaseCharacterView(GRANDPA);
		SetTimer(1, 300);
	}
}
}

function hotspot6_a() {
  // script for hotspot6: Look at hotspot

FaceLocation(MAIN, 75, 40);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It looks a little dried out.", 1);
  
}

function hotspot6_b() {
  // script for hotspot6: Interact hotspot
  
if(ACTION== USE) {
  
	FaceLocation(MAIN, 75, 40);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't know what to do with it.", 1);	
}

else if(ACTION== PUSH || ACTION== PULL || ACTION== OPEN) {

	if(GetGlobalInt(26)== 0) {

		MoveCharacterBlocking(MAIN, 65, 105, 0);
		character[MAIN].loop= 3;
		Wait(20);
		
		GUIOff(2);
		StartCutscene(5);
		
		Wait(40);
		DisplaySpeech(MAIN, "... Maybe I can knock a couple seeds off of it.");
		Wait(10);
		PlaySound(23);
		character[MAIN].loop= 7;
		character[MAIN].frame= 1;
		Wait(15);
		ObjectOn(3);
		EnableHotspot(7);
		character[MAIN].loop= 3;
		character[MAIN].frame= 0;
		Wait(20);
		DisplaySpeechNoBlock(MAIN, "Bingo.", 1);
		SetGlobalInt(26, 1);				// so it's not a cutscene next time
		Wait(20);
		
		GUIOn(2);
		EndCutscene();
	}
	
	else {
	
		MoveCharacterBlocking(MAIN, 65, 105, 0);
		character[MAIN].loop= 3;
		Wait(10);
		
		PlaySound(23);
		character[MAIN].loop= 7;
		character[MAIN].frame= 1;
		Wait(15);
		ObjectOn(3);
		EnableHotspot(7);
		character[MAIN].loop= 3;
		character[MAIN].frame= 0;
	}
}
}

function hotspot6_c() {
  // script for hotspot6: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I'm not willing to carry a flower around.", 1);
}

function object3_a() {
  // script for object3: Pick up object
  
MoveCharacterBlocking(MAIN, 98, 106, 0);
character[MAIN].loop= 1;
Wait(10);
character[MAIN].loop= 8;
character[MAIN].frame= 1;
Wait(20);
ObjectOff(3);
AddInventory(11);
PlaySound(4);
DisableHotspot(7);
character[MAIN].loop= 1;
character[MAIN].frame= 0;
}

function object3_b() {
  // script for object3: Look at object
 
}

function hotspot7_a() {
  // script for hotspot7: Pick up hotspot
  
MoveCharacterBlocking(MAIN, 98, 106, 0);
character[MAIN].loop= 1;
Wait(10);
character[MAIN].loop= 8;
character[MAIN].frame= 1;
Wait(20);
ObjectOff(3);
AddInventory(11);
PlaySound(4);
DisableHotspot(7);
character[MAIN].loop= 1;
character[MAIN].frame= 0;
}

function hotspot8_a() {
  // script for hotspot8: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "We've had that chair forever.", 1);
}

function hotspot8_b() {
  // script for hotspot8: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't need to rest yet.", 1);
}
}

function hotspot9_a() {
  // script for hotspot9: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "A lonely island of carpet in a sea of wood flooring.", 1);
}

function hotspot9_b() {
  // script for hotspot9: Interact hotspot
  
if(ACTION== USE) {
	
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I can walk on it anytime I want.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I don't want to move it around.", 1);
}
}

function hotspot9_c() {
  // script for hotspot9: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "There's nothing under there.", 1);
}

function hotspot10_a() {
  // script for hotspot10: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "That must be some species of ivy.", 1);
}

function hotspot11_a() {
  // script for hotspot11: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "They look nice and fluffy.", 1);
}

function hotspot11_b() {
  // script for hotspot11: Interact hotspot
  
if(ACTION== USE) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm not tired.", 1);
}
}

function hotspot11_c() {
  // script for hotspot11: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I don't really need pillows.", 1);
}

function hotspot12_a() {
  // script for hotspot12: Look at hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "It looks warm.", 1);
}

function hotspot12_b() {
  // script for hotspot12: Interact hotspot

if(ACTION== USE) {
	  
	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm not tired.", 1);
}

else if(ACTION== PULL) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I'm not messing around with anymore bedspreads.", 1);
}
}

function hotspot12_c() {
  // script for hotspot12: Pick up hotspot
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "I'm not messing around with anymore bedspreads.", 1);
}

function region1_a() {
  // script for region1: Player walks onto region

if(character[GRANDPA].room== 8) {

	if(GetGlobalInt(4)== 4) {
	
		StopMoving(MAIN);
		
		if(GrandpaIdle== 1) {
		
			if(IsOverlayValid(GrandpaIdleSpeech)) {
			
				RemoveOverlay(GrandpaIdleSpeech);
			}
			
			ReleaseCharacterView(GRANDPA);
			GrandpaIdle= 0;
		}  
		
		SetTimer(1, 0);
		Wait(10);
		DisplaySpeech(GRANDPA, "Oh no you don't!");
		Wait(10);
		MoveCharacterBlocking(MAIN, character[MAIN].x - 50, character[MAIN].y, 0);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 2;
		ReleaseCharacterView(MAIN);
		SetTimer(1, 100);
	}

	else {
	  
		StopMoving(MAIN);
		
		if(GrandpaIdle== 1) {
		
			if(IsOverlayValid(GrandpaIdleSpeech)) {
			
				RemoveOverlay(GrandpaIdleSpeech);
			}
			
			ReleaseCharacterView(GRANDPA);
			GrandpaIdle= 0;
		}  

		SetTimer(1, 0);
		Wait(10);		
		DisplaySpeech(GRANDPA, "... OH NO YOU DON'T!");
		Wait(10);
		MoveCharacterBlocking(MAIN, character[MAIN].x - 50, character[MAIN].y, 0);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 2;
		ReleaseCharacterView(MAIN);
		SetTimer(1, 100);
	}
}
}

$$$!$$$ ROOM room9.crm
$$$!$$$ RS
// text script for room


import int MorryIdle;
import int MorryIdleSpeech;

import int AndersonIdle;
import int AndersonIdleSpeech;

int MorryIdleCounter;
int AndersonIdleCounter;


function on_mouse_click(int button) {
	
	Wait(10);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 3;
	Wait(30);
	NewRoom(17);
	
	ClaimEvent();
}

function hotspot1_a() {
  // script for hotspot1: Interact hotspot
  
if(ACTION== USE) {

	Wait(10);
	character[MAIN].loop= 2;
	Wait(10);
	character[MAIN].loop= 3;
	Wait(30);
	NewRoom(17);
}
}

function room_a() {
  // script for room: Player enters screen (after fadein)
  
SetGlobalInt(7, 8);			// set state to in war room
SetMusicMasterVolume(90);
}

function room_b() {
  // script for room: Player enters screen (before fadein)

GUIOff(2);
 
character[MAIN].x= 46;
character[MAIN].y= 127;
character[MAIN].loop= 0;

SetWalkBehindBase(1, 202);

PlayMusic(4);

if(GetGlobalInt(28)== 1) {
  
	SetCharacterTransparency(MORRY, 0);
	ChangeCharacterView(MORRY, 48);
	SetCharacterIdle(MORRY, -1, 1);
	character[MORRY].talkview= 48;
	character[MORRY].room= 9;
	character[MORRY].x= 49;
	character[MORRY].y= 191;
	SetTimer(1, 50);
	MorryIdle= 0;
}

else if(GetGlobalInt(29)== 1) {

	SetCharacterTransparency(ANDERSON, 0);
	ChangeCharacterView(ANDERSON, 50);
	character[ANDERSON].talkview= 50;
	SetCharacterIdle(ANDERSON, -1, 1);
	character[ANDERSON].room= 9;
	character[ANDERSON].x= 269;
	character[ANDERSON].y= 200;
	SetTimer(1, 50);
	AndersonIdle= 0;
}

}

function room_c() {
  // script for room: Repeatedly execute

CheckSpeech();
  
if(IsTimerExpired(1)) {

	if(GetGlobalInt(28)== 1 && MorryIdle== 0) {
	
		MorryIdle= 1;
		ReleaseCharacterView(MORRY);
		MorryIdleCounter= Random(3);
	
		if(MorryIdleCounter== 0) {
		
			MorryIdleSpeech= DisplaySpeechBackground(MORRY, "Are we getting started here?");
			SetCharacterView(MORRY, 49);
			AnimateCharacter(MORRY, character[MORRY].loop, 5, 1);
		}

		if(MorryIdleCounter== 1) {
		
			MorryIdleSpeech= DisplaySpeechBackground(MORRY, "I'm ready when you are!");
			SetCharacterView(MORRY, 49);
			AnimateCharacter(MORRY, character[MORRY].loop, 5, 1);
		}

		if(MorryIdleCounter== 2) {
		
			MorryIdleSpeech= DisplaySpeechBackground(MORRY, "Man, that was a tough workout...");
			SetCharacterView(MORRY, 49);
			AnimateCharacter(MORRY, character[MORRY].loop, 5, 1);
		}
	}

	else if(GetGlobalInt(29)== 1 && AndersonIdle== 0) {
	
		AndersonIdle= 1;
		ReleaseCharacterView(ANDERSON);
		AndersonIdleCounter= Random(3);
	
		if(AndersonIdleCounter== 0) {
		
			AndersonIdleSpeech= DisplaySpeechBackground(ANDERSON, "Are we getting started here?");
			SetCharacterView(ANDERSON, 51);
			AnimateCharacter(ANDERSON, character[ANDERSON].loop, 5, 1);
		}

		if(AndersonIdleCounter== 1) {
		
			AndersonIdleSpeech= DisplaySpeechBackground(ANDERSON, "I'm ready when you are!");
			SetCharacterView(ANDERSON, 51);
			AnimateCharacter(ANDERSON, character[ANDERSON].loop, 5, 1);
		}

		if(AndersonIdleCounter== 2) {
		
			AndersonIdleSpeech= DisplaySpeechBackground(ANDERSON, "I didn't even learn a finishing move...");
			SetCharacterView(ANDERSON, 51);
			AnimateCharacter(ANDERSON, character[ANDERSON].loop, 5, 1);
		}
	}
}

if(IsOverlayValid(MorryIdleSpeech)== 0) {

	if(MorryIdle== 1) {
	
		ReleaseCharacterView(MORRY);
		MorryIdle= 0;
		SetTimer(1, 200);
	}
}

if(IsOverlayValid(AndersonIdleSpeech)== 0) {

	if(AndersonIdle== 1) {
	
		ReleaseCharacterView(ANDERSON);
		AndersonIdle= 0;
		SetTimer(1, 200);
	}
}
}

$$$!$$$ GS
// main global script file

string madetext;	// the complete concatenated text
int default=1;	     // THE DEFAULT ACTION FOR A RIGHT CLICK
int GuiActive=0;     // SET WHEN THE PLAYER MANUALLY CLICKS ON THE INTERFACE

int SpeechQueueSize= 0;
int OverlayID= -1;		// USED FOR KEEPING TRACK OF THE OVERLAY ID OF DISPLAYSPEECHBACKGROUND MESSAGES USED IN DISPLAYSPEECHNOBLOCK
int CharacterTalking[10];	// USED TO KEEP TRACK OF WHOSE TALKING WITH DISPLAYSPEECHBLOCK
int QPlaying= 1;		// MESSAGE PLAYING IN DISPLAYSPEECHNOBLOCK QUEUE
int SpeechResume= 0;		// FLAG FOR JACKSON TO RESUME SPEECH AFTER WALKING
int ScrollCharacter= 0; 	// VARIABLE USED TO KEEP TRACK OF WHICH CHARACTER THE CAMERA SHOULD FOLLOW

int GuiDefaultButton= -1;
int GuiDefaultPressed= -1;

int CoffeeIdle= 0;		// flag for quincy's idle drink

int HirelingIdle= 0;		// flag for hireling's hawking
int HirelingIdleSpeech= 0;		// variable with idle speech's overlay id

int CliffIdle= 0;
int CliffIdleSpeech= 0;

int WorkerIdle= 0;
int WorkerIdleSpeech= 0;

int TalkieIdle= 0;
int TalkieIdleSpeech= 0;

int GrandpaIdle= 0;
int GrandpaIdleSpeech= 0;

int MomIdle= 0;
int MomIdleSpeech= 0;

int GrandmaIdle= 0;
int GrandmaIdleSpeech= 0;

int BirdIdle= 0;

int MorryIdle= 0;
int MorryIdleSpeech= 0;

int AndersonIdle= 0;
int AndersonIdleSpeech= 0;

int SteveIdle= 0;
int SteveIdleSpeech= 0;

int TrainerIdle= 0;
int TrainerIdleSpeech= 0;

int ThurstonIdle= 0;
int ThurstonIdleSpeech= 0;

/**************************************** UTILITY FUNCTIONS ***********************************/

function DisplaySpeechNoBlock(int characterID, string text, int priority) {			// replacement non-blocking display speech
		
	if(priority== 1) {							// 0 highest priority for each object
	
		if(IsOverlayValid(OverlayID)== 1) {
		  
			RemoveOverlay(OverlayID);
		}

		OverlayID= DisplaySpeechBackground(characterID, text);
		SetCharacterView(characterID, character[characterID].talkview + 1);
		AnimateCharacter(characterID, character[characterID].loop, 4, 1);
		SpeechQueueSize= 1;
		CharacterTalking[SpeechQueueSize]= characterID;
		QPlaying= 1;
	}
	
	else {									// if message is more than 1 line, messages queue up
	
		SpeechQueueSize= priority;
		SetGlobalString(SpeechQueueSize, text);
		CharacterTalking[SpeechQueueSize]= characterID;
	}
}

function CheckSpeech() {

	string buffer;								// to dump GetGlobalString to  
	
	if(IsOverlayValid(OverlayID)== 1) {				// if speech is still up
	
		if(CharacterTalking[QPlaying]== 0 && SpeechResume== 1 && character[MAIN].walking== 0) { // if he is supposed to be talking, and he just finished walking somewhere
		
			SetCharacterView(MAIN, character[MAIN].talkview + 1);
			AnimateCharacter(MAIN, character[MAIN].loop, 4, 1);	// continue animating jackson
			SpeechResume= 0;						// don't need to do this everyloop, just first time after he walked
		}
	}

	else {								// if speech not up
	
		if(OverlayID!= -1) {					// if speech was up
		  
			ReleaseCharacterView(CharacterTalking[QPlaying]);	// stop whoever talked last
			OverlayID= -1;						// set speech to not up
		}
		
		if(SpeechQueueSize> 1) {					// if more stuff to say
		
			QPlaying++;
			GetGlobalString(QPlaying, buffer);
			OverlayID= DisplaySpeechBackground(CharacterTalking[QPlaying], buffer);	// display the new speech
			SetCharacterView(CharacterTalking[QPlaying], character[CharacterTalking[QPlaying]].talkview + 1);
			AnimateCharacter(CharacterTalking[QPlaying], character[CharacterTalking[QPlaying]].loop, 4, 1);				
			
			if(QPlaying== SpeechQueueSize) {			// if the last speech has been displayed
				
				SpeechQueueSize= 0;				// reset the queue
				QPlaying= 1;
			}
		}
		
		else {								// no speech up, nothing left to say

			CharacterTalking[1]= -1;				// no one is talking
			SpeechQueueSize= 0;					// make sure queue is reset
		}
		
	}
}


function Menu() {

	if(IsGUIOn(0)== 0 && IsGUIOn(1)== 0) {		// washer or washing machine gui's aren't on
	  
		if(IsGUIOn(3)) {			// if menu already up, pull it down
		
			GUIOff(4);
			
			if(character[MAIN].room!= 12 && character[MAIN].room!= 9) {
			  
				GUIOn(2);
			}
	
			GUIOff(3);
			SetCursorMode(0);
			SetDefaultCursor();
		}

		else {					// pull menu up

			GUIOff(2);
			
			if(character[MAIN].room!= 12 && character[MAIN].room!= 9) {	// no black screen on map or war room
				
				GUIOn(4);
			}
	
			GUIOn(3);
		}
	}	
}



/********************************** FUNCTION FOR UNHANDLED EVENTS ****************************/

function unhandled_event(int what, int type) {
  
	if(what==1) {			// hotspots
	  
                if(type==1) {		// look at	

			FaceLocation(MAIN, mouse.x, mouse.y);
			Wait(10);
			DisplaySpeechNoBlock(MAIN, "I'm not sure what it is I'm looking at.", 1);
		}

                else if(type==2) {	// interact

			FaceLocation(MAIN, mouse.x, mouse.y);
			Wait(10);
			
			if(ACTION== USE) {

				DisplaySpeechNoBlock(MAIN, "I don't think I can do that.", 1);
			}
	
			else if(ACTION== PUSH) {
			
				DisplaySpeechNoBlock(MAIN, "I don't feel like pushing that...", 1);
			}
	
			else if(ACTION== PULL) {
			
				DisplaySpeechNoBlock(MAIN, "I don't think I could pull that off.", 1);
			}
	
			else if(ACTION== GIVE) {
			
				DisplaySpeechNoBlock(MAIN, "That's not needed.", 1);
			}
	
			else if(ACTION== OPEN) {
			
				DisplaySpeechNoBlock(MAIN, "I can't open it.", 1);
			}
	
			else if(ACTION== CLOSE) {
			 
				DisplaySpeechNoBlock(MAIN, "I can't close it.", 1);
			}
		}

                else if(type==3) {		// use inventory on hotspot
                
			if(game.inv_activated== 1) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't think that needs comforting.", 1);
			}
	
			else if(game.inv_activated== 2) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need to be covered.", 1);
			}
	
			else if(game.inv_activated== 3) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to tie it to that.", 1);
			}
	
			else if(game.inv_activated== 4) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need to be smitten.", 1);
			}
	
			else if(game.inv_activated== 5) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need deep cleansing action.", 1);
			}
	
			else if(game.inv_activated== 6) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't think that's a good spot for it.", 1);
			}
	
			else if(game.inv_activated== 7) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I'm going to save it for now.", 1);
			}	

			else if(game.inv_activated== 8) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I want to keep the blade sharp.", 1);
			}

			else if(game.inv_activated== 9) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "Somebody should want these.", 1);
			}

			else if(game.inv_activated== 10) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That wouldn't accomplish much.", 1);
			}

			else if(game.inv_activated== 11) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "They wouldn't do any good there.", 1);
			}

			else if(game.inv_activated== 12) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I'd rather hold on to it.", 1);
			}

			else if(game.inv_activated== 13) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to get hung up on that.", 1);
			}
	
			else if(game.inv_activated== 14) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't feel like wiping that down.", 1);
			}

			else if(game.inv_activated== 15) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't need to glue that.", 1);
			}

			else if(game.inv_activated== 16) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to take any chances with this...", 1);
			}

			else if(game.inv_activated== 17) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need greasin'.", 1);
			}	

			else if(game.inv_activated== 18) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I'll just hang on to it.", 1);
			}

			else if(game.inv_activated== 19) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "No need to smash it!", 1);
			}

			else if(game.inv_activated== 20) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need a charge.", 1);
			}

			else if(game.inv_activated== 21) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I would prefer a flat surface...", 1);
			}

			else if(game.inv_activated== 22) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need to eat dice.", 1);
			}

			else if(game.inv_activated== 23) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That would just be a mess.", 1);
			}

			else if(game.inv_activated== 24) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to waste it on that!", 1);
			}
	
			else if(game.inv_activated== 25) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I'm not through with it yet.", 1);
			}
	
			else if(game.inv_activated== 26) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "They should take this up front.", 1);
			}

			else if(game.inv_activated== 27) {
			
				ReleaseCharacterView(MAIN);
				character[MAIN].loop= 1;
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "It only fits in the back.", 1);
			}

			else if(game.inv_activated== 28) {

				ReleaseCharacterView(MAIN);
				character[MAIN].loop= 1;			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "It only fits in the back.", 1);
			}

			else if(game.inv_activated== 29) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I should give this to someone.", 1);
			}

			else if(game.inv_activated== 30) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I'm not sure that would work.", 1);
			}
	
			else if(game.inv_activated== 31) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to waste a buck on that!", 1);
			}	

			else if(game.inv_activated== 32) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't think I should leave him there.", 1);
			}

			else if(game.inv_activated== 33) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need cooling.", 1);
			}

			else if(game.inv_activated== 34) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to leave it there.", 1);
			}
	
			else if(game.inv_activated== 35) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I need something to change back into!", 1);
			}
	
			else if(game.inv_activated== 36) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That can't hear!", 1);
			}
	
			else if(game.inv_activated== 37) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That can't hear!", 1);
			}
			
			else {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That wouldn't work.", 1);
			}
                }
			
                else if(type==4) {		// talk to

			FaceLocation(MAIN, mouse.x, mouse.y);
			Wait(5);
			DisplaySpeechNoBlock(MAIN, "That wouldn't have much to say.", 1);
		}

                else if(type==7) {		// pick up

			FaceLocation(MAIN, mouse.x, mouse.y);
			Wait(5);
			DisplaySpeechNoBlock(MAIN, "I don't think I need that.", 1);
		}
        }
      
        else if(what==2) {			// objects
          
                if(type==0) {			// look at

			FaceLocation(MAIN, mouse.x, mouse.y);
			Wait(5);
			DisplaySpeechNoBlock(MAIN, "I'm not sure what it is, but it's cool looking!", 1);
		}

                else if(type==1) {		//  interact 

			FaceLocation(MAIN, mouse.x, mouse.y);
			Wait(10);
			
			if(ACTION== USE) {

				DisplaySpeechNoBlock(MAIN, "That's ludicrous.", 1);
			}
	
			else if(ACTION== PUSH) {
			
				DisplaySpeechNoBlock(MAIN, "I don't feel like pushing that...", 1);
			}
	
			else if(ACTION== PULL) {
			
				DisplaySpeechNoBlock(MAIN, "I don't think I could pull that off.", 1);
			}
	
			else if(ACTION== GIVE) {
			
				DisplaySpeechNoBlock(MAIN, "That's not needed.", 1);
			}
	
			else if(ACTION== OPEN) {
			
				DisplaySpeechNoBlock(MAIN, "I can't open it.", 1);
			}
	
			else if(ACTION== CLOSE) {
			 
				DisplaySpeechNoBlock(MAIN, "I can't close it.", 1);
			}
			
		}

                else if(type==2) {		// talk to

			FaceLocation(MAIN, mouse.x, mouse.y);
			Wait(5);
			DisplaySpeechNoBlock(MAIN, "I'm not that bored.", 1);
		}
                
		else if(type==3) {		// use inventory 

			if(game.inv_activated== 1) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't think that needs comforting.", 1);
			}
	
			else if(game.inv_activated== 2) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need to be covered.", 1);
			}
	
			else if(game.inv_activated== 3) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to tie it to that.", 1);
			}
	
			else if(game.inv_activated== 4) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need to be smitten.", 1);
			}
	
			else if(game.inv_activated== 5) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need deep cleansing action.", 1);
			}
	
			else if(game.inv_activated== 6) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't think that's a good spot for it.", 1);
			}
	
			else if(game.inv_activated== 7) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I'm going to save it for now.", 1);
			}	

			else if(game.inv_activated== 8) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I want to keep the blade sharp.", 1);
			}

			else if(game.inv_activated== 9) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "Somebody should want these.", 1);
			}

			else if(game.inv_activated== 10) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That wouldn't accomplish much.", 1);
			}

			else if(game.inv_activated== 11) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "They wouldn't do any good there.", 1);
			}

			else if(game.inv_activated== 12) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I'd rather hold on to it.", 1);
			}

			else if(game.inv_activated== 13) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to get hung up on that.", 1);
			}
	
			else if(game.inv_activated== 14) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't feel like wiping that down.", 1);
			}

			else if(game.inv_activated== 15) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't need to glue that.", 1);
			}

			else if(game.inv_activated== 16) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to take any chances with this...", 1);
			}

			else if(game.inv_activated== 17) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need greasin'.", 1);
			}	

			else if(game.inv_activated== 18) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I'll just hang on to it.", 1);
			}

			else if(game.inv_activated== 19) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "No need to smash it!", 1);
			}

			else if(game.inv_activated== 20) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need a charge.", 1);
			}

			else if(game.inv_activated== 21) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I would prefer a flat surface...", 1);
			}

			else if(game.inv_activated== 22) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need to eat dice.", 1);
			}

			else if(game.inv_activated== 23) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That would just be a mess.", 1);
			}

			else if(game.inv_activated== 24) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to waste it on that!", 1);
			}
	
			else if(game.inv_activated== 25) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I'm not through with it yet.", 1);
			}
	
			else if(game.inv_activated== 26) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "They should take this up front.", 1);
			}

			else if(game.inv_activated== 27) {
			
				ReleaseCharacterView(MAIN);
				character[MAIN].loop= 1;
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "It only fits in the back.", 1);
			}

			else if(game.inv_activated== 28) {

				ReleaseCharacterView(MAIN);
				character[MAIN].loop= 1;			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "It only fits in the back.", 1);
			}

			else if(game.inv_activated== 29) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I should give this to someone.", 1);
			}

			else if(game.inv_activated== 30) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I'm not sure that would work.", 1);
			}
	
			else if(game.inv_activated== 31) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to waste a buck on that!", 1);
			}	

			else if(game.inv_activated== 32) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't think I should leave him there.", 1);
			}

			else if(game.inv_activated== 33) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That doesn't need cooling.", 1);
			}

			else if(game.inv_activated== 34) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't want to leave it there.", 1);
			}
	
			else if(game.inv_activated== 35) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I need something to change back into!", 1);
			}
	
			else if(game.inv_activated== 36) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That can't hear!", 1);
			}
	
			else if(game.inv_activated== 37) {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That can't hear!", 1);
			}
			
			else {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "That won't work.  Ignoramous.", 1);
			}
		}

		else if(type==5) {

			FaceLocation(MAIN, mouse.x, mouse.y);
			Wait(10);
			DisplaySpeechNoBlock(MAIN, "I can't pick that up.", 1);
		}
	}
      
        else if(what==3) {		// characters
        
		int gender= GetCharacterAt(mouse.x, mouse.y);
          
                if(type==0) {		// look at

			FaceLocation(MAIN, mouse.x, mouse.y);
			Wait(5);
			DisplaySpeechNoBlock(MAIN, "It appears to be alive.", 1);
		}

		else if(type==1) {	// interact

			FaceLocation(MAIN, mouse.x, mouse.y);
			Wait(10);
			
			if(gender== 1 || gender== 5 || gender== 18) {		// if it's a female character
			
				if(ACTION== USE) {
	
					DisplaySpeechNoBlock(MAIN, "I .", 1);
				}
		
				else if(ACTION== PUSH) {
				
					DisplaySpeechNoBlock(MAIN, "I don't want to push her.", 1);
				}
		
				else if(ACTION== PULL) {
				
					DisplaySpeechNoBlock(MAIN, "I could just talk to her...", 1);
				}
		
				else if(ACTION== GIVE) {
				
					DisplaySpeechNoBlock(MAIN, "She won't need that.", 1);
				}
		
				else if(ACTION== OPEN) {
				
					DisplaySpeechNoBlock(MAIN, "That doesn't make sense.", 1);
				}
		
				else if(ACTION== CLOSE) {
				 
					DisplaySpeechNoBlock(MAIN, "There's no deal to close here!", 1);
				}
			}
		}

                else if(type==2) {	// talk to

			FaceLocation(MAIN, mouse.x, mouse.y);
			Wait(5);
			DisplaySpeechNoBlock(MAIN, "I'm not in the mood.", 1);
		}
                
                else if(type==3) {	// use inventory on character
			
			if(gender== 1 || gender== 5 || gender== 18) {		// if it's a female character

				if(game.inv_activated== 1) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I don't think she needs comforting.", 1);
				}
		
				else if(game.inv_activated== 2) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need to be covered.", 1);
				}
		
				else if(game.inv_activated== 3) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I can't tie her up.", 1);
				}
		
				else if(game.inv_activated== 4) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need to be smitten.", 1);
				}
		
				else if(game.inv_activated== 5) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need deep cleansing action.", 1);
				}
		
				else if(game.inv_activated== 6) {	// doorstop
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need a doorstop.", 1);
				}
		
				else if(game.inv_activated== 7) {	// mocha drink
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I'm going to save it for now.", 1);
				}	
	
				else if(game.inv_activated== 8) {	// pocket knife
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "No need for a stabbing.", 1);
				}
	
				else if(game.inv_activated== 9) {	// brownies
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I don't think she needs these.", 1);
				}
	
				else if(game.inv_activated== 10) {	// granny bra
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need to know I have this.", 1);
				}
	
				else if(game.inv_activated== 11) {	// sunflower seeds
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She won't want these.", 1);
				}
	
				else if(game.inv_activated== 12) {	// bath robe
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She's fully dressed.", 1);
				}
	
				else if(game.inv_activated== 13) {	// hangar
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't care about a hangar.", 1);
				}
		
				else if(game.inv_activated== 14) {	// sponge
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need wiping down.", 1);
				}
	
				else if(game.inv_activated== 15) {	// glue gun
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need gluing.", 1);
				}
	
				else if(game.inv_activated== 16) {	// cane
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need a cane...", 1);
				}
	
				else if(game.inv_activated== 17) {	// greasy sponge
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need greasin'.", 1);
				}	
	
				else if(game.inv_activated== 18) {	// quarter
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I'll just hang on to it.", 1);
				}
	
				else if(game.inv_activated== 19) {	// Cd player
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need it.", 1);
				}
	
				else if(game.inv_activated== 20) {	// batteries
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need these.", 1);
				}
	
				else if(game.inv_activated== 21) {	// dice
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She's not interested in a game.", 1);
				}
	
				else if(game.inv_activated== 22) {	// sling bra
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't deserve to eat dice.", 1);
				}
	
				else if(game.inv_activated== 23) {	// ketchup
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "That would just be a mess.", 1);
				}
	
				else if(game.inv_activated== 24) {	// hotdog
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I'd rather keep it.", 1);
				}
		
				else if(game.inv_activated== 25) {	// newspaper
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I'm not through with it yet.", 1);
				}
		
				else if(game.inv_activated== 26) {	// fitness card
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need it.", 1);
				}
	
				else if(game.inv_activated== 27) {	// cable wire
				
					ReleaseCharacterView(MAIN);
					character[MAIN].loop= 1;
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "It only fits in the back.", 1);
				}
	
				else if(game.inv_activated== 28) {	// tv wire
	
					ReleaseCharacterView(MAIN);
					character[MAIN].loop= 1;			
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "It only fits in the back.", 1);
				}
	
				else if(game.inv_activated== 29) {	// coupon
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I think I can take care of this.", 1);
				}
	
				else if(game.inv_activated== 30) {	// kaboom
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need mass.", 1);
				}
		
				else if(game.inv_activated== 31) {	// dollar
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I'd rather keep it.", 1);
				}	
	
				else if(game.inv_activated== 32) {	// walkie talkie
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "No need to introduce them.", 1);
				}
	
				else if(game.inv_activated== 33) {	// cooler
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need cooling.", 1);
				}
	
				else if(game.inv_activated== 34) {	// cutting board
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I don't want to leave it with her...", 1);
				}
		
				else if(game.inv_activated== 35) {	// clothes
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I need something to change back into!", 1);
				}
		
				else if(game.inv_activated== 36) {	// hearing aid
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need hearing aids!", 1);
				}
		
				else if(game.inv_activated== 37) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "She doesn't need hearing aids!", 1);
				}
			}	
			
			else {		// male character

				if(game.inv_activated== 1) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I don't think he needs comforting.", 1);
				}
		
				else if(game.inv_activated== 2) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need to be covered.", 1);
				}
		
				else if(game.inv_activated== 3) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I can't tie him up.", 1);
				}
		
				else if(game.inv_activated== 4) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need to be smitten.", 1);
				}
		
				else if(game.inv_activated== 5) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need deep cleansing action.", 1);
				}
		
				else if(game.inv_activated== 6) {	// doorstop
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need a doorstop.", 1);
				}
		
				else if(game.inv_activated== 7) {	// mocha drink
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I'm going to save it for now.", 1);
				}	
	
				else if(game.inv_activated== 8) {	// pocket knife
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "No need for a stabbing.", 1);
				}
	
				else if(game.inv_activated== 9) {	// brownies
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I don't think he needs these.", 1);
				}
	
				else if(game.inv_activated== 10) {	// granny bra
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need to know I have this.", 1);
				}
	
				else if(game.inv_activated== 11) {	// sunflower seeds
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He won't want these.", 1);
				}
	
				else if(game.inv_activated== 12) {	// bath robe
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He's fully dressed.", 1);
				}
	
				else if(game.inv_activated== 13) {	// hangar
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't care about a hangar.", 1);
				}
		
				else if(game.inv_activated== 14) {	// sponge
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need wiping down.", 1);
				}
	
				else if(game.inv_activated== 15) {	// glue gun
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need gluing.", 1);
				}
	
				else if(game.inv_activated== 16) {	// cane
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need a cane...", 1);
				}
	
				else if(game.inv_activated== 17) {	// greasy sponge
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need greasin'.", 1);
				}	
	
				else if(game.inv_activated== 18) {	// quarter
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I'll just hang on to it.", 1);
				}
	
				else if(game.inv_activated== 19) {	// Cd player
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need it.", 1);
				}
	
				else if(game.inv_activated== 20) {	// batteries
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need these.", 1);
				}
	
				else if(game.inv_activated== 21) {	// dice
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He's not interested in a game.", 1);
				}
	
				else if(game.inv_activated== 22) {	// sling bra
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't deserve to eat dice.", 1);
				}
	
				else if(game.inv_activated== 23) {	// ketchup
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "That would just be a mess.", 1);
				}
	
				else if(game.inv_activated== 24) {	// hotdog
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I'd rather keep it.", 1);
				}
		
				else if(game.inv_activated== 25) {	// newspaper
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I'm not through with it yet.", 1);
				}
		
				else if(game.inv_activated== 26) {	// fitness card
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need it.", 1);
				}
	
				else if(game.inv_activated== 27) {	// cable wire
				
					ReleaseCharacterView(MAIN);
					character[MAIN].loop= 1;
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "It only fits in the back.", 1);
				}
	
				else if(game.inv_activated== 28) {	// tv wire
	
					ReleaseCharacterView(MAIN);
					character[MAIN].loop= 1;			
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "It only fits in the back.", 1);
				}
	
				else if(game.inv_activated== 29) {	// coupon
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I think I can take care of this.", 1);
				}
	
				else if(game.inv_activated== 30) {	// kaboom
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need more mass.", 1);
				}
		
				else if(game.inv_activated== 31) {	// dollar
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I'd rather keep it.", 1);
				}	
	
				else if(game.inv_activated== 32) {	// walkie talkie
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "No need to introduce them.", 1);
				}
	
				else if(game.inv_activated== 33) {	// cooler
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need cooling.", 1);
				}
	
				else if(game.inv_activated== 34) {	// cutting board
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I don't want to leave it with him...", 1);
				}
		
				else if(game.inv_activated== 35) {	// clothes
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "I need something to change back into!", 1);
				}
		
				else if(game.inv_activated== 36) {	// hearing aid
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need hearing aids!", 1);
				}
		
				else if(game.inv_activated== 37) {
				
					FaceLocation(MAIN, mouse.x, mouse.y);
					Wait(5);
					DisplaySpeechNoBlock(MAIN, "He doesn't need hearing aids!", 1);
				}
			}
		}

		else if(type== 5) {		// pick up
		  
			if(gender== 1 || gender== 5 || gender== 18) {		// if it's a female character
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I don't feel like giving out piggy backs.", 1);
			}
	
			else {
			
				FaceLocation(MAIN, mouse.x, mouse.y);
				Wait(5);
				DisplaySpeechNoBlock(MAIN, "I couldn't lift him.", 1);
			}
		}
        }
      
        else if(what==4) {		// nothing
          
                if(type==1) {		// look at

			ProcessClick(mouse.x, mouse.y, 0);
		}

                if(type==2) {		// interact

			ProcessClick(mouse.x, mouse.y, 0);
		}

                if(type==3) {		// use Inventory

			SetActiveInventory(-1);
			ProcessClick(mouse.x, mouse.y, 0);
		}

                if(type==4) {		// talk to nothing

			ProcessClick(mouse.x, mouse.y, 0);
		}
	} 
	
	else if(what== 5) {		// inventory
	
		if(type== 0) {		// look at
		
			DisplaySpeechNoBlock(MAIN, "This could come in handy.", 1);
		}
	
		else if(type== 2) {	// speak
		
			DisplaySpeechNoBlock(MAIN, "It wouldn't have much to say.", 1);
		}

		else if(type== 3) { 		// use inventory 
	
			SetActiveInventory(-1);
			DisplaySpeechNoBlock(MAIN, "That wouldn't be a good combination.", 1);
		}
		
		else if(type== 4) {
		
		
		}
	}
}


/****************************************DIALOG REQUEST*****************************************/

function dialog_request(int xvalue) {					
  
  
	if(xvalue== 1) {			// cut to grandpa downstairs
		
	}
      
	else if(xvalue== 2) {	
	
	}
	
	else if(xvalue== 3) {						
	
		int temp= DisplaySpeechBackground(MAIN, "... I'm going to have to get back to you on this.");
		SetCharacterView(MAIN, 2);
		AnimateCharacter(MAIN, character[MAIN].loop, 5, 1);
		Wait(20);
		SetCharacterView(MOM, 87);
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}

		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MOM, 86);			// bored
		DisplaySpeech(MOM, "You do that.");
		ReleaseCharacterView(MOM);
		SetCharacterSpeechView(MOM, 5);				// normal
		SetCharacterSpeechView(MAIN, 2);
	}
	
    	else if(xvalue== 4) {						// about this whole 'hanging out with the...'
		
		DisplaySpeech(THURSTON, "...yep, and a bird took his cane!");
		Wait(20);
		int temp= DisplaySpeechBackground(MAIN, "... huh?");
		SetCharacterView(MAIN, 2);
		character[MAIN].frame= 3;
		Wait(20);
		ReleaseCharacterView(MAIN);
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}

		DisplaySpeech(THURSTON, "... I was paying for the haute dog when I heard Grandpa hollering!"); 
		DisplaySpeech(THURSTON, "I looked over, and saw him jumping up and down in a fit...");
		DisplaySpeech(THURSTON, "... without his cane!");
		Wait(20);
		SetCharacterSpeechView(MAIN, 67);
		DisplaySpeech(MAIN, "... and what did he say happened?");
		Wait(20);
		DisplaySpeech(THURSTON, "... he took the fifth.");
		SetCharacterView(MAIN, 74);				// bored
		SetCharacterSpeechView(MAIN, 67);
		Wait(20);
		DisplaySpeech(MAIN, "Creative.");
		ReleaseCharacterView(MAIN);
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
	}
	
    	else if(xvalue== 5) {
    	
		MoveCharacterBlocking(MAIN, 187, 113, 1);
		character[MAIN].loop= 2;
		Wait(5);
		character[MAIN].loop= 6;
		character[MAIN].frame= 2;
		PlaySound(4);
		AddInventory(4);
		Wait(10);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		MoveCharacterBlocking(MAIN, 143, 123, 1);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 2;
		Wait(10);
		DisplaySpeech(MAIN, "... ahh... Dexcalibur!");
		Wait(10);
		SetCharacterView(MAIN, 70);
		SetCharacterSpeechView(MAIN, 67);
		Wait(10);
		DisplaySpeech(MAIN, "... it has been too long!");
		SetCharacterView(MAIN, 70);
		Wait(40);
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
	}
	
    	else if(xvalue== 6) {				// special request for walkie talkie noise
    	
		PlaySound(33);
	}
	
	else if(xvalue== 7) {
 
		MoveCharacterBlocking(MAIN, 149, 119, 0);
		character[MAIN].loop= 1;
		Wait(10);
		character[MAIN].loop= 12;
		character[MAIN].frame= 1;
		Wait(10);
		LoseInventory(31);
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
		Wait(10);
		DisplaySpeech(HIRELING, "Yes, sir! ... Here you go!");
		Wait(10);
		PlaySound(22);
		ReleaseCharacterView(HIRELING);
		AnimateCharacterEx(HIRELING, 4, 5, 0, 0, 1);
		character[HIRELING].loop= 1;
		Wait(10);
		character[MAIN].loop= 1;
		Wait(5);
		character[MAIN].loop= 12;
		character[MAIN].frame= 1;
		Wait(15);
		PlaySound(4);
		AddInventory(24);
		SetGlobalInt(56, 1);					// he's bought a hotdog, so he can pickup ketchup
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
		
		character[HIRELING].loop= 0;
		character[HIRELING].frame= 0;
		
		Wait(10);
		character[MAIN].loop= 0;
		Wait(5);
		MoveCharacterBlocking(MAIN, 180, 127, 0);
		character[MAIN].loop= 1;
		Wait(10);
		DisplaySpeech(HIRELING, "Enjoy!");
		
		Wait(10);
		SetDialogOption(4, 1, 2);
		SetDialogOption(4, 2, 2);
	}
	
	else if(xvalue== 8) {
	  
		GUIOn(2);
		character[MOM].loop= 2;
		Wait(5);
		SetCharacterView(MOM, 7);
		ObjectOff(6);
		character[MOM].x= 375;
		character[MOM].y= 120;
		AnimateCharacter(MOM, 1, 10, 0);
		Wait(5);
		AnimateCharacter(MOM, 2, 7, 1);		
		
	}
	else if(xvalue== 9) {
	
		SetCharacterSpeechView(WORKER, 29);
		DisplaySpeech(WORKER, "Right now, I'm working on the...");
		PlaySound(33);
		int temp= DisplaySpeechBackground(TALKIE, "... I'M NOT HEARING ANY HAMMING OUT THERE!");
		AnimateCharacter(TALKIE, character[TALKIE].loop, 5, 1);
		Wait(60);
		ReleaseCharacterView(WORKER);
		character[WORKER].loop= 4;
		Wait(30);
		AnimateCharacterEx(WORKER, 7, 5, 0, 1, 1);
		AnimateCharacterEx(WORKER, 6, 5, 0, 0, 1);		// look right hammering
		AnimateCharacter(WORKER, 5, 6, 1);
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}
		
		ReleaseCharacterView(TALKIE);
		Wait(30);
		PlaySound(33);
		DisplaySpeech(TALKIE, "ANOTHER DISTRACTION LIKE THAT...");
		Wait(10);
		PlaySound(33);
		DisplaySpeech(TALKIE, "... AND YOU'LL HAVE ANOTHER ACCIDENT!");
		Wait(10);
	}
	
	else if(xvalue== 10) {
	
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
		DisplaySpeech(MAIN, "... what was being built here again?");
		ReleaseCharacterView(WORKER);
		SetCharacterSpeechView(WORKER, 29);
		DisplaySpeech(WORKER, "Oh, well, it's going to be a...");
		SetCharacterView(WORKER, 102);
		PlaySound(33);
		DisplaySpeech(TALKIE, "HEY!");
		Wait(10);
		ReleaseCharacterView(WORKER);
		character[WORKER].loop= 4;
		Wait(30);
		AnimateCharacterEx(WORKER, 7, 5, 0, 1, 1);
		AnimateCharacter(WORKER, 6, 5, 1);		// look right hammering
		PlaySound(33);
		DisplaySpeech(TALKIE, "... WHY DO I NEED TO STAY ON YOU LIKE THIS?");
		Wait(10);
		ReleaseCharacterView(WORKER);
		SetCharacterSpeechView(WORKER, 112);
		character[WORKER].loop= 4;
		DisplaySpeech(WORKER, "I'm not exactly...");
		ReleaseCharacterView(WORKER);
		AnimateCharacter(WORKER, 6, 5, 1);		// look right hammering
		Wait(10);
		PlaySound(33);
		DisplaySpeech(TALKIE, "... BACK TO WORK!");
		Wait(10);
		ReleaseCharacterView(WORKER);
		AnimateCharacter(WORKER, 5, 6, 1);
		Wait(30);
	}
	
	else if(xvalue== 11) {
	
		DisplaySpeechBackground(GRANDPA, "... EH?");
		AnimateCharacterEx(GRANDPA, 4, 5, 0, 0, 1);
		Wait(20);
		character[GRANDPA].loop= 1;
		Wait(30);
	}
	
	else if(xvalue== 12) {
	
		Wait(20);
		SetCharacterView(GRANDPA, 115);
		Wait(20);
		ReleaseCharacterView(GRANDPA);
		AnimateCharacterEx(GRANDPA, 11, 5, 0, 0, 1);
		character[GRANDPA].loop= 1;
		Wait(10);
	}
	
	else if(xvalue== 13) {
	
		StartCutscene(5);
		SetCharacterView(GRANDMA, 125);
		SetCharacterIdle(GRANDMA, 126, 4);
		Wait(10);
		int temp= DisplaySpeechBackground(GRANDMA, "Oh, I've got a great STEW simmering for tonight...");
		SetCharacterView(GRANDMA, 43);
		AnimateCharacter(GRANDMA, character[GRANDMA].loop, 5, 1);
		Wait(80);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 2;
		Wait(10);
		SetCharacterView(MAIN, 74);
		Wait(10);
		
		while(IsOverlayValid(temp)) {
		 
			Wait(1);
		}
		
		SetCharacterView(GRANDMA, 125);
		Wait(10);
		SetCharacterSpeechView(GRANDMA, 130);
		DisplaySpeech(GRANDMA, "... it's a little greasy...");
		SetCharacterSpeechView(GRANDMA, 43);
		Wait(10);
		DisplaySpeech(GRANDMA, "... but I'll get some meat on those bones yet!");
		Wait(30);
		ReleaseCharacterView(MAIN);
		character[MAIN].loop= 1;
		Wait(10);
		ReleaseCharacterView(GRANDMA);
		SetCharacterIdle(GRANDMA, 132, 5);
		EndCutscene();
	}
	
	else if(xvalue== 14) {
	
		ReleaseCharacterView(MAIN);
		character[MAIN].loop= 3;
		Wait(40);
		character[MAIN].loop= 1;
		Wait(10);
		DisplaySpeech(MAIN, "I don't get outside much.");
	}
	
	else if(xvalue== 15) {
	
		PlaySound(22);
		AnimateCharacterEx(HIRELING, 4, 5, 0, 0, 1);
		character[HIRELING].loop= 1;
		ReleaseCharacterView(HIRELING);
		Wait(10);
	}
	
	else if(xvalue== 16) {
	
		PlaySound(23);
		AnimateCharacterEx(HIRELING, 4, 5, 0, 1, 1);
		character[HIRELING].loop= 0;
		ReleaseCharacterView(HIRELING);
	}
	
	else if(xvalue== 17) {
	
		StartCutscene(5);
		Wait(20);
		FadeOut(3);
		Wait(40);
		SetScreenTransition(TRANSITION_FADE);
		NewRoom(5);
		character[MOM].room= 5;
		SetGlobalInt(49, 1);					// set cutscene flag
	}
	
	else if(xvalue== 18) {
	
		StartCutscene(5);
		Wait(20);
		ChangeCharacterView(TRAINER, 39);
		SetCharacterSpeechView(TRAINER, 40);
		SetCharacterIdle(TRAINER, 41, 6);
		character[TRAINER].y= 115;
		Wait(20);
		DisplaySpeech(TRAINER, "It's go time!");
		Wait(10);
		MoveCharacterDirect(TRAINER, 150, 115);
		MoveCharacter(MAIN, 114, 117);
		MoveCharacterBlocking(TRAINER, 150, 115, 1);
		MoveCharacterBlocking(MAIN, 114, 117, 0);
		MoveCharacterBlocking(MAIN, 144, 104, 1);
	}
	
	else if(xvalue== 19) {
	
		DisableRegion(1);
		DisableRegion(2);					// disable bounding regions
		DisableRegion(3);
		ReleaseCharacterView(TRAINER);
		MoveCharacter(TRAINER, 219, 97);
		Wait(30);
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
		SetCharacterIdle(MAIN, 61, 5);
		Wait(20);
		MoveCharacter(MAIN, 246, 93);
		
		while(GetViewportY() > 0) {
		
			SetViewport(GetViewportX(), GetViewportY() - 1);
			Wait(1);
		}
		
		MoveCharacterBlocking(TRAINER, 219, 97, 0);
		MoveCharacterBlocking(TRAINER, 169, 83, 1);
		MoveCharacterBlocking(MAIN, 246, 93, 0);
		MoveCharacterBlocking(MAIN, 213, 83, 1);
	}
	
	else if(xvalue== 20) {
	
		StrCopy(character[BIRD].name, "crow with cane");
	}
	
	else if(xvalue== 21) {
	
		StrCopy(character[COFFEE].name, "Quincy");
	}
	
	else if(xvalue== 22) {
	
		StartCutscene(5);
		
		MoveCharacterDirect(MAIN, 160, 102);
		Wait(10);
		SetCharacterView(GRANDPA, 115);
		SetCharacterSpeechView(GRANDPA, 116);
		Wait(10);
		StopMoving(MAIN);
		DisplaySpeech(GRANDPA, "... JUST HOLD IT RIGHT THERE, BOY!");
		SetCharacterView(GRANDPA, 115);
		Wait(20);
		ReleaseCharacterView(GRANDPA);
		AnimateCharacter(GRANDPA, 11, 5, 0);
		Wait(20);
		MoveCharacterDirect(MAIN, 128, 102);
		Wait(5);
		DisplaySpeechBackground(MAIN, "Woah!");
		MoveCharacterBlocking(MAIN, 128, 102, 1);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 2;
		
		while(character[GRANDPA].animating) {
		
			Wait(1);
		}

		SetCharacterView(GRANDPA, 123);
		SetCharacterSpeechView(GRANDPA, 124);
		SetCharacterIdle(GRANDPA, 182, 5);
		character[GRANDPA].loop= 1;
		Wait(20);
		DisplaySpeech(GRANDPA, "HEY, THIS THING WORKS GREAT!");
		SetCharacterView(GRANDPA, 123);
		Wait(10);
		SetCharacterView(MAIN, 72);
		SetCharacterSpeechView(MAIN, 60);
		Wait(20);
		SetCharacterView(MAIN, 3);
		AnimateCharacterEx(MAIN, 12, 5, 0, 0, 1);
		SetCharacterView(MAIN, 78);
		SetCharacterSpeechView(MAIN, 79);
		character[MAIN].loop= 2;
		Wait(20);
		DisplaySpeech(MAIN, "... oh, you wanna dance!");
		SetCharacterView(MAIN, 78);
		Wait(20);
		
		if(GetGlobalInt(43)!= 0) {		// if knuckes is out of cage

			character[MOM].room= 3;
			SetGlobalInt(43, 0);
		}
		
		character[MOM].x= 360;
		character[MOM].y= 130;
		MoveCharacterBlocking(MOM, 266, 126, 0);
		SetCharacterView(MOM, 89);
		SetCharacterSpeechView(MOM, 80);
		Wait(10);
		SetCharacterView(MAIN, 3);
		AnimateCharacterEx(MAIN, 12, 5, 0, 1, 1);
		SetCharacterView(MAIN, 63);
		SetCharacterSpeechView(MAIN, 64);
		character[MAIN].loop= 2;
		Wait(10);
		DisplaySpeech(MOM, "... will you two knock it off!");
		Wait(10);
		ReleaseCharacterView(MOM);
		SetCharacterSpeechView(MOM, 5);
		MoveCharacter(MOM, 360, 130);
		Wait(10);
		DisplaySpeechBackground(MOM, "Sheesh.");
		Wait(20);
		SetCharacterView(MAIN, 72);
		SetCharacterView(MAIN, 60);
		Wait(10);
		DisplaySpeech(MAIN, "He pulled a knife on me!");
		SetCharacterView(MAIN, 72);
		Wait(20);
		ReleaseCharacterView(MOM);
		SetCharacterSpeechView(MOM, 5);
		character[MOM].x= 404;				
		character[MOM].y= 121;
		AnimateCharacter(MOM, 9, 7, 1);			// start vacuuming
		Wait(10);
		DisplaySpeech(GRANDPA, "WHOOOOOP!");
		SetCharacterView(GRANDPA, 123);
		Wait(10);
		SetCharacterView(MAIN, 74);
		Wait(20);
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
		ReleaseCharacterView(GRANDPA);
		SetCharacterSpeechView(GRANDPA, 11);
		SetCharacterIdle(GRANDPA, 12, 5);
		
		EndCutscene();
	}
	
	else if(xvalue== 23) {
	
		MoveCharacterBlocking(MAIN, 187, 113, 1);
		character[MAIN].loop= 2;
		Wait(5);
		character[MAIN].loop= 6;
		character[MAIN].frame= 2;
		Wait(20);
		DisplaySpeech(THURSTON, "Hold on a sec...");
		Wait(10);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		MoveCharacterBlocking(MAIN, 143, 123, 1);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 2;
		Wait(10);
	}
	
	else if(xvalue== 24) {
	
		SetCharacterView(MAIN, 68);
		SetCharacterSpeechView(MAIN, 67);
		Wait(20);
		DisplaySpeech(MAIN, "How was your shower?");
		SetCharacterView(MAIN, 68);
		Wait(10);
		DisplaySpeech(THURSTON, "... not long enough!");
		Wait(20);
		ReleaseCharacterView(MAIN);
		SetCharacterSpeechView(MAIN, 2);
	}
	
	else if(xvalue== 25) {
	
		SetCharacterView(COFFEE, 16);
		AnimateCharacterEx(COFFEE, 4, 6, 0, 0, 1);
	}
	
	else if(xvalue== 26) {
	
		SetCharacterView(GRANDPA, 123);
		Wait(20);
		DisplaySpeech(GRANDPA, "Sure, I'll give you a holler!");
		Wait(10);
		SetCharacterView(MAIN, 74);
		SetCharacterView(GRANDPA, 180);
		int temp= DisplaySpeechBackground(GRANDPA, "WHOOOOOOOOOOO-WHEEEEEEEEEEE!!");
		Wait(50);
		character[GRANDPA].frame= 1;
		Wait(50);
		ReleaseCharacterView(GRANDPA);
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}

		ReleaseCharacterView(MAIN);
	}
	
	else if(xvalue== 27) {
	
		Wait(10);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 1;
		SetCharacterView(MAIN, 61);
		Wait(10);
		SetCharacterView(MAIN, 2);
		character[MAIN].frame= 13;
		int temp= DisplaySpeechBackground(MAIN, "Arggh...");
		Wait(30);
		SetCharacterView(MAIN, 61);
		character[MAIN].frame= 0;
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}

		ReleaseCharacterView(MAIN);
		Wait(10);
		DisplaySpeech(MAIN, "... my eyes!");
		Wait(10);
		DisplaySpeech(MORRY, "It feels great to be warm and ne-kid!");
		Wait(10);
		character[MAIN].loop= 2;
		Wait(20);
	}
	
	else if(xvalue== 28) {
	
		StartCutscene(5);

		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		DisplaySpeech(MAIN, "I brought a board for you to break!");
		Wait(10);
		MoveCharacter(MAIN, 70, 126);
		Wait(30);
		DisplaySpeechBackground(STEVE, "Great!");
		Wait(10);
		character[STEVE].loop= 1;
		
		while(GetViewportX() > 0) {
		
			SetViewport(GetViewportX() - 2, 0);
			Wait(1);
		}
		
		Wait(10);
		DisplaySpeech(STEVE, "... set it up for me!");
		
		MoveCharacterBlocking(MAIN, 70, 126, 0);
		character[MAIN].loop= 1;
		Wait(20);
		character[MAIN].loop= 5;
		character[MAIN].frame= 2;
		Wait(10);
		PlaySound(4);
		ObjectOff(5);
		ObjectOn(6);
		LoseInventory(34);
		SetGlobalInt(27, 2);						// cutting board down
		character[MAIN].loop= 1;
		character[MAIN].frame= 0;
		Wait(20);
		character[MAIN].loop= 0;
		Wait(5);
		MoveCharacter(MAIN, 185, 129);
		Wait(20);
		ReleaseCharacterView(STEVE);
		MoveCharacterDirect(STEVE, 76, 128);
		Wait(30);
		MoveCharacterBlocking(MAIN, 185, 129, 0);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 1;
	
		while(GetViewportX() > 0) {
		
			SetViewport(GetViewportX() - 2, 0);
			Wait(1);
		}
		
		Wait(10);
		PlayMusic(8);
		MoveCharacterBlocking(STEVE, 76, 128, 1);
		Wait(30);
		character[STEVE].loop= 1;
		Wait(40);
		character[STEVE].loop= 0;
		Wait(5);
		character[STEVE].loop= 2;
		Wait(10);
		SetCharacterSpeechView(STEVE, 168);
		DisplaySpeech(STEVE, "... that's nothin'!");
		Wait(10);
		character[STEVE].loop= 0;
		Wait(5);
		character[STEVE].loop= 1;
		Wait(20);
		character[STEVE].x= 78;
		character[STEVE].y= 133;
		ObjectOff(5);
		ReleaseCharacterView(STEVE);
		AnimateCharacterEx(STEVE, 5, 7, 0, 0, 1);
		PlayAmbientSound(1, 34, 100, 65, 125);
		AnimateCharacter(STEVE, 7, 7, 1);
		SetCharacterBaseline(STEVE, 20);
		RemoveWalkableArea(4);
		SetGlobalInt(34, 3);				// steve's state to ko'd
		SetGlobalInt(29, 1);				// anderson's state to rescued
		Wait(60);
		
		while(GetViewportX() < 55) {
		
			SetViewport(GetViewportX()+ 2, 0);
			Wait(1);
		}

		Wait(30);
		character[ANDERSON].loop= 2;
		Wait(10);
		SetMusicRepeat(0);
		PlayMusic(1);
		DisplaySpeech(ANDERSON, "... I guess I can leave now.");
		Wait(10);
		DisplaySpeech(MAIN, "... just what I was thinking.");
		Wait(30);
			
		if(GetGlobalInt(28)== 1) {			// morry is rescued...
		
			SetGlobalInt(13, 9);				// set endgame scene
			FadeOut(1);
			SetScreenTransition(TRANSITION_FADE);
			character[LADYSTUDENT].room= -1;
			character[GUYSTUDENT].room= -1;
			Wait(10);
			StopMusic();
			SetMusicMasterVolume(90);
			EndCutscene();
			Wait(30);
			NewRoom(22);
		}

		else {							// anderson rescued first
		
			SetGlobalInt(13, 8);
			FadeOut(3);
			SetScreenTransition(TRANSITION_FADE);
			character[LADYSTUDENT].room= -1;
			character[GUYSTUDENT].room= -1;
			character[ANDERSON].room= -1;
			SetDialogOption(15, 3, 2);
			SetDialogOption(15, 4, 1);
			Wait(10);
			StopMusic();
			SetMusicMasterVolume(90);
			EndCutscene();
			Wait(30);
			NewRoom(22);
		}
	}
	
	else if(xvalue== 100) {						// a default exit script to turn the GUI back on

		Wait(10);
		SetCharacterSpeechView(MAIN, 2);
		SetCharacterIdle(MAIN, 61, 5);
		
		if(character[MAIN].room== 3) {				// talking to grandpa
		
			SetTimer(1, 400);				// reset idle
		}
		
		else if(character[MAIN].room== 11) {			// if talking to thurston
		
			PlaySound(5);
			ObjectOn(1);
			ThurstonIdle= 0;				// door is closed
			Wait(10);
			SetMusicMasterVolume(90);
			Wait(10);
		}

		else if(character[MAIN].room== 13) {			// if talking to Dino
		
			SetTimer(1, 200);				// restart idle
			SetTimer(3, 100);
			
			if(character[WORKER].animating== 0) {
			
				ReleaseCharacterView(WORKER);
				character[WORKER].loop= 4;
				Wait(30);
				AnimateCharacterEx(WORKER, 7, 5, 0, 1, 1);
				AnimateCharacterEx(WORKER, 6, 5, 0, 0, 1);		// look right hammering
				AnimateCharacter(WORKER, 5, 6, 1);
				Wait(30);
			}
	
			Wait(30);
			SetMusicMasterVolume(90);
		}
		
		else if(character[MAIN].room== 10) {
		  
			character[GRANDMA].loop= 0;
			Wait(5);
			character[GRANDMA].loop= 1;
			Wait(10);
			SetCharacterBaseline(GRANDMA, 132);		// set baseline back for chopping animation
			AnimateCharacterEx(GRANDMA, 4, 5, 0, 0, 1);	// animate her cutting
			AnimateCharacter(GRANDMA, 5, 5, 1);
			SetTimer(2, 500);
		}

		else if(character[MAIN].room== 17) {			// gameshop
		
			if(GetGlobalInt(18)== 0) {			// tv is off
			
				Wait(10);
				ChangeCharacterView(CLIFF, 13);
				SetCharacterIdle(CLIFF, 15, 6);
				AnimateCharacterEx(CLIFF, 4, 5, 0, 1, 1);
				character[CLIFF].loop= 0;
				ReleaseCharacterView(CLIFF);
				PlayMusic(5);
				Wait(10);
				EnableRegion(7);			// workaround for jackson talking with cliff's idle after dialog
			}
	
			else {
			
				Wait(10);
				character[CLIFF].loop= 2;
				ReleaseCharacterView(CLIFF);
			}
		}

		else if(character[MAIN].room== 14) {			// park
		
			if(GetGlobalInt(22)== 0) {			// reset idle animations
			
				SetTimer(1, 200);
			}

			if(character[BIRD].room== 14) {
			  
				SetTimer(2, 500);
			}
	
			EnableRegion(3);
		}

		else if(character[MAIN].room== 20) {
		
			if(GetGlobalInt(28)== 0) {			// morry not rescued
			
				SetTimer(1, 100);
			}
		}

		else if(character[MAIN].room== 19) {			// dojo
		
			SetCharacterSpeechView(MAIN, 35);
			SetCharacterIdle(MAIN, 45, 5);
			DisableRegion(1);
			MoveCharacter(MAIN, 419, 123);
			
			while(GetViewportX() < 260) {
			
				SetViewport(GetViewportX() + 2, 0);
				Wait(1);
			}
			
			MoveCharacterBlocking(MAIN, 419, 123, 0);
			EnableRegion(1);
			
			SetTimer(1, 100);
		}
		

		Wait(10);
		SetMusicMasterVolume(90);
		Wait(10);
        	GUIOn(2);
        	GUIOff(4);
	}
	
	else if(xvalue== 101) {						// special return for mom vacuuming upstairs
	
		Wait(10);
		ReleaseCharacterView(MOM);
		character[MOM].loop= 6;
		character[MOM].frame= 0;
		Wait(10);
		
		if(character[MOM].room== 3) {				// if she's in livingroom, turn on that vacuum
		  
			ObjectOff(0);
			PlayAmbientSound(1, 2, 100, 435, 115);
			
			if(character[GRANDPA].room== 3) {
			
				SetTimer(1, 200);
			}
		}

		else {							// if she's upstairs, turn on that vacuum
		
			ObjectOff(2);
			PlayAmbientSound(1, 2, 100, 230, 133);
		}

		AnimateCharacter(MOM, 9, 7, 1);				// start vacuuming
		SetCharacterSpeechView(MAIN, 2);
		Wait(10);
		SetMusicMasterVolume(90);
		
		GUIOn(2);
	}
}



/*********************************** FUNCTION FOR RESETTING THE GUI ****************************/

function ResetGui() {
SetButtonPic(2, 0, 1, 40);
SetButtonPic(2, 1, 1, 43);
SetButtonPic(2, 2, 1, 49);
SetButtonPic(2, 3, 1, 52);
SetButtonPic(2, 4, 1, 46);
SetButtonPic(2, 5, 1, 340);
SetButtonPic(2, 6, 1, 509);
SetButtonPic(2, 7, 1, 58);
SetButtonPic(2, 8, 1, 55);
}





/********* FUNCTION TO SEE WHAT THE DEFAULT ACTION IS FOR AN OBJECT UNDER THE MOUSE ************/

function GetDefault() {

string buffer;						// string for location name
StrCopy(buffer, "");
int locationtype= GetLocationType(mouse.x, mouse.y);	// variable for what type of thing is under the mouse

if (GuiActive==0 && GetCursorMode()!= 4) {		// if gui verb or inventory item not manually selected...
						
        if(locationtype== 1) {				// if it's a hotspot
        
		ResetGui();				// reset GUI so more than one option doesn't light up  
		
		default= GetHotspotProperty(GetHotspotAt(mouse.x, mouse.y), "DefaultAction");	// get default action
		SetGlobalInt(80, GetHotspotProperty(GetObjectAt(mouse.x, mouse.y), "ExtAction"));
		
		if(default== 2) {			// if we're in extended use modes
		
			SetGlobalInt(80, GetHotspotProperty(GetHotspotAt(mouse.x, mouse.y), "ExtAction"));
		}
		
		if(default== 0) {			// if no default action
				
			SetButtonPic(2, 4, 1, 48);	// default action is look
			GuiDefaultButton= 4;
			GuiDefaultPressed= 1024;
			
			StrCat(madetext, "Walk to ");
		
		}				// 

		else if(default== 1) {			// default action is look at
		
			SetButtonPic(2, 4, 1, 48);	// set button pic to correct default action
			GuiDefaultButton= 4;
			GuiDefaultPressed= 1024;
	
			StrCat(madetext, "Look at ");
		}

		else if(default== 2) {		
		
			if(ACTION== USE) {		// default action is use

				GuiDefaultButton= 6;
				GuiDefaultPressed= 1030; 
				SetButtonPic(2, 6, 1, 511);
		
				StrCat(madetext, "Use ");
			}
	
			else if(ACTION== OPEN) {
			
				GuiDefaultButton= 2;
				GuiDefaultPressed= 1025;
				SetButtonPic(2, 2, 1, 51);
		
				StrCat(madetext, "Open ");
			}
	
			else if(ACTION== CLOSE) {
			
				GuiDefaultButton= 0;
				GuiDefaultPressed= 518;
				SetButtonPic(2, 0, 1, 42);
		
				StrCat(madetext, "Close ");
			}
	
			else if(ACTION== GIVE) {
			
				GuiDefaultButton= 1;
				GuiDefaultPressed= 1023;
				SetButtonPic(2, 1, 1, 45);
		
				StrCat(madetext, "Give ");
			}
	
			else if(ACTION== PUSH) {
			
				GuiDefaultButton= 7;
				GuiDefaultPressed= 1028;
				SetButtonPic(2, 7, 1, 339);
		
				StrCat(madetext, "Push ");
			}
	
			else if(ACTION== PULL) {
			
				GuiDefaultButton= 8;
				GuiDefaultPressed= 1027;
				SetButtonPic(2, 8, 1, 57);
		
				StrCat(madetext, "Pull ");
			}
	
			else if(ACTION== 6) {		// special action, look at on right click, use on left click
			
				GuiDefaultButton= 4;
				GuiDefaultPressed= 1024;

				SetButtonPic(2, 4, 1, 48);	// look at highlighted
			}
	
			else if(ACTION== 7) {
			
				GuiDefaultButton= 2;
				GuiDefaultPressed= 1025;
				SetButtonPic(2, 2, 1, 51);
		
				StrCat(madetext, "Open ");
			}
	
			else if(ACTION== 8) {
			
				GuiDefaultButton= 0;
				GuiDefaultPressed= 518;
				SetButtonPic(2, 0, 1, 42);
		
				StrCat(madetext, "Close ");
			}
		}

		else if(default== 3) {			// default action is talk to
		
			GuiDefaultButton= 5;
			GuiDefaultPressed= 1029;
			SetButtonPic(2, 5, 1, 508);
	
			StrCat(madetext, "Talk to ");
		}

		else if(default== 5) {			// default action is pick up
		
			GuiDefaultButton= 3;
			GuiDefaultPressed= 1026;
			SetButtonPic(2, 3, 1, 54);
	
			StrCat(madetext, "Pick up ");
		}

		GetHotspotPropertyText(GetHotspotAt(mouse.x, mouse.y), "DefaultText", buffer); // get default text
		
		if(StrComp(buffer, "")) {		// if there's a custom text
		
			StrCopy(madetext, buffer);	// override whats in the string
			return 1;
		}

		else return 0;
	}
	
	else if(locationtype== 2) {			// location is a character
	
		ResetGui();				// reset GUI so more than one option doesn't light up 
		
		default= GetCharacterProperty(GetCharacterAt(mouse.x, mouse.y), "DefaultAction");
		SetGlobalInt(80, GetCharacterProperty(GetCharacterAt(mouse.x, mouse.y), "ExtAction"));
		
		if(default== 1) {			// default action is look at
		
			GuiDefaultButton= 4;
			GuiDefaultPressed= 1024;
			SetButtonPic(2, 4, 1, 48);
	
			StrCat(madetext, "Look at ");
		}
		
		else if(default== 3) {
		
			GuiDefaultButton= 5;
			GuiDefaultPressed= 1029;
			SetButtonPic(2, 5, 1, 508);
	
			StrCat(madetext, "Talk to ");
		}

		GetCharacterPropertyText(GetCharacterAt(mouse.x, mouse.y), "DefaultText", buffer);
		
		if(StrComp(buffer, "")) {		// if there's a custom text
		
			StrCopy(madetext, buffer);	// override whats in the string
			return 1;
		}

		else return 0;
	}
	
	else if(locationtype== 3) {			// location is an object
	
		ResetGui();				// reset GUI so more than one option doesn't light up  
		
		default= GetObjectProperty(GetObjectAt(mouse.x, mouse.y), "DefaultAction");
		SetGlobalInt(80, GetObjectProperty(GetObjectAt(mouse.x, mouse.y), "ExtAction"));
	
		if(default== 0) {			// if no default action
		
			GuiDefaultButton= 4;
			GuiDefaultPressed= 1024;
			SetButtonPic(2, 4, 1, 48);	// default action is look
	
			StrCat(madetext, "Walk to ");
		
		}				// 

		else if(default== 1) {			// default action is look at
		
			GuiDefaultButton= 4;
			GuiDefaultPressed= 1024;
			SetButtonPic(2, 4, 1, 48);	// set button pic to correct default action
	
			StrCat(madetext, "Look at ");
		}

		else if(default== 2) {		
		
			if(ACTION== USE) {		// default action is use

				GuiDefaultButton= 6;
				GuiDefaultPressed= 1030;
				SetButtonPic(2, 6, 1, 511);
		
				StrCat(madetext, "Use ");
			}
	
			else if(ACTION== OPEN) {
			
				GuiDefaultButton= 2;
				GuiDefaultPressed= 1025;
				SetButtonPic(2, 2, 1, 51);
		
				StrCat(madetext, "Open ");
			}
	
			else if(ACTION== CLOSE) {
			  
				GuiDefaultButton= 0;
				GuiDefaultPressed= 518;
				SetButtonPic(2, 0, 1, 42);
		
				StrCat(madetext, "Close ");
			}
	
			else if(ACTION== GIVE) {
		
				GuiDefaultButton= 1;
				GuiDefaultPressed= 1023;
				SetButtonPic(2, 1, 1, 45);
		
				StrCat(madetext, "Give ");
			}
	
			else if(ACTION== PUSH) {
			
				GuiDefaultButton= 7;
				GuiDefaultPressed= 1028;
				SetButtonPic(2, 7, 1, 339);
		
				StrCat(madetext, "Push ");
			}
	
			else if(ACTION== PULL) {
			
				GuiDefaultButton= 8;
				GuiDefaultPressed= 1027;
				SetButtonPic(2, 8, 1, 57);
		
				StrCat(madetext, "Pull ");
			}
	
			else if(ACTION== 6) {		// special action, look at on right click, use on left click
			
				GuiDefaultButton= 4;
				GuiDefaultPressed= 48;
				SetButtonPic(2, 4, 1, 48);	// look at highlighted
			}
	
			else if(ACTION== 7) {
			
				GuiDefaultButton= 2;
				GuiDefaultPressed= 1025;
				SetButtonPic(2, 2, 1, 51);
		
				StrCat(madetext, "Open ");
			}
	
			else if(ACTION== 8) {
			
				GuiDefaultButton= 2;
				GuiDefaultPressed= 518;
				SetButtonPic(2, 0, 1, 42);
		
				StrCat(madetext, "Close ");
			}
		}

		else if(default== 3) {			// default action is talk to
		
			GuiDefaultButton= 5;
			GuiDefaultPressed= 1029;
			SetButtonPic(2, 5, 1, 508);
	
			StrCat(madetext, "Talk to ");
		}

		else if(default== 5) {			// default action is pick up
		
			GuiDefaultButton= 3;
			GuiDefaultPressed= 1026;
			SetButtonPic(2, 3, 1, 54);
	
			StrCat(madetext, "Pick up ");
		}

		GetObjectPropertyText(GetObjectAt(mouse.x, mouse.y), "DefaultText", buffer);
		
		if(StrComp(buffer, "")) {		// if there's a custom text
		
			StrCopy(madetext, buffer);	// override whats in the string
			return 1;
		}

		else return 0;
	}
	
	else if(GetInvAt(mouse.x, mouse.y)!= -1) {		// inventory item
	
		GuiDefaultButton= 4;
		GuiDefaultPressed= 48;
		SetButtonPic(2, 4, 1, 48);		// set button pic to correct default action

		StrCat(madetext, "Look at ");
		GetInvName(GetInvAt(mouse.x, mouse.y), buffer);
		StrCat(madetext, buffer);
	}
	
	else if(GetGUIObjectAt(mouse.x, mouse.y)!= -1 && GetGUIAt(mouse.x, mouse.y)== 2) {		// gui button
	  
		if(GetGUIObjectAt(mouse.x, mouse.y)== 0) {		// close
		
			ResetGui();
			SetButtonPic(2, 0, 1, 42);
			StrCat(madetext, "Close ");
		}

		else if(GetGUIObjectAt(mouse.x, mouse.y)== 1) {		// give
		
			ResetGui();
			SetButtonPic(2, 1, 1, 45);
			StrCat(madetext, "Give ");		
		}

		else if(GetGUIObjectAt(mouse.x, mouse.y)== 2) {		// open
		
			ResetGui();
			SetButtonPic(2, 2, 1, 51);
			StrCat(madetext, "Open ");		
		}

		else if(GetGUIObjectAt(mouse.x, mouse.y)== 3) {		// pick up
		
			ResetGui();
			SetButtonPic(2, 3, 1, 54);
			StrCat(madetext, "Pick up ");		
		}

		else if(GetGUIObjectAt(mouse.x, mouse.y)== 4) {		// look at
		
			ResetGui();
			SetButtonPic(2, 4, 1, 48);	
			StrCat(madetext, "Look at ");		
		}

		else if(GetGUIObjectAt(mouse.x, mouse.y)== 5) {		// talk to
		
			ResetGui();
			SetButtonPic(2, 5, 1, 508);
			StrCat(madetext, "Talk to ");		
		}

		else if(GetGUIObjectAt(mouse.x, mouse.y)== 6) {		// use
		
			ResetGui();
			SetButtonPic(2, 6, 1, 511);
			StrCat(madetext, "Use ");		
		}

		else if(GetGUIObjectAt(mouse.x, mouse.y)== 7) {		// push
		
			ResetGui();
			SetButtonPic(2, 7, 1, 339);
			StrCat(madetext, "Push ");		
		}

		else if(GetGUIObjectAt(mouse.x, mouse.y)== 8) {		// pull
		
			ResetGui();
			SetButtonPic(2, 8, 1, 57);
			StrCat(madetext, "Pull ");		
		}

		else if(GetGUIObjectAt(mouse.x, mouse.y)== 9) {		// up arrow
		
			ResetGui();
			StrCat(madetext, "Previous Row of Inventory");		
		}

		else if(GetGUIObjectAt(mouse.x, mouse.y)== 10) {	// down arrow
		
			ResetGui();
			StrCat(madetext, "Next Row of Inventory");		
		}
	}
	
	else {
	
		ResetGui();
		default= 0;
		
		if(GetGUIAt(mouse.x, mouse.y)== -1) {			
		
			GuiDefaultButton= -1;
			GuiDefaultPressed= -1;
			StrCopy(madetext, "Walk to ");			// nothing
		}
		
		if(GetGlobalInt(80)!= 0) {
		
			SetGlobalInt(80, 0);
		}

		return -1;
	}
}
}                   



/*********************************** EXECUTED AT THE BEGINNING OF THE GAME *************************/


function game_start() {
  
	SetGameSpeed(60);
	SetInvDimensions(36, 20);
	system.vsync= 1;
	game.items_per_line=4;
	game.num_inv_displayed=4;
	game.num_inv_displayed=8;
	SetNormalFont(1);
	SetSpeechFont(1);
	game.talkanim_speed= 5;
	game.text_speed= 15;
	game.speech_bubble_width= 300;
	game.disable_antialiasing= 1;
	game.close_mouth_end_speech_time= 15;
	GUIOff(4);					// special GUI screen for scrolling cutscenes
	GUIOff(0);
	GUIOff(1);
	SetScreenTransition(TRANSITION_FADE);		// initial fade in
	SetDigitalMasterVolume(90);
}





/*********************************** ON EVENT ****************************************************/

function on_event(int event, int data) {

	if(event== ADD_INVENTORY) {			// scroll inventory to the top when he gets new items
		  
		game.top_inv_item= (game.num_inv_items / 8) * 4;
		UpdateInventory();
	}
	
	if(event== LEAVE_ROOM) {			// reset room timers 
	
		int timer= 1;
		
		while(timer < 10) {
		
			SetTimer(timer, 0);
			timer++;
		}
	}
}



/********************************** EXECUTED EVERY GAME CYCLE *************************************/



function repeatedly_execute() {

string buffer;							// the name of what's under the mouse
int locationtype;						// int to check if a character is under the mouse
int cur_mode;							// int corresponding to cursor mode
cur_mode= GetCursorMode();					// stores the current cursor mode in the int declared above
GetLocationName(mouse.x, mouse.y, buffer);			// stores location name in string buffer declared above
StrCopy(madetext, "");						// find out what the default option is for what's under the mouse	



if(cur_mode == 1) {
  
	GuiDefaultButton= 4;
	GuiDefaultPressed= 1024;
	StrCat (madetext,"Look at ");
}

else if(cur_mode == 2) {

	if (ACTION== USE) {
	  
		GuiDefaultButton= 6;
		GuiDefaultPressed= 1030;
		StrCat(madetext,"Use ");
	}
	
	if (ACTION== CLOSE) {
	
		GuiDefaultButton= 0;
		GuiDefaultPressed= 518;
		StrCat (madetext,"Close ");
	}
	
	if (ACTION== OPEN) {
	
		GuiDefaultButton= 2;
		GuiDefaultPressed= 1025;
		StrCat (madetext,"Open ");
	}
	
	if (ACTION== GIVE) {
	  
		GuiDefaultButton= 1;
		GuiDefaultPressed= 1023;
		StrCat (madetext,"Give ");
	}

	if (ACTION== PUSH) {
	
		GuiDefaultButton= 7;
		GuiDefaultPressed= 1028;
		StrCat(madetext,"Push ");
	}

	if (ACTION== PULL) {
	  
		GuiDefaultButton= 8;
		GuiDefaultPressed= 1027;
		StrCat(madetext,"Pull ");
	}
}

else if (cur_mode== 3) {

	GuiDefaultButton= 5;
	GuiDefaultPressed= 1029;
	StrCat(madetext,"Talk to ");
}

else if (cur_mode== 4) {
  
	if(ACTION== USE) {			// if item is selected with use
	
		GuiDefaultButton= 6;
		GuiDefaultPressed= 1030;
		StrCat (madetext,"Use ");
        	GetInvName(character[MAIN].activeinv, buffer);
		StrCat(madetext,buffer);
		StrCat(madetext," with ");
	}
	else if(ACTION== GIVE) {		// if item is selected with give
	
		GuiDefaultButton= 4;
		GuiDefaultPressed= 1023;
		StrCat (madetext,"Give ");
		GetInvName(character[MAIN].activeinv, buffer);
		StrCat(madetext,buffer);
		StrCat(madetext," to ");
    	}
}

else if (cur_mode== 5) {
  
	GuiDefaultButton= 3;
	GuiDefaultPressed= 1026;
	StrCat(madetext,"Pick up ");
}

// Find out what's under the cursor, and add it to the status line

GetLocationName(mouse.x,mouse.y,buffer);

if(GetDefault()== 0) {				// if GUI is not active, highlight a default action for right click
						// returns 0 on success, 1 on custom text, 0 on nothing
	StrCat(madetext,buffer);
}

SetLabelText(2, 11, madetext);

}


/******************************** HANDLES THE KEYBOARD *********************************/



function on_key_press(int keycode) {


	// called when a key is pressed. keycode holds the key's ASCII code
	//if (IsGamePaused() == 1) keycode=0;  // game paused, so don't react to keypresses
	
	if (keycode==17)  {

		keycode= 363;
	}
	
	if (keycode== 27) {		// ESC
	
		keycode= 363;
	}
	
	if (keycode==363) {		// F5

		Menu();
	}
	
	if (keycode==365) {		// F7

	}
	
	if (keycode==367) //RestartGame();  // F9
	
	if (keycode==434) {			// F12

		//string ScreenShotName;
		//InputBox("Screen shot name?", ScreenShotName);
		//SaveScreenShot(ScreenShotName);  
	}
	//  if (keycode==9)   InventoryScreen();  // Tab, show inventory
	if (keycode==19)  //Debug(0,0);  // Ctrl-S, give all inventory
	if (keycode==22)  //Debug(1,0);  // Ctrl-V, version
	if (keycode==1)   //Debug(2,0);  // Ctrl-A, show walkable areas
	if (keycode==24)  //Debug(3,0);  // Ctrl-X, teleport to room
	
	if (keycode==26) {	/*	// ctrl-z
	
		string GIntString, ValueString;
		int GInt, Value;
		InputBox("Set Global Int ...", GIntString);
		InputBox("To value ... ", ValueString);
		GInt= StringToInt(GIntString);
		Value= StringToInt(ValueString);
		SetGlobalInt(GInt, Value); */
	}
	
	
	if(keycode== 90) {	/*	// z
	
		string GIntString;
		int GInt;
		InputBox("Global Int...", GIntString);
		GInt= StringToInt(GIntString);
		Display("Global Int %d value is set to %d.", GInt, GetGlobalInt(GInt)); */
	}
	
	if(keycode== 88) {	/*	// x
	
		string Response;
		string ObjectString;
		int Object;
		InputBox("Turn object off or on?", Response);
		InputBox("Which object?", ObjectString);
		Object= StringToInt(ObjectString);
		if(StrComp(Response, "off")== 0) {
		
			ObjectOff(Object);
		}
		else {
		
			ObjectOn(Object);
		} */
	}
	
	if(keycode== 9) {		// ctrl-i
	
		//Display("I'm at %d, %d.", character[MAIN].x, character[MAIN].y);
	}
}




/******************************** HANDLES THE MOUSE **********************************/


function on_mouse_click(int button) {				// called when a mouse button is clicked. button is either LEFT or RIGHT

int cursor_mode= GetCursorMode();

SetGlobalInt(100, mouse.x);
SetGlobalInt(101, mouse.y);

if (IsGamePaused() == 1) {					// Game is paused, so do nothing (ie. don't allow mouse click)

}

if(IsGUIOn(0)== 1 || IsGUIOn(1)== 1 || IsGUIOn(3)) {
  
	if(GetGUIAt(mouse.x, mouse.y)== -1) {			// if the click is on the GUI
	
	}
	
}

else {

	if(IsOverlayValid(OverlayID)== 1) {
	  
		SpeechResume= 1;
		ReleaseCharacterView(MAIN);
	}
		
	if(button==LEFT) {
		
		if(cursor_mode== 0) {
		  
			if(GetGlobalInt(80)>= 6) {			// special left click use mode for doors and exits (set in rep. execute)
			  
				SetGlobalInt(80, 0);			// So he doesn't do the default action
				ReleaseCharacterView(MAIN);
				ProcessClick(mouse.x, mouse.y, 2);
			}
				
			else {
			  
				ReleaseCharacterView(MAIN);		// make sure he's in the walking view
				MoveCharacter(MAIN, mouse.x + GetViewportX(), mouse.y + GetViewportY());
			}
		}
			
		else {
		
			while(IsButtonDown(LEFT)) {
			
				if(GuiDefaultButton!= -1) {
				
					SetButtonPic(2, GuiDefaultButton, 1, GuiDefaultPressed);
				}
		
				Wait(1);
			}
			
			GetDefault();
			ReleaseCharacterView(MAIN);
			ProcessClick(mouse.x, mouse.y, cursor_mode);
			
		}

		SetButtonPic(2, 1, 2, 45);			// reset mouse overs on gui
		SetButtonPic(2, 2, 2, 51);
		SetButtonPic(2, 0, 2, 42);
		SetButtonPic(2, 3, 2, 54);
		SetButtonPic(2, 4, 2, 48);
		SetButtonPic(2, 5, 2, 508);
		SetButtonPic(2, 6, 2, 511);
		SetButtonPic(2, 7, 2, 339);
		SetButtonPic(2, 8, 2, 57);
		SetButtonPic(2, 9, 2, 517);
		SetButtonPic(2, 10, 2, 514);
			
		ResetGui();
		SetCursorMode(0);
		GuiActive= 0;
	}
	
	else if(button==RIGHT) {
	
		SetButtonPic(2, 1, 2, 45);			// reset mouse overs on gui
		SetButtonPic(2, 2, 2, 51);
		SetButtonPic(2, 0, 2, 42);
		SetButtonPic(2, 3, 2, 54);
		SetButtonPic(2, 4, 2, 48);
		SetButtonPic(2, 5, 2, 508);
		SetButtonPic(2, 6, 2, 511);
		SetButtonPic(2, 7, 2, 339);
		SetButtonPic(2, 8, 2, 57);
		SetButtonPic(2, 9, 2, 517);
		SetButtonPic(2, 10, 2, 514);

		if(GuiActive== 0) {
			
			while(IsButtonDown(RIGHT)) {
			
				if(GuiDefaultButton!= -1) {
				  
					SetButtonPic(2 ,GuiDefaultButton, 1, GuiDefaultPressed);
				}
		
				Wait(1);
			}
			
			GetDefault();
			ReleaseCharacterView(MAIN);
			
			if(GetGlobalInt(80)== 6) {				// if special left click use, right click lookat 
				
				default= 1;					// action is now look at
				SetGlobalInt(80, 0);
			}
		
			else if(GetGlobalInt(80)== 7) {				// if speical left click use right click open
		
				default= 2;
				SetGlobalInt(80, 3);
			}
		
			else if(GetGlobalInt(80)== 8) {				// special left click use right click close
			
				default= 2;
				SetGlobalInt(80, 1);
			}
			
			ProcessClick(mouse.x, mouse.y, default);
		}

		SetCursorMode(0);
		GuiActive=0;
	}
	
	else if(button== LEFTINV) {
	
		if(cursor_mode== 0) {
		
			SetActiveInventory(GetInvAt(mouse.x, mouse.y));
			
		}

		else if(cursor_mode== 2) {
		
			if(ACTION== USE) {

				while(IsButtonDown(LEFT)) {
				
					SetButtonPic(2, 6, 1, 1030);
					Wait(1);
				}
		
				if(GetInvAt(mouse.x, mouse.y)== 12 && character[MAIN].room== 19) {	// use bath robe 
	
					if(GetGlobalInt(33)== 0 && GetGlobalInt(34)< 3) {	// hasn't put on and steve isn't knocked out
					  
						SetActiveInventory(-1);
						
						GUIOff(2);
						StartCutscene(5);
						
						character[MAIN].loop= 0;
						Wait(20);
						DisplaySpeech(MAIN, "Time for a quick change.", 1);
						Wait(10);
						MoveCharacterBlocking(MAIN, 514, 98, 0);
						MoveCharacterBlocking(MAIN, 558, 98, 1);
						SetCharacterTransparency(MAIN, 100);
						ChangeCharacterView(MAIN, 7);
						SetCharacterIdle(MAIN, 45, 5);
						character[MAIN].talkview= 34;
						character[MAIN].loop= 1;
						AddInventory(35);
						LoseInventory(12);
						SetGlobalInt(33, 1);
						Wait(20);
						SetCharacterTransparency(MAIN, 0);
						MoveCharacterBlocking(MAIN, 514, 98, 1);
						MoveCharacterBlocking(MAIN, 463, 119, 0);
						SetCursorMode(0);
						Wait(20);
						
						GUIOn(2);
						EndCutscene();
					}
					
					else {
					
						DisplaySpeechNoBlock(MAIN, "I don't need to put that on anymore.", 1);
					}
				}
		
				else {
  
					SetActiveInventory(GetInvAt(mouse.x, mouse.y));
					GetDefault();
				}
			}
	
			else if(ACTION== GIVE) {
			
				while(IsButtonDown(LEFT)) {
				 
					SetButtonPic(2, 1, 1, 1023);
					Wait(1);
				}
	
				SetActiveInventory(GetInvAt(mouse.x, mouse.y));
				GetDefault();
			}
	
			else if(ACTION== OPEN) {
			
				if(GetInvAt(mouse.x, mouse.y)== 19) {	// open normal cd player
						
					ReleaseCharacterView(MAIN);
					Wait(20);
					DisplaySpeech(MAIN, "Let's see what's in here...", 1);
					Wait(10);
					AddInventory(38);
					AddInventory(39);
					LoseInventory(19);
					SetCursorMode(0);
					Wait(20);
				}
		
				else if(GetInvAt(mouse.x, mouse.y)== 39) {	// open , open cd player
				
					if(GetGlobalInt(54)== 0) {		// batteries in player
				
						GUIOff(2);
						StartCutscene(5);
						Wait(20);
						
						SetCharacterView(MAIN, 68);
						SetCharacterSpeechView(MAIN, 67);
						Wait(20);
						DisplaySpeech(MAIN, "I could use these batteries.", 1);
						SetCharacterView(MAIN, 68);
						Wait(10);
						AddInventory(20);
						SetGlobalInt(54, 1);
						ReleaseCharacterView(MAIN);
						SetCharacterSpeechView(MAIN, 2);
						SetCursorMode(0);
						Wait(20);
						
						GUIOn(2);
						EndCutscene();
					}
			
					else {					// batteries out of player
					
						DisplaySpeechNoBlock(MAIN, "I already took the batteries out.", 1);
					}
				}
		
				else if(GetInvAt(mouse.x, mouse.y)== 33) {
				
					DisplaySpeechNoBlock(MAIN, "It's filled with ice.", 1);
				}
		
				else if(GetInvAt(mouse.x, mouse.y)== 30) {
				
					DisplaySpeechNoBlock(MAIN, "It's definitely not for me.", 1);
				}
		
				else {
				
					DisplaySpeechNoBlock(MAIN, "I don't that needs opening.", 1);
					SetCursorMode(0);
					GuiActive= 0;
				}
			}
	
			else if(ACTION== PUSH || ACTION== PULL) {
			
				DisplaySpeechNoBlock(MAIN, "That's not called for...", 1);
				SetCursorMode(0);
				GuiActive= 0;
			}
	
			else if(ACTION== CLOSE) {
			
				DisplaySpeechNoBlock(MAIN, "That doesn't need closing.", 1);
				SetCursorMode(0);
				GuiActive= 0;
			}
		}
	
		else if(cursor_mode== 5) {				// pickup
		
			while(IsButtonDown(LEFT)) {
			
				SetButtonPic(2, 3, 1, 1026);
				Wait(1);
			}
	
			GetDefault();
			DisplaySpeechNoBlock(MAIN, "I already have that.", 1);
			SetCursorMode(0);
			GuiActive= 0;
		}

		else if(cursor_mode== 3) {				// talk to
		
			SetCursorMode(0);
			GuiActive= 0;
		}

		else {
		
			while(IsButtonDown(LEFT)) {
			
				SetButtonPic(2, GuiDefaultButton, 1, GuiDefaultPressed);
				Wait(1);
			}
			
			GetDefault();
			RunInventoryInteraction(GetInvAt(mouse.x, mouse.y), cursor_mode);
		}

		SetButtonPic(2, 1, 2, 45);			// reset mouse overs on gui
		SetButtonPic(2, 2, 2, 51);
		SetButtonPic(2, 0, 2, 42);
		SetButtonPic(2, 3, 2, 54);
		SetButtonPic(2, 4, 2, 48);
		SetButtonPic(2, 5, 2, 508);
		SetButtonPic(2, 6, 2, 511);
		SetButtonPic(2, 7, 2, 339);
		SetButtonPic(2, 8, 2, 57);
		SetButtonPic(2, 9, 2, 517);
		SetButtonPic(2, 10, 2, 514);
			
		ResetGui();
	}
	
	else if(button== RIGHTINV) {
	
		while(IsButtonDown(RIGHT)) {
		
			SetButtonPic(2, 4, 1, 1024);
			Wait(1);
		}
	
		GetDefault();
		RunInventoryInteraction(GetInvAt(mouse.x, mouse.y), 1);
		
		SetCursorMode(0);
		
		SetButtonPic(2, 1, 2, 45);			// reset mouse overs on gui
		SetButtonPic(2, 2, 2, 51);
		SetButtonPic(2, 0, 2, 42);
		SetButtonPic(2, 3, 2, 54);
		SetButtonPic(2, 4, 2, 48);
		SetButtonPic(2, 5, 2, 508);
		SetButtonPic(2, 6, 2, 511);
		SetButtonPic(2, 7, 2, 339);
		SetButtonPic(2, 8, 2, 57);
		SetButtonPic(2, 9, 2, 517);
		SetButtonPic(2, 10, 2, 514);
			
		ResetGui();
		GuiActive= 0;
	}
	
	else if(button== WHEELNORTH) {
	
		if(game.top_inv_item > 0) {
	
			game.top_inv_item= game.top_inv_item - 4;
		}
	}
	
	else if(button== WHEELSOUTH) {

		if(game.top_inv_item < game.num_inv_items - 7) {
	  
			game.top_inv_item= game.top_inv_item + 4;
		}
	}
}

}


	
/********************************* THE INTERFACE SCRIPT ******************************/

function interface_click(int interface, int button) {

if(interface== 2) {				// the main verb gui
  
	if(button == 1) {   // give

		ResetGui();
		
		if(IsButtonDown(LEFT) == 1) {
			
			SetButtonPic(2, 1, 3, 44);
		}

		SetButtonPic(2, 1, 1, 44);	// set to pushed
		
		SetButtonPic(2, 1, 2, 44);	// set to pushed
		SetButtonPic(2, 2, 2, 49);	// set others to no mouse over
		SetButtonPic(2, 0, 2, 40);
		SetButtonPic(2, 3, 2, 52);
		SetButtonPic(2, 4, 2, 46);
		SetButtonPic(2, 5, 2, 340);
		SetButtonPic(2, 6, 2, 509);
		SetButtonPic(2, 7, 2, 58);
		SetButtonPic(2, 8, 2, 55);
		SetButtonPic(2, 9, 2, 515);
		SetButtonPic(2, 10, 2, 512);
		
		SetCursorMode(2);
		SetGlobalInt(80, 2);
		GuiActive= 1;
	}
  
	if (button == 2) {   // open
	
		ResetGui();
		
		if(IsButtonDown(LEFT) == 1) {
			
			SetButtonPic(2, 2, 3, 50);
		}

		SetButtonPic(2, 2, 1, 50);
		
		SetButtonPic(2, 1, 2, 43);
		SetButtonPic(2, 2, 2, 50);
		SetButtonPic(2, 0, 2, 40);
		SetButtonPic(2, 3, 2, 52);
		SetButtonPic(2, 4, 2, 46);
		SetButtonPic(2, 5, 2, 340);
		SetButtonPic(2, 6, 2, 509);
		SetButtonPic(2, 7, 2, 58);
		SetButtonPic(2, 8, 2, 55);
		SetButtonPic(2, 9, 2, 515);
		SetButtonPic(2, 10, 2, 512);
  
		SetCursorMode(2);
		SetGlobalInt(80, 3);
		GuiActive= 1;
	}
  
	if (button == 0) {   // close
	
		ResetGui();
		
		if(IsButtonDown(LEFT) == 1) {
			
			SetButtonPic(2, 0, 3, 41);
		}		
		
		SetButtonPic(2, 0, 1, 41);
		
		SetButtonPic(2, 1, 2, 43);
		SetButtonPic(2, 2, 2, 49);
		SetButtonPic(2, 0, 2, 41);
		SetButtonPic(2, 3, 2, 52);
		SetButtonPic(2, 4, 2, 46);
		SetButtonPic(2, 5, 2, 340);
		SetButtonPic(2, 6, 2, 509);
		SetButtonPic(2, 7, 2, 58);
		SetButtonPic(2, 8, 2, 55);
		SetButtonPic(2, 9, 2, 515);
		SetButtonPic(2, 10, 2, 512);
			
		SetCursorMode(2);
		SetGlobalInt(80, 1);
		GuiActive= 1;
	}

	if (button == 3) {   // pick up
	
		ResetGui();
		
		if(IsButtonDown(LEFT) == 1) {
			
			SetButtonPic(2, 3, 3, 53);
		}		
		
		SetButtonPic(2, 3, 1, 53);

		SetButtonPic(2, 1, 2, 43);
		SetButtonPic(2, 2, 2, 49);
		SetButtonPic(2, 0, 2, 40);
		SetButtonPic(2, 3, 2, 53);
		SetButtonPic(2, 4, 2, 46);
		SetButtonPic(2, 5, 2, 340);
		SetButtonPic(2, 6, 2, 509);
		SetButtonPic(2, 7, 2, 58);
		SetButtonPic(2, 8, 2, 55);
		SetButtonPic(2, 9, 2, 515);
		SetButtonPic(2, 10, 2, 512);
			
		SetCursorMode(5);
		GuiActive=1;
	}
	
	if (button == 4) {   // look at
	
		ResetGui();
		
		if(IsButtonDown(LEFT) == 1) {
			
			SetButtonPic(2, 4, 3, 47);
		}		
		
		SetButtonPic(2, 4, 1, 47);
		
		SetButtonPic(2, 1, 2, 43);
		SetButtonPic(2, 2, 2, 49);
		SetButtonPic(2, 0, 2, 40);
		SetButtonPic(2, 3, 2, 52);
		SetButtonPic(2, 4, 2, 47);
		SetButtonPic(2, 5, 2, 340);
		SetButtonPic(2, 6, 2, 509);
		SetButtonPic(2, 7, 2, 58);
		SetButtonPic(2, 8, 2, 55);
		SetButtonPic(2, 9, 2, 515);
		SetButtonPic(2, 10, 2, 512);
			
		SetCursorMode(1);  
		GuiActive= 1;
	}
	
	if (button == 5) {   // talk to
	
		ResetGui();
		
		if(IsButtonDown(LEFT) == 1) {
			
			SetButtonPic(2, 5, 3, 507);
		}		
		
		SetButtonPic(2, 5, 1, 507);

		SetButtonPic(2, 1, 2, 43);
		SetButtonPic(2, 2, 2, 49);
		SetButtonPic(2, 0, 2, 40);
		SetButtonPic(2, 3, 2, 52);
		SetButtonPic(2, 4, 2, 46);
		SetButtonPic(2, 5, 2, 507);
		SetButtonPic(2, 6, 2, 509);
		SetButtonPic(2, 7, 2, 58);
		SetButtonPic(2, 8, 2, 55);
		SetButtonPic(2, 9, 2, 515);
		SetButtonPic(2, 10, 2, 512);
			
		SetCursorMode(3);
		GuiActive= 1;
	}
	
	if (button == 6) {   // use
	
		ResetGui();
		
		if(IsButtonDown(LEFT) == 1) {
			
			SetButtonPic(2, 6, 3, 510);
		}		
		
		SetButtonPic(2, 6, 1, 510);

		SetButtonPic(2, 1, 2, 43);
		SetButtonPic(2, 2, 2, 49);
		SetButtonPic(2, 0, 2, 40);
		SetButtonPic(2, 3, 2, 52);
		SetButtonPic(2, 4, 2, 46);
		SetButtonPic(2, 5, 2, 340);
		SetButtonPic(2, 6, 2, 510);
		SetButtonPic(2, 7, 2, 58);
		SetButtonPic(2, 8, 2, 55);
		SetButtonPic(2, 9, 2, 515);
		SetButtonPic(2, 10, 2, 512);
			
		SetCursorMode(2);
		SetGlobalInt(80, 0);
		GuiActive= 1;
	}
	
	if (button == 7) {   // push	
	
		ResetGui();
		
		if(IsButtonDown(LEFT) == 1) {
			
			SetButtonPic(2, 7, 3, 59);
		}
	
		SetButtonPic(2, 7, 1, 59);

		SetButtonPic(2, 1, 2, 43);
		SetButtonPic(2, 2, 2, 49);
		SetButtonPic(2, 0, 2, 40);
		SetButtonPic(2, 3, 2, 52);
		SetButtonPic(2, 4, 2, 46);
		SetButtonPic(2, 5, 2, 340);
		SetButtonPic(2, 6, 2, 509);
		SetButtonPic(2, 7, 2, 59);
		SetButtonPic(2, 8, 2, 55);
		SetButtonPic(2, 9, 2, 515);
		SetButtonPic(2, 10, 2, 512);
			
		SetCursorMode(2);
		SetGlobalInt(80, 4);
		GuiActive= 1;
	}
	
	if (button == 8) {   // pull
	
		ResetGui();
		
		if(IsButtonDown(LEFT) == 1) {
			
			SetButtonPic(2, 8, 3, 56);
		}		
		
		SetButtonPic(2, 8, 1, 56);

		SetButtonPic(2, 1, 2, 43);
		SetButtonPic(2, 2, 2, 49);
		SetButtonPic(2, 0, 2, 40);
		SetButtonPic(2, 3, 2, 52);
		SetButtonPic(2, 4, 2, 46);
		SetButtonPic(2, 5, 2, 340);
		SetButtonPic(2, 6, 2, 509);
		SetButtonPic(2, 7, 2, 58);
		SetButtonPic(2, 8, 2, 56);
		SetButtonPic(2, 9, 2, 515);
		SetButtonPic(2, 10, 2, 512);
			
		SetCursorMode(2);
		SetGlobalInt(80, 5);
		GuiActive= 1;
	}

	if(button== 10 && (game.top_inv_item < game.num_inv_items - 7)) {
  
		game.top_inv_item= game.top_inv_item + 4;
	}
	
	if(button == 9 && (game.top_inv_item > 0)) {
	
		game.top_inv_item= game.top_inv_item - 4;
	}
}

else if(interface== 3) {			// in game menu

	if(button== 0) {			// save
	
		if(IsButtonDown(LEFT)== 1) {
		
			SetButtonPic(3, 0, 3, 1181);
		}

		PlaySound(42);

		Wait(10);
		
		Menu();
		SaveGameSlot(1, "current");
	}

	else if(button== 1) {			// load
	
		if(IsButtonDown(LEFT)== 1) {
		
			SetButtonPic(3, 1, 3, 1184);
		}

		PlaySound(42);

		Wait(10);
		
		Menu();
		RestoreGameSlot(1);
	}
	
	if(button== 2) {
	
		while(IsButtonDown(LEFT)== 1) {
		
			SetButtonPic(3, 2, 3, 1187);
		}

		if(GetGUIObjectAt(mouse.x, mouse.y)== 2) {		// if they're sure they want to quit
		
			PlaySound(42);
			Wait(10);
			QuitGame(0);
		}
	}
}

else if(interface== 0) {			// washing machine

	if(button== 0) {				// cold
		
		PlaySound(29);
		SetButtonPic(0, 0, 1, 632);
		SetButtonPic(0, 1, 1, 502);
		SetButtonPic(0, 2, 1, 502);
		SetGlobalInt(38, 0);
	}
	
	else if(button== 1) {				// med
	
		PlaySound(29);  
		SetButtonPic(0, 0, 1, 502);
		SetButtonPic(0, 1, 1, 632);
		SetButtonPic(0, 2, 1, 502);
		SetGlobalInt(38, 1);
	}
	
	else if(button== 2) {				// hot
	  
		PlaySound(29);  
		SetButtonPic(0, 0, 1, 502);
		SetButtonPic(0, 1, 1, 502);
		SetButtonPic(0, 2, 1, 632);
		SetGlobalInt(38, 2);
	}
	
	else if(button== 3) {				// slider
	
		if(GetGlobalInt(37)== 0) {

			PlaySound(35);
			SetGUIObjectPosition(0, 3, 25, 42);
			SetGlobalInt(37, 1);
		}
		
		else if(GetGlobalInt(37)== 1) {
		
			PlaySound(35);
			SetGUIObjectPosition(0, 3, 41, 42);
			SetGlobalInt(37, 2);
		}
		
		else if(GetGlobalInt(37)== 2) {
		
			PlaySound(35);
			SetGUIObjectPosition(0, 3, 10, 42);
			SetGlobalInt(37, 0);
		}
	}
	
	else if(button== 4) {				
	  
		if(GetGlobalInt(37)== 2 && GetGlobalInt(38)== 2) {	// if settings are correct...
			
			SetGlobalInt(16, 1);				// set state to on for brother in shower
			PlaySound(16);
			
			Wait(20);
			GUIOff(0);
			GUIOn(2);
			SetMouseBounds(0, 0, 0, 0);
			Wait(5);
			SetObjectView(4, 53);
			AnimateObject(4, 1, 7, 1);			
			ObjectOn(4);
			
			if(character[CAT].room== 4) {			// if rufus isn't there snoring, turn on ambient noise for washer
				
				StopAmbientSound(1);
			}
	
			PlayAmbientSound(1, 36, 100, 215, 82);
			
			if(GetGlobalInt(17)== 1) {
			
				SetGlobalInt(3, 2);			// if both are on, thurston is out of shower
				GUIOff(2);
				SetMouseBounds(0, 0, 0, 0);

				StartCutscene(5);
				Wait(20);
				SetGlobalInt(36, 2);			// shower cutscene
				SetCharacterTransparency(MAIN, 100);
				NewRoom(6);
			}
	
			else if(GetGlobalInt(58)== 0) {			// if not seen hint cutscene

				SetGlobalInt(58, 1);
				GUIOff(2);
				SetMouseBounds(0, 0, 0, 0);

				StartCutscene(5);
				Wait(20);
				SetGlobalInt(36, 2);			// shower cutscene
				SetCharacterTransparency(MAIN, 100);
				NewRoom(6);			
			
			}
		}
		
		else {
		
			PlaySound(16);
			Wait(20);
			
			GUIOff(0);
			GUIOn(2);
			SetMouseBounds(0, 0, 0, 0);
			Wait(5);
			SetObjectView(4, 53);
			AnimateObject(4, 1, 7, 1);			
			ObjectOn(4);
			
			if(character[CAT].room== 4) {			// if rufus isn't there snoring, turn on ambient noise for washer
				
				StopAmbientSound(1);
			}

			PlayAmbientSound(1, 36, 100, 215, 82);	
			SetCharacterIdle(MAIN, 61, 5);
		}
	}
}

else if(interface== 1) {					// dishwasher

	if(button== 0) {					// first button
	
		PlaySound(29);
		SetButtonPic(1, 0, 1, 1266);			// cycle buttons
		SetButtonPic(1, 1, 1, 1020);
		SetButtonPic(1, 2, 1, 1020);
		SetGlobalInt(47, 1);				// save setting
		SetGlobalInt(17, 0);				// not set right
		Wait(20);
		GUIOff(1);
		SetMouseBounds(0, 0, 0, 0);
		Wait(10);
		ReleaseCharacterView(MAIN);	
		SetTimer(2, 200);				// restart Grandma's idle
		
		if(GetGlobalInt(48)== 0) {			// latch open
		
			ObjectOff(8);
			Wait(5);
			DisplaySpeechNoBlock(MAIN, "Hmmm... it's not on.", 1);
			SetDialogOption(9, 14, 1);		// grandma dialog option
		}

		else {			// if no buttons had been pushed (off), turn on
		
			PlaySound(42);
			Wait(5);
			ObjectOn(8);
			SetObjectView(8, 53);
			AnimateObject(8, 2, 7, 1);
			PlayAmbientSound(1, 36, 100, 302, 94);
			DisplaySpeechNoBlock(MAIN, "It's on...", 1);
			SetDialogOption(9, 14, 2);
		}
	}
	
	else if(button== 1) {					// second button
	
		PlaySound(29);
		SetButtonPic(1, 0, 1, 1020);
		SetButtonPic(1, 1, 1, 1266);
		SetButtonPic(1, 2, 1, 1020);
		SetGlobalInt(47, 2);
		SetGlobalInt(17, 0);
		Wait(20);
		GUIOff(1);
		SetMouseBounds(0, 0, 0, 0);
		Wait(10);
		ReleaseCharacterView(MAIN);
		SetTimer(2, 200);				// restart Grandma's idle
		
		if(GetGlobalInt(48)== 0) {			// latch not closed
		
			ObjectOff(8);
			Wait(5);
			DisplaySpeechNoBlock(MAIN, "Hmmm... it's not on.", 1);
			SetDialogOption(9, 14, 1);		// grandma dialog option
		}

		else {						// turn on
		
			PlaySound(42);
			Wait(5);
			ObjectOn(8);
			SetObjectView(8, 53);
			AnimateObject(8, 2, 7, 1);
			PlayAmbientSound(1, 36, 100, 302, 94);
			DisplaySpeechNoBlock(MAIN, "It's on...", 1);
			SetDialogOption(9, 14, 2);		// grandma dialog option
		}
	}
	
	else if(button== 2) {					// third button
	
		PlaySound(29);
		SetButtonPic(1, 0, 1, 1020);
		SetButtonPic(1, 1, 1, 1020);
		SetButtonPic(1, 2, 1, 1266);
		SetGlobalInt(47, 3);
		Wait(10);
		GUIOff(1);
		SetMouseBounds(0, 0, 0, 0);
		SetDialogOption(9, 14, 2);			// grandma dialog option
		Wait(10);
		ReleaseCharacterView(MAIN);
		
		if(GetGlobalInt(48)== 0) {			// latch not closed
		
			DisplaySpeechNoBlock(MAIN, "Hmmm... it's not on.", 1);
			SetDialogOption(9, 14, 1);		// grandma dialog option
			SetTimer(2, 200);
		}
		
		else {			// if no buttons had been pushed (off), turn on
		
			SetGlobalInt(17, 1);			// correct setting	
		
			PlaySound(42);
			Wait(5);
			ObjectOn(8);
			SetObjectView(8, 53);
			AnimateObject(8, 2, 7, 1);
			PlayAmbientSound(1, 36, 100, 302, 94);
	
			Wait(20);
			
			if(GetGlobalInt(16)== 1) {	// laundry room machine is on and brother is in the shower
			
				SetGlobalInt(3, 2);			// if both are on, thurston is out of shower
			
				Wait(20);
				GUIOff(2);
				StartCutscene(5);
			
				Wait(40);
				SetGlobalInt(36, 2);			// shower cutscene
				SetCharacterTransparency(MAIN, 100);
				NewRoom(6);
			}
			
			else if(GetGlobalInt(58)== 0) {		// hint cutscene, (not turned on)
			
				SetGlobalInt(58, 1);			// dont show cutscene again
				
				Wait(20);
				GUIOff(2);
				StartCutscene(5);
			
				Wait(40);
				SetGlobalInt(36, 2);			// shower cutscene
				SetCharacterTransparency(MAIN, 100);
				NewRoom(6);
			}
	
			else {
			
				DisplaySpeechNoBlock(MAIN, "It's on...", 1);
				SetTimer(2, 200);
			}
		}
	}
	
	else if(button== 3) {					// latch
	
		PlaySound(29);
		SetButtonPic(1, 3, 1, 632);
		SetButtonPic(1, 4, 1, 1022);
		SetButtonPic(1, 4, 3, 1022);
		SetGlobalInt(48, 1);
		
		if(GetGlobalInt(47)== 1 || GetGlobalInt(47)== 2) {		// if one of first two settings set
		
			Wait(20);
			GUIOff(1);
			SetMouseBounds(0, 0, 0, 0);
			Wait(10);
			PlaySound(42);
			Wait(5);
			ObjectOn(8);
			SetObjectView(8, 53);
			AnimateObject(8, 2, 7, 1);
			PlayAmbientSound(1, 36, 100, 302, 94);
			DisplaySpeechNoBlock(MAIN, "It's on...", 1);
			SetDialogOption(9, 14, 2);			// grandma dialog option
			SetTimer(2, 200);
		}

		else if(GetGlobalInt(47)== 3) {
		
			SetGlobalInt(17, 1);			// correct setting	
		
			Wait(20);
			GUIOff(1);
			SetMouseBounds(0, 0, 0, 0);
			SetDialogOption(9, 14, 2);			// grandma dialog option
			Wait(10);
			ReleaseCharacterView(MAIN);
			PlaySound(42);
			Wait(5);
			ObjectOn(8);
			SetObjectView(8, 53);
			AnimateObject(8, 2, 7, 1);
			PlayAmbientSound(1, 36, 100, 302, 94);
	
			Wait(20);
			
			if(GetGlobalInt(16)== 1) {		// laundry room machine is on
			
				SetGlobalInt(3, 2);			// if both are on, thurston is out of shower
			
				Wait(20);
				GUIOff(2);
				StartCutscene(5);
			
				Wait(40);
				SetGlobalInt(36, 2);			// shower cutscene
				SetCharacterTransparency(MAIN, 100);
				NewRoom(6);
			}
			
			else if(GetGlobalInt(58)== 0) {		// hint cutscene, (not turned on)
			
				SetGlobalInt(58, 1);
			
				Wait(20);
				GUIOff(2);
				StartCutscene(5);
			
				Wait(40);
				SetGlobalInt(36, 2);			// shower cutscene
				SetCharacterTransparency(MAIN, 100);
				NewRoom(6);
			}
	
			else {
			
				SetTimer(2, 200);
			}
		}
	}
	
	else if(button== 4) {
	
		PlaySound(29);
		SetButtonPic(1, 3, 1, 1021);
		SetButtonPic(1, 3, 3, 1021);
		SetButtonPic(1, 4, 1, 632);
		SetGlobalInt(48, 0);
		Wait(10);
		ObjectOff(8);
		StopAmbientSound(1);
	}
}

}

/************************************************************INVENTORY STUFF **********************************/


function inventory2_a() {
  // script for inventory2: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It's my stinky blanket.", 1);
}

function inventory2_b() {
  // script for inventory2: Use inventory on this item
  
LoseInventory(1);
LoseInventory(2);
AddInventory(3);
DisplaySpeechNoBlock(MAIN, "One blanket rope, ready for operation!", 1);
}

function inventory1_a() {
  // script for inventory1: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It's my super-comfy comforter.", 1);
}

function inventory1_b() {
  // script for inventory1: Use inventory on this item
  
LoseInventory(1);
LoseInventory(2);
AddInventory(3);
DisplaySpeechNoBlock(MAIN, "One blanket rope, ready for operation!", 1);
}

function inventory5_a() {
  // script for inventory5: Interact with inventory item
  
LoseInventory(5);
DisplaySpeech(MAIN, "Mmmm.  Pure cleanliness.");
DisplaySpeech(MAIN, "Lovely.");
}


	

      
/***************************************************CHARACTER STUFF***********************************************/


function character4_a() {
  // script for character4: Speak to character
  
if(GetGlobalInt(4)== 0) {				// on couch

	MoveCharacter(MAIN, 128, 102);
	
	while(GetViewportX() > 0) {
	
		SetViewport(GetViewportX() - 2, GetViewportY());
		Wait(1);
	}

	MoveCharacterBlocking(MAIN, 128, 102, 0);
	character[MAIN].loop= 2;
	
	if(GrandpaIdle== 1) {
	
		GrandpaIdle= 0;
		
		if(IsOverlayValid(GrandpaIdleSpeech)) {
		  
			RemoveOverlay(GrandpaIdleSpeech);
		}

		ReleaseCharacterView(GRANDPA);
		
	}

	else if(MomIdle== 1) {
	
		MomIdle= 0;
		
		if(IsOverlayValid(MomIdleSpeech)) {
		 
			RemoveOverlay(MomIdleSpeech);
		}

		ReleaseCharacterView(MOM);
		
	}
	
	SetTimer(1, 0);
	SetTimer(2, 0);
	
	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(30);
	DisplaySpeech(MAIN, "Hey Grandpa...");
	DisplaySpeechBackground(GRANDPA, "EH? ...");
	AnimateCharacterEx(GRANDPA, 4, 5, 0, 0, 1);
	Wait(30);
	character[GRANDPA].loop= 1;
	ReleaseCharacterView(GRANDPA);
	Wait(20);
	
	EndCutscene();
	RunDialog(2);
}

else if(GetGlobalInt(4)== 4) {			// has hearing aids

	FaceCharacter(MAIN, GRANDPA);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'd rather not.", 1); 
}

else {			//  upstairs, no hearing aid

	MoveCharacterBlocking(MAIN, 136, 128, 0);
	character[MAIN].loop= 2;
	
	if(GrandpaIdle== 1) {
	
		if(IsOverlayValid(GrandpaIdleSpeech)) {
		 
			RemoveOverlay(GrandpaIdleSpeech);
		}
		
		ReleaseCharacterView(GRANDPA);
	}
	
	SetTimer(1, 0);
	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(30);
	DisplaySpeech(MAIN, "Hey Grandpa...");
	Wait(10);
	DisplaySpeechBackground(GRANDPA, "EH? ...");
	AnimateCharacterEx(GRANDPA, 4, 5, 0, 0, 1);
	Wait(30);
	character[GRANDPA].loop= 1;
	ReleaseCharacterView(GRANDPA);
	Wait(20);
	
	EndCutscene();
	RunDialog(17);
}

}

function character1_a() {
  // script for character1: Speak to character

if(GetGlobalInt(1)== 0 || GetGlobalInt(1)== 2) {						// if she's vacuuming upstairs

	MoveCharacterBlocking(MAIN, 292, 118, 0);
	character[MAIN].loop= 1;
	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	
	GUIOff(2);
	StartCutscene(5);
	
	Wait(20);
	DisplaySpeech(MAIN, "Hey Mom...");
	
	Wait(20);
	PlaySound(38);
	StopAmbientSound(1);	
	Wait(20);
	ReleaseCharacterView(MOM);
	character[MOM].loop= 6;
	character[MOM].frame= 0;
	ObjectOn(2);
	Wait(10);
	character[MOM].loop= 2;
	Wait(10);
	DisplaySpeech(MOM, "Yes?");
	Wait(10);
	EndCutscene();
	Wait(10);
	RunDialog(1);
}

else if(GetGlobalInt(1)== 1 || GetGlobalInt(1)== 3) {			// downstairs vacuuming before or after knuckes is out

	MoveCharacter(MAIN, 472, 116);
	DisableRegion(4);

	while(GetViewportX() < 220) {
	
		SetViewport(GetViewportX() + 2, GetViewportY());
		Wait(1);
	}

	if(MomIdle== 1) {
	
		MomIdle= 0;
		
		if(IsOverlayValid(MomIdleSpeech)) {
		 
			RemoveOverlay(MomIdleSpeech);
		}

		ReleaseCharacterView(MOM);
		SetCharacterView(MOM, 4);
		AnimateCharacter(MOM, 9, 7, 1);			// start vacuuming
	}
	
	SetTimer(1, 0);
	
	MoveCharacterBlocking(MAIN, 472, 116, 0);
	EnableRegion(4);
	character[MAIN].loop= 1;
	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(20);
	DisplaySpeech(MAIN, "Hey Mom.");
	
	Wait(20);
	PlaySound(38);
	StopAmbientSound(1);	
	Wait(20);
	ReleaseCharacterView(MOM);
	character[MOM].loop= 6;
	character[MOM].frame= 0;
	ObjectOn(0);
	Wait(10);
	character[MOM].loop= 2;
	Wait(10);
	DisplaySpeech(MOM, "Hi, honey.");
	Wait(20);
	
	EndCutscene();
	RunDialog(1);
}

}
function inventory3_a() {
  // script for inventory3: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It should be able to support my weight.", 1);
}

function inventory4_a() {
  // script for inventory4: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "I haven't wielded dexcalibur since our last live-action Dungeon Slack campaign...", 1);
}

function inventory5_b() {
  // script for inventory5: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "Deep cleansing action at my fingertips!", 1); 
}

function inventory6_a() {
  // script for inventory6: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It's a rubber door stop.", 1);
}

function inventory8_a() {
  // script for inventory8: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "The blade looks sharp!", 1);
}

function inventory9_a() {
  // script for inventory9: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "These look really good.", 1);
}

function inventory10_a() {
  // script for inventory10: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "What a BIZARRE elastic device...", 1);
DisplaySpeechNoBlock(MAIN, "... what could it possibly be used for?", 2);
}

function inventory12_a() {
  // script for inventory12: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It's Thurston's bath robe.", 1);
}

function inventory13_a() {
  // script for inventory13: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "This wire hangar should come in handy.", 1);
}

function inventory14_a() {
  // script for inventory14: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It's a dry sponge.", 1);
}

function inventory16_a() {
  // script for inventory16: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "Grandpa's had this cane forever.", 1);
}

function character7_a() {
  // script for character7: Speak to character

MoveCharacter(MAIN, 180, 127);

DisableRegion(3);				// hireling idle not needed, enabled in dialog exit

while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, 0);
	Wait(1);
}
  
MoveCharacterBlocking(MAIN, 180, 127, 0);
character[MAIN].loop= 1;
Wait(10);
SetMusicMasterVolume(30);
Wait(10);

if(HirelingIdle== 1) {

	SetTimer(2, 0);
	ReleaseCharacterView(HIRELING);
	
	if(IsOverlayValid(HIRELING)) {
	  
		RemoveOverlay(HirelingIdleSpeech);
	}
	
	HirelingIdle= 0;
}

GUIOff(2);
StartCutscene(5);

if(GetGlobalInt(8)== 0) {			// hasn't talked to him yet

	Wait(20);
	DisplaySpeech(MAIN, "Hello hireling, I...");
	DisplaySpeech(HIRELING, "BEHOLD!");
	PlaySound(22);
	AnimateCharacterEx(HIRELING, 4, 5, 0, 0, 1);
	character[HIRELING].loop= 1;
	ReleaseCharacterView(HIRELING);
	Wait(10);
	DisplaySpeech(HIRELING, "THE 7-LAYER HOTDOG!");
	DisplaySpeech(MAIN, "That's nice but I...");
	DisplaySpeech(HIRELING, "MEAT, CHEESE, ONION, JALAPENO, RELISH, MUSHROOMS, AND CHILE!");
	DisplaySpeech(MAIN, "Ok, but really I...");
	DisplaySpeech(HIRELING, "THE MOST DELICIOUS ENTREE ANY FOOD CONNOISSEUR COULD DREAM OF...");	
	DisplaySpeech(HIRELING, "VOTED BEST HOT DOG BY EVERY MAJOR PERIODICAL IN THE STATE...");
	DisplaySpeech(HIRELING, "YOURS, FOR A SPECIAL SATURDAY MATINEE PRICE...");
	DisplaySpeech(HIRELING, "... OF ONLY ONE DOLLAR!");
	Wait(80);
	DisplaySpeech(MAIN, "Are you done now.");
	PlaySound(23);
	AnimateCharacterEx(HIRELING, 4, 5, 0, 1, 1);
	character[HIRELING].loop= 0;
	DisplaySpeech(HIRELING, "Yeah... I guess I am.");
	SetGlobalInt(8, 1);
	Wait(20);
	
	EndCutscene();
    	RunDialog(4);
}
  
else {			// already talked to him

	Wait(20);  
	DisplaySpeech(MAIN, "Excuse me...");
	DisplaySpeech(HIRELING, "... ready to buy a Haute Dog yet?");
	Wait(20);
	
	EndCutscene();
	RunDialog(4);
}
}

function character8_a() {
  // script for character8: Speak to character

if(GetGlobalInt(9)== 1) {			// after initial talk


}

else if(GetGlobalInt(9)== 2) {			// during workout

	if(IsObjectOn(1)) {

		MoveCharacter(MAIN, 225, 164);
		
		while(GetViewportX() > 0 && GetViewportY() != 25) {
		
			if(GetViewportY() < 25) {
			
				SetViewport(GetViewportX() - 1, GetViewportY() + 1);
			}
	
			else if(GetViewportY() > 25) {
			
				SetViewport(GetViewportX() - 1, GetViewportY() - 1);
			}
			
			Wait(1);
		}
		
		if(TrainerIdle== 1) {
		
			TrainerIdle= 0;
			ReleaseCharacterView(TRAINER);
			
			if(IsOverlayValid(TrainerIdleSpeech)) {
			
				RemoveOverlay(TrainerIdleSpeech);
			}
			
			Wait(1);
		}
		
		MoveCharacterBlocking(MAIN, 225, 164, 0);
		character[MAIN].loop= 1;
		
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
	
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		
		Wait(10);
		DisplaySpeech(MAIN, "Could I ask you a question?");
		Wait(10);
		DisplaySpeech(TRAINER, "Shoot!");
		Wait(20);		
		EndCutscene();
		Wait(10);
		
		RunDialog(14);
	}
		
	else {						// ball is popped
	
		FaceCharacter(MAIN, TRAINER);
		Wait(10);
		
		while(GetViewportY() > character[MAIN].y - 140 && GetViewportY() > 0) {
		
			SetViewport(GetViewportX(), GetViewportY() - 1);
			Wait(1);
		}
		
		if(TrainerIdle== 1) {
		
			TrainerIdle= 0;
			ReleaseCharacterView(TRAINER);
			
			if(IsOverlayValid(TrainerIdleSpeech)) {
			
				RemoveOverlay(TrainerIdleSpeech);
			}
			
			Wait(1);
		}
		
		Wait(10);
		SetMusicMasterVolume(30);
		Wait(10);
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		
		Wait(10);
		DisplaySpeech(MAIN, "Could I ask you a question?");
		Wait(10);
		FaceCharacter(TRAINER, MAIN);
		Wait(10);
		DisplaySpeech(TRAINER, "Shoot!");
		Wait(20);
		
		EndCutscene();
		
		RunDialog(19);
	}
}

else if(GetGlobalInt(9)== 3) {

	FaceCharacter(MAIN, TRAINER);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't want to mess up his concentration.", 1);
} 

else if(GetGlobalInt(9)== 0) {			// if he's sitting down at desk  
	
	MoveCharacterBlocking(MAIN, 163, 129, 0);
	character[MAIN].loop= 2;
	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(10);
	DisplaySpeech(MAIN, "Could I talk to you for a minute?");
	SetCharacterView(TRAINER, 145);
	SetCharacterSpeechView(TRAINER, 146);
	Wait(10);
	DisplaySpeech(TRAINER, "Sure!");
	
	if(GetGlobalInt(21)== 1) {
	  
		ReleaseCharacterView(TRAINER);
		SetCharacterSpeechView(TRAINER, 26);
		Wait(10);
		DisplaySpeech(TRAINER, "You know, I was like you once...");
		SetGlobalInt(21, 2);		// has talked to him once
	}
		
	Wait(20);
	
	EndCutscene();
	RunDialog(5);
}
}

function character9_a() {
  // script for character9: Speak to character

if(GetGlobalInt(63)== 0) {				// if he hasn't talked to dino yet

	MoveCharacter(MAIN, 143, 137);
	
	while(GetViewportX() > 0) {
	  
		if(GetViewportY() > 0) {
		
			SetViewport(GetViewportX() - 2, GetViewportY() - 1);
		}

		else {
		  
			SetViewport(GetViewportX() - 2, GetViewportY());
		}

		Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 143, 137, 0);
	character[MAIN].loop= 1;
	
	if(TalkieIdle== 1) {
	
		if(IsOverlayValid(TalkieIdleSpeech)) {
	
			RemoveOverlay(TalkieIdleSpeech);
		}

		ReleaseCharacterView(TALKIE);
		TalkieIdle= 0;
		WorkerIdle= 0;
	}
	
	else if(WorkerIdle== 1) {
	
		if(IsOverlayValid(WorkerIdleSpeech)) {
	
			RemoveOverlay(WorkerIdleSpeech);
		}

		ReleaseCharacterView(WORKER);
		AnimateCharacter(WORKER, 5, 6, 1);
		TalkieIdle= 0;
		WorkerIdle= 0;
	}
	
	SetTimer(1, 0);
	SetTimer(2, 0);
	Wait(10);
	SetMusicMasterVolume(10);
	PlayMusic(9);
	
	Wait(10);
	GUIOff(2);
	GUIOn(4);				// cover GUI
	StartCutscene(5);
	Wait(30);
	  
	DisplaySpeech(MAIN, "Hello, worker...");
	Wait(10);
	ReleaseCharacterView(WORKER);
	AnimateCharacter(WORKER, 6, 5, 1);			// look right hammering
	Wait(10);
	SetCharacterSpeechView(WORKER, 112);			// look right talking
	character[WORKER].loop= 4;
	DisplaySpeech(WORKER, "Huh?");
	ReleaseCharacterView(WORKER);
	AnimateCharacterEx(WORKER, 7, 5, 0, 0, 1);
	character[WORKER].loop= 4;
	Wait(10);
	character[WORKER].loop= 2;
	Wait(10);
	SetCharacterView(WORKER, 100);
	SetCharacterSpeechView(WORKER, 29);
	Wait(20);
	DisplaySpeech(WORKER, "Oh, hey there kid...");
	Wait(10);
	PlaySound(33);
	int temp= DisplaySpeechBackground(TALKIE, "... WHAT'S THAT?");
	AnimateCharacter(TALKIE, 0, 5, 1);
	Wait(40);
	SetCharacterView(WORKER, 102);
	SetCharacterSpeechView(WORKER, 103);
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	Wait(10);
	PlaySound(33);
	DisplaySpeech(TALKIE, "DID YOU SMASH YOURSELF AGAIN?");
	Wait(10);
	ReleaseCharacterView(WORKER);
	SetCharacterSpeechView(WORKER, 29);
	SetGlobalInt(63, 1);					// set state to talked to
	Wait(10);
	EndCutscene();
	Wait(20);
	
	RunDialog(8);
}

else if(GetGlobalInt(63)== 1) {						// if he has talked to him once

	MoveCharacter(MAIN, 143, 137);
	
	while(GetViewportX() > 0 && GetViewportY() > 0) {
		
			SetViewport(GetViewportX() - 2, GetViewportY() -1);
			Wait(1);
	}
	
	MoveCharacterBlocking(MAIN, 145, 134, 0);
	character[MAIN].loop= 1;
	
	if(TalkieIdle== 1) {
	
		RemoveOverlay(TalkieIdleSpeech);
		ReleaseCharacterView(TALKIE);
		TalkieIdle= 0;
		WorkerIdle= 0;
	}
	
	else if(WorkerIdle== 1) {
	
		RemoveOverlay(WorkerIdleSpeech);
		ReleaseCharacterView(WORKER);
		AnimateCharacter(WORKER, 5, 6, 1);
		TalkieIdle= 0;
		WorkerIdle= 0;
	}
	
	SetTimer(1, 0);
	SetTimer(2, 0);
	Wait(30);
	SetMusicMasterVolume(30);
	PlayMusic(9);
	
	Wait(30);
	GUIOff(2);
	GUIOn(4);				// cover GUI
	  
	DisplaySpeech(MAIN, "Say, worker...");
	Wait(10);
	ReleaseCharacterView(WORKER);
	AnimateCharacter(WORKER, 6, 5, 1);			// look right hammering
	Wait(10);
	AnimateCharacterEx(WORKER, 7, 5, 0, 0, 1);
	character[WORKER].loop= 4;
	Wait(10);
	character[WORKER].loop= 2;
	Wait(10);
	SetCharacterView(WORKER, 28);
	SetCharacterSpeechView(WORKER, 29);
	DisplaySpeech(WORKER, "... yeah?");
	Wait(20);
	
	RunDialog(8);
}
}





function inventory21_a() {
  // script for inventory21: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "These old dice just couldn't crack my starting line-up!", 1);
}

function inventory21_c() {
  // script for inventory21: Talk to inventory item
  
DisplaySpeech(MAIN, "Alright babies, nothing but nat-twenties ok?");
}

function inventory22_a() {
  // script for inventory22: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "This sling should do 1d6 + 1d4 + 1d20 points of damage.", 1);
}

function character12_a() {
  // script for character12: Look at character

FaceCharacter(MAIN, BIRD);
Wait(10);
DisplaySpeechNoBlock(MAIN, "That bird has Grandpa's cane!", 1);
}

function character12_b() {
  // script for character12: Use inventory on character

MoveCharacter(MAIN, 351, 138);

while(GetViewportX() < 220) {

	SetViewport(GetViewportX() + 2, 0);
	Wait(1);
}
  
MoveCharacterBlocking(MAIN, 351, 138, 0);
character[MAIN].loop= 3;

if(BirdIdle== 1) {

	BirdIdle= 0;
	ObjectOff(3);
	MoveObjectDirect(3, 385, 26, 10);
}

SetTimer(1, 0);
SetTimer(2, 0);

Wait(20);
GUIOff(2);
StartCutscene(5);

Wait(20);
character[MAIN].loop= 2;
Wait(5);
character[MAIN].loop= 0;
Wait(10);
DisplaySpeech(MAIN, "... I'll just scare him with a taste of my broadside!");
Wait(10);
character[MAIN].loop= 1;
Wait(5);
character[MAIN].loop= 3;
Wait(10);
DisplaySpeech(MAIN, "... that should be enough to get that cane down!");
Wait(20);
SetCharacterView(MAIN, 3);
AnimateCharacterEx(MAIN, 7, 5, 0, 0, 1);
ReleaseCharacterView(MAIN);
SetCharacterView(MAIN, 3);
character[MAIN].loop= 14;
PlaySound(50);
MoveCharacterDirect(BIRD, character[BIRD].x + 20, character[BIRD].y - 10);
MoveCharacterPath(BIRD, 458, 10);
MoveCharacterPath(BIRD, 480, 33);
MoveCharacterPath(BIRD, 302, 19);
MoveCharacterPath(BIRD, 450, -50);
PlaySound(23);
ObjectOn(0);

int CaneY= GetObjectY(0);

SetObjectPosition(0, GetObjectX(0), 20);

while(GetObjectY(0) < CaneY) {

	SetObjectPosition(0, GetObjectX(0), GetObjectY(0) + 4);
	Wait(1);
}

Wait(10);
AnimateCharacterEx(MAIN, 14, 7, 0, 0, 1);
ReleaseCharacterView(MAIN);
character[MAIN].loop= 3;
LoseInventory(22);
AddInventory(10);
Wait(40);
DisplaySpeech(MAIN, "... look at him flee!");
character[BIRD].room= -1;
SetTimer(1, 200);
SetDialogOption(10, 1, 2);			// no option with coffee drinker
SetDialogOption(10, 5, 2);
Wait(20);

GUIOn(2);
EndCutscene();
}

function character7_b() {
  // script for character7: Look at character
  
FaceCharacter(MAIN, HIRELING);
Wait(10);
DisplaySpeechNoBlock(MAIN, "He enjoys his job.", 1);
}

function inventory23_a() {
  // script for inventory23: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It's a squirt bottle filled with ketchup.", 1);
}

function inventory24_a() {
  // script for inventory24: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It does look pretty good.", 1);
DisplaySpeechNoBlock(MAIN, "Too bad it's a hotdog.", 2);
}

function inventory13_b() {
  // script for inventory13: Interact inventory item
  
if(ACTION== PUSH || PULL) {
 	DisplaySpeech(MAIN, "I guess this might be more useful straightened out.");
  	LoseInventory(13);
      AddInventory(25);
      DisplaySpeech(MAIN, "There, it's now a straight, stiff wire.");
}
}

function character16_a() {
  // script for character16: Talk to character
  
DisplaySpeech(MAIN, "Hey Anderson, what are you doing here?");
DisplaySpeech(ANDERSON, "Stupid karate lessons.");
DisplaySpeech(ANDERSON, "Get me out of here.");
}

function character3_b() {
  // script for character3: Interact character

if(ACTION== USE || ACTION== PUSH || ACTION== PULL) {
  
	if(character[CAT].room== 4 && GetGlobalInt(6)== 0) {			// if cat sleeping in laundry room
	
		MoveCharacterBlocking(MAIN, 120, 117, 0);
		character[MAIN].loop= 2;
		Wait(10);
		PlayMusic(11);
		Wait(10);
		GUIOff(2);
		StartCutscene(5);
		
		Wait(10);
		DisplaySpeech(MAIN, "Hey, Rufus...");
		Wait(10);
		ReleaseCharacterView(CAT);
		
		if(IsObjectOn(4)== 0) {				// washing machine off, restart rufus snoring
		
			StopAmbientSound(1);
		}
		
		AnimateCharacter(CAT, 8, 5, 1);
		Wait(80);
		DisplaySpeechBackground(CAT, "... harumph.");
		Wait(40);
		SetCharacterBaseline(CAT, 150);					// so he's on top of open dryer
		AnimateCharacterEx(CAT, 7, 4, 0, 0, 1);
		SetCharacterBaseline(CAT, 0);
		ReleaseCharacterView(CAT);
		MoveCharacterBlocking(CAT, character[CAT].x, character[CAT].y + 10, 1);
		Wait(20);
		MoveCharacterPath(CAT, 218, 125);
		Wait(20);
		FaceCharacter(MAIN, CAT);
		MoveCharacterPath(CAT, 273, 116);
		MoveCharacterPath(CAT, 350, 116);
		Wait(10);
		character[MAIN].loop= 0;
		Wait(10);
		DisplaySpeech(MAIN, "Ok, well I'll, uh...");
		character[MAIN].loop= 2;
		Wait(10);
		DisplaySpeech(MAIN, "... see you later, then!");
		character[CAT].room= 3;
		SetGlobalInt(44, 1);						// start cutscene of him in livingroom
		Wait(20);
		SetCharacterTransparency(MAIN, 100);
		NewRoom(3);
	}
	
	if(GetGlobalInt(6)== 2) {							// if rufus past mom
	
		MoveCharacterBlocking(MAIN, 403, 129, 0);
		character[MAIN].loop= 1;
		Wait(10);
		PlayMusic(11);
		GUIOff(2);
		StartCutscene(5);
		
		Wait(10);
		DisplaySpeech(MAIN, "C'mon Rufus...");
		Wait(10);
		ReleaseCharacterView(CAT);
		FaceCharacter(CAT, MAIN);
		Wait(10);
		ReleaseCharacterView(CAT);
		MoveCharacter(CAT, 73, 104);
		
		while(GetViewportX() > 0) {
		
			SetViewport(GetViewportX() - 2, 0);
			Wait(1);
		}

		MoveCharacterBlocking(CAT, 73, 104, 0);
		Wait(10);
		SetCharacterView(CAT, 9);
		AnimateCharacter(CAT, 0, 5, 1);
		
		if(character[GRANDPA].room== 3) {				// if grandpa's around
		
			Wait(10);
			PlayMusic(8);
			Wait(10);
			DisplaySpeech(GRANDPA, "HEY, RUFUS!");
			Wait(10);
			ReleaseCharacterView(CAT);
			character[CAT].loop= 2;
			Wait(10);
			DisplaySpeech(GRANDPA, "... CHECK THIS ACTION OUT!");
			Wait(10);
			ReleaseCharacterView(GRANDPA);
			AnimateCharacter(GRANDPA, 11, 5, 0);
			Wait(60);
			DisplaySpeechBackground(CAT, "Meeeooooowwwwrr!");			
			Wait(10);
			PlaySound(46);
			SetCharacterSpeed(CAT, 15);
			ReleaseCharacterView(CAT);
			MoveCharacter(CAT, 411, 67);
			Wait(30);
			
			while(GetViewportX() < 220) {
			
				SetViewport(GetViewportX() + 3, 0);
				Wait(1);
			}
	
			MoveCharacterBlocking(CAT, 411, 67, 0);
			character[CAT].room= 4;
			SetCharacterSpeed(CAT, 11);
			SetGlobalInt(6, 0);					// set state to back in laundry room
			Wait(20);
			character[GRANDPA].loop= 2;
			ReleaseCharacterView(GRANDPA);
			
			while(GetViewportX() > 0) {
			
				SetViewport(GetViewportX() - 2, 0);
				Wait(1);
			}
			
			Wait(10);
			character[GRANDPA].loop= 1;
			Wait(10);
			DisplaySpeech(GRANDPA, "... THAT'S ONE WEIRD CAT!");
			Wait(30);
			
			while(GetViewportX() < 220) {
			
				SetViewport(GetViewportX() + 2, 0);
				Wait(1);
			}
			
			Wait(10);
			DisplaySpeechNoBlock(MAIN, "... that's one weird Grandparent.", 1);
			Wait(30);
			
			GUIOn(2);
			EndCutscene();
		}
	
		else {
		
			SetGlobalInt(6, 3);					// set state to past grandpa
			
			while(GetViewportX() < 220) {
			
				SetViewport(GetViewportX() + 2, 0);
				Wait(1);
			}
			
			Wait(20);
			
			GUIOn(2);
			EndCutscene();
		}
	}
	
	else if(GetGlobalInt(6)== 3) {							// rufus in kitchen
		
		MoveCharacterBlocking(MAIN, 150, 104, 0);
		character[MAIN].loop= 1;
		Wait(10);
		GUIOff(2);
		StartCutscene(5);
		Wait(10);
		DisplaySpeech(MAIN, "... here Rufus!");
		Wait(10);
		
		if(IsObjectOn(2) && GetGlobalInt(62)== 1) {						// if doorstop is down
		
			PlayMusic(10);
			Wait(10);
			ReleaseCharacterView(CAT);
			FaceCharacter(CAT, MAIN);
			Wait(10);
			ReleaseCharacterView(CAT);  
			MoveCharacterBlocking(CAT, 67, 91, 0);
			MoveCharacterBlocking(CAT, 99, 83, 1);
			character[CAT].room= 10;
			SetGlobalInt(6, 4);					// set state to cutscene with Grandma
			Wait(20);
			SetCharacterTransparency(MAIN, 100);
			NewRoom(10);
		}

		else {
		
			PlayMusic(11);
			Wait(10);
			ReleaseCharacterView(CAT);
			FaceCharacter(CAT, MAIN);
			Wait(10);
			ReleaseCharacterView(CAT);
			MoveCharacterBlocking(CAT, 67, 91, 0);
			Wait(10);
			character[CAT].loop= 2;
			Wait(20);
			character[CAT].loop= 0;
			Wait(5);
			character[CAT].loop= 1;
			Wait(20);
			character[CAT].loop= 0;
			Wait(20);
			SetCharacterSpeed(CAT, 15);
			MoveCharacter(CAT, 411, 67);
			Wait(30);
			DisplaySpeechBackground(CAT, "-snort-");
			Wait(10);
			
			while(GetViewportX() < 220) {
			
				SetViewport(GetViewportX() + 3, 0);
				Wait(1);
			}
			
			MoveCharacterBlocking(CAT, 411, 67, 0);
			character[CAT].room= 4;
			SetGlobalInt(6, 0);					// set state to back in laundry room
			SetCharacterSpeed(CAT, 11);
			
			while(GetViewportX() > 0) {
			
				SetViewport(GetViewportX() - 2, 0);
				Wait(1);
			}
	
			Wait(10);
			DisplaySpeechNoBlock(MAIN, "... he was out of options.", 1);
			Wait(30);
			
			GUIOn(2);
			EndCutscene();
		}
	}
}

else if(ACTION== GIVE) {

	FaceCharacter(MAIN, CAT);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... he doesn't like much attention.", 1);
}
}

function character3_a() {
  // script for character3: Talk to character
  
FaceCharacter(MAIN, CAT);
Wait(10);
GUIOff(2);
StartCutscene(5);
Wait(10);
SetMusicMasterVolume(30);
Wait(10);

if(character[CAT].room== 4 && GetGlobalInt(6)== 0) {			// if cat sleeping in laundry room

	ReleaseCharacterView(CAT);
	AnimateCharacter(CAT, 9, 5, 1);
	Wait(30);
}

int counter= Random(2);

if(counter== 0) {					// if he hasn't talked to him
	
	DisplaySpeechNoBlock(MAIN, "Who's a putty-tat!", 1);
}

else if(counter== 1) {

	DisplaySpeechNoBlock(MAIN, "Here kitty-kitty...", 1);

}

else if(counter== 2) {
  
	DisplaySpeechNoBlock(MAIN, "Watcha doin' Rufus...?", 1);
}



if(character[CAT].room== 4 && GetGlobalInt(6)== 0) {			// if cat sleeping in laundry room

	Wait(60);
	ReleaseCharacterView(CAT);
	AnimateCharacter(CAT, 8, 4, 1);
}

Wait(10);
SetMusicMasterVolume(90);
Wait(30);

GUIOn(2);
EndCutscene();
}


function character17_a() {
  // script for character17: Talk to character


MoveCharacter(MAIN, 117, 107);  

while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, GetViewportY());
	Wait(1);
}

MoveCharacterBlocking(MAIN, 117, 107, 0);
character[MAIN].loop= 2;

if(CliffIdle== 1) {

	CliffIdle= 0;
	
	if(IsOverlayValid(CliffIdleSpeech)) {
	
		RemoveOverlay(CliffIdleSpeech);		
	}

	ReleaseCharacterView(CLIFF);
}

Wait(10);
SetMusicMasterVolume(30);
Wait(10);
GUIOff(2);
StartCutscene(5);

Wait(20);
DisplaySpeech(MAIN, "Say, Gamekeep...");
Wait(10);

if(GetGlobalInt(18)== 0) {					// tv off

	SetCharacterView(CLIFF, 13);
	AnimateCharacterEx(CLIFF, 4, 5, 0, 0, 1);
	ChangeCharacterView(CLIFF, 95);
	SetCharacterIdle(CLIFF, 92, 5);
	character[CLIFF].loop= 1;
	ReleaseCharacterView(CLIFF);
	StopMusic();
	Wait(10);
}

else {

	character[CLIFF].loop= 1;
	ChangeCharacterView(CLIFF, 95);
	SetCharacterIdle(CLIFF, 92, 5);
	ReleaseCharacterView(CLIFF);
	Wait(10);
}

DisplaySpeech(CLIFF, "... what was that?");
EndCutscene();
Wait(20);

RunDialog(15);

}

function inventory19_b() {
  // script for inventory19: Look at inventory item
  
}

function inventory19_c() {
  // script for inventory19: Look at inventory item

DisplaySpeechNoBlock(MAIN, "It's a portable CD player.", 1);
}

function inventory25_a() {
  // script for inventory25: Look at inventory item
  
if(GetGlobalInt(40)== 0 && GetGlobalInt(50)== 1) {	// if he hasn't found coupon and he's read the ad  

	StopMoving(MAIN);
	DisplaySpeechNoBlock(MAIN, "Hey, there's a free coupon for that Kaboom! stuff in here!", 1);
	PlaySound(4);
	Wait(10);
	AddInventory(29);
	SetGlobalInt(40, 1);				// set state to found coupon
}

else if(GetGlobalInt(40)== 1) {
  
	DisplaySpeechNoBlock(MAIN, "I already ripped the Kaboom! coupon out.", 1);
}

else if(GetGlobalInt(50)== 0) {

	DisplaySpeechNoBlock(MAIN, "It's today's copy of the local newspaper.", 1);
}
}

function character8_b() {
  // script for character8: Interact character
  
}

function character8_c() {
  // script for character8: Use inventory on character

if(ACTION== GIVE || ACTION== USE) {  

	MoveCharacterBlocking(MAIN, 239, 130, 0);
	character[MAIN].loop= 3;
	SetCharacterIdle(TRAINER, -1, 1);					// disable idle stuff
	Wait(20);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(40);
	DisplaySpeech(MAIN, "I found a coupon in the paper for that Kaboom! stuff over there!");
	SetCharacterView(TRAINER, 145);
	SetCharacterSpeechView(TRAINER, 146);
	Wait(10);
	DisplaySpeech(TRAINER, "Cool!");
	Wait(10);
	ReleaseCharacterView(TRAINER);
	SetCharacterSpeechView(TRAINER, 26);
	Wait(20);
	DisplaySpeech(TRAINER, "... I knew you were looking to beef up!");
	Wait(10);
	character[MAIN].loop= 7;
	character[MAIN].frame= 1;
	Wait(15);
	LoseInventory(29);
	SetGlobalInt(20, 1);					// set state so he can pick up the container
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
	Wait(10);
	DisplaySpeech(TRAINER, "Grab one from the display over there...");
	Wait(20);
	ReleaseCharacterView(MAIN);
	MoveCharacter(MAIN, 105, 131);
	Wait(20);
	SetCharacterView(TRAINER, 145);
	SetCharacterSpeechView(TRAINER, 146);
	Wait(20);
	StopMoving(MAIN);
	DisplaySpeech(TRAINER, "Don't worry, sport...");
	SetCharacterView(TRAINER, 147);
	Wait(10);
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	character[MAIN].loop= 0;
	Wait(5);
	character[MAIN].loop= 2;
	Wait(10);
	SetCharacterView(TRAINER, 147);
	SetCharacterSpeechView(TRAINER, 148);
	Wait(20);
	DisplaySpeech(TRAINER, "... you'll be up to a buck-fifty in no time!");
	SetCharacterView(MAIN, 74);
	SetCharacterSpeechView(MAIN, 67);
	Wait(40);
	character[MAIN].loop= 0;
	Wait(5);
	character[MAIN].loop= 1;
	Wait(10);
	DisplaySpeech(MAIN, "This is so humiliating...");
	ReleaseCharacterView(TRAINER);
	SetCharacterSpeechView(TRAINER, 26);
	SetCharacterIdle(TRAINER, 27, 5);
	Wait(20);
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	
	GUIOn(2);
	EndCutscene();
}

}


function inventory10_b() {
  // script for inventory10: Use inventory on this item

StopMoving(MAIN);
DisplaySpeechNoBlock(MAIN, "Say... this could make a good sling!", 1);
Wait(10);
PlaySound(22); 
AddInventory(22);					// add double barreled sling
LoseInventory(21);					// lose dice
LoseInventory(10);					// lose bra
}

function inventory21_b() {
  // script for inventory21: Use inventory on this item
  
StopMoving(MAIN);
DisplaySpeechNoBlock(MAIN, "Say... this could make a good sling!", 1);
Wait(10);
PlaySound(22);  
AddInventory(22);					// add double barreled sling
LoseInventory(21);					// lose dice
LoseInventory(10);					// lose bra
}


function character10_a() {
  // script for character10: Use inventory on character

MoveCharacter(MAIN, 218, 123);

if(GetViewportX() < 60) {

	while(GetViewportX() < 60) {
	
		SetViewport(GetViewportX() + 2, 0);
		Wait(1);
	}
}

else if(GetViewportX() > 60) {

	while(GetViewportX() > 60) {
	
		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}
}
  
MoveCharacterBlocking(MAIN, 218, 123, 0);
character[MAIN].loop= 2;

if(CoffeeIdle== 1) {

	while(character[COFFEE].animating) {
	
		Wait(1);
	}
	
	ReleaseCharacterView(COFFEE);
	CoffeeIdle= 0;
}

if(HirelingIdle== 1) {

	if(IsOverlayValid(HirelingIdleSpeech)) { 

		RemoveOverlay(HirelingIdleSpeech); 
	}
	
	ReleaseCharacterView(HIRELING);
	HirelingIdle= 0;
}

if(BirdIdle== 1) {

	BirdIdle= 0;
	ObjectOff(3);
	MoveObjectDirect(3, 385, 26, 10);
}

SetTimer(1, 0);
SetTimer(2, 0);
Wait(10);
SetMusicMasterVolume(30);
Wait(10);
GUIOff(2);
StartCutscene(5);

Wait(20);
SetCharacterView(MAIN, 68);
SetCharacterSpeechView(MAIN, 67);
Wait(20);
character[MAIN].loop= 0;
Wait(5);
character[MAIN].loop= 1;
Wait(10);
DisplaySpeech(MAIN, "Maybe he'll give up that last drink...");
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 69);
Wait(10);
DisplaySpeech(MAIN, "... if he gets a taste of Kaboom! again!");
Wait(20);
SetCharacterView(MAIN, 68);
Wait(30);
character[MAIN].loop= 0;
Wait(5);
character[MAIN].loop= 2;
Wait(40);
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 2);

MoveCharacterDirect(MAIN, 228, 114);

while(GetViewportX() < 120) {

	SetViewport(GetViewportX() + 2, GetViewportY());
	Wait(1);
}

MoveCharacterBlocking(MAIN, 228, 114, 1);
SetCharacterView(MAIN, 70);
Wait(20);
SetCharacterView(MAIN, 3);
AnimateCharacterEx(MAIN, 4, 6, 0, 0, 1);
SetCharacterView(MAIN, 70);
character[MAIN].loop= 2;
Wait(20);
SetGlobalInt(22, 1);
ReleaseCharacterView(MAIN);					// set state to having protein shake in his drink
MoveCharacterBlocking(MAIN, 218, 123, 1);
character[MAIN].loop= 0;
Wait(5);
character[MAIN].loop= 2;
Wait(40);

SetCharacterView(COFFEE, 135);
Wait(20);
SetCharacterView(COFFEE, 137);
Wait(5);
SetCharacterView(COFFEE, 135);
Wait(20);
ReleaseCharacterView(COFFEE);
Wait(10);


SetCharacterView(COFFEE, 16);
AnimateCharacterEx(COFFEE, 4, 8, 0, 0, 1);
ReleaseCharacterView(COFFEE);
Wait(60);

AnimateCharacterEx(COFFEE, 5, 8, 0, 0, 1);
Wait(30);
DisplaySpeech(COFFEE, "That tasted funny...");
Wait(30);
PlaySound(19);
AnimateCharacterEx(COFFEE, 5, 7, 0, 0, 1);
AnimateCharacterEx(COFFEE, 5, 7, 0, 0, 1);
AnimateCharacterEx(COFFEE, 6, 7, 0, 0, 1);
PlaySound(19);
AnimateCharacterEx(COFFEE, 7, 7, 0, 0, 1);
AnimateCharacterEx(COFFEE, 7, 7, 0, 0, 1);
AnimateCharacterEx(COFFEE, 6, 7, 0, 1, 1);
PlaySound(19);
AnimateCharacterEx(COFFEE, 8, 7, 0, 0, 1);
PlaySound(49);
character[COFFEE].loop= 9;
int temp= DisplaySpeechBackground(COFFEE, "Wooooo-hooooooooooooo!");

while(character[COFFEE].y > -100) {

	character[COFFEE].y= character[COFFEE].y - 5;
	Wait(1);
}

if(IsOverlayValid(temp)) { 			// remove wooohooo without accidentally crashing the game

	RemoveOverlay(temp); 
}

Wait(20);
character[COFFEE].room= -1;
Wait(10);
SetCharacterView(MAIN, 73);
SetCharacterSpeechView(MAIN, 64);
Wait(30);

while(GetViewportX() > 60) {

	SetViewport(GetViewportX() - 2, GetViewportY());
	Wait(1);
}

Wait(20);
DisplaySpeech(MAIN, "I guess that worked...", 1);
SetDialogOption(10, 9, 2);
SetDialogOption(10, 11, 1);
SetTimer(2, 100);
Wait(10);
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 2);
Wait(10);
SetMusicMasterVolume(90);
Wait(10);

GUIOn(2);
EndCutscene();

}

function character4_b() {
  // script for character4: Use inventory on character

MoveCharacter(MAIN, 126, 102);
	
while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, GetViewportY());
	Wait(1);
}
  
MoveCharacterBlocking(MAIN, 126, 102, 0);
character[MAIN].loop= 2;

if(GrandpaIdle== 1) {

	if(IsOverlayValid(GrandpaIdleSpeech)) {
	 
		RemoveOverlay(GrandpaIdleSpeech);
	}
	
	ReleaseCharacterView(GRANDPA);
}

SetTimer(1, 0);

Wait(10);
SetMusicMasterVolume(30);
Wait(10);
GUIOff(2);
StartCutscene(5);

Wait(30);
DisplaySpeech(MAIN, "Hey Grandpa...");
DisplaySpeech(MAIN, "... look what I found!");
Wait(10);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(15);
LoseInventory(16);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(30);
SetCharacterView(GRANDPA, 120);
SetCharacterSpeechView(GRANDPA, 121);
Wait(20);
DisplaySpeech(GRANDPA, "... BUT... HOW DID YOU KILL THAT BIRD?");
Wait(10);
SetCharacterView(MAIN, 74);
SetCharacterSpeechView(MAIN, 67);
Wait(10);
DisplaySpeech(MAIN, "I didn't!  I just had to think a litt--");
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 2);
SetCharacterView(GRANDPA, 123);
SetCharacterSpeechView(GRANDPA, 124);
Wait(10);
DisplaySpeech(GRANDPA, "COOL!");
SetCharacterView(GRANDPA, 115);
SetCharacterSpeechView(GRANDPA, 116);
Wait(20);
DisplaySpeech(GRANDPA, "... I JUST HOPE HE WAS ALIVE LONG ENOUGH TO FEEL IT!");
SetCharacterView(MAIN, 74);
Wait(10);
ReleaseCharacterView(GRANDPA);
SetCharacterSpeechView(GRANDPA, 11);
Wait(10);
DisplaySpeech(GRANDPA, "NOW COME HELP OL' GRAMPS UP TO THE GUESTROOM...");
Wait(10);
SetCharacterView(GRANDPA, 120);
SetCharacterSpeechView(GRANDPA, 121);
Wait(10);
DisplaySpeech(GRANDPA, "... YOU CAN HELP ME FIND MY HEARING AID TOO!");
SetCharacterView(GRANDPA, 181);
Wait(10);
SetCharacterView(MAIN, 74);
SetCharacterSpeechView(MAIN, 67);
Wait(30);
SetCharacterView(MAIN, 74);
Wait(40);
SetScreenTransition(TRANSITION_FADE);
FadeOut(1);

ObjectOn(4);
ChangeCharacterView(GRANDPA, 183);				// set his view to standing
SetCharacterSpeechView(GRANDPA, 184);
SetCharacterIdle(GRANDPA, 185, 5);
SetCharacterBaseline(GRANDPA, 0);
character[GRANDPA].room= 8;
SetGlobalInt(4, 2);						// set grandpa's state to in guestroom
Wait(10);
SetGlobalInt(13, 3);						// set cutscene to cane to grandpa
NewRoom(22);
SetScreenTransition(TRANSITION_BOXOUT);

EndCutscene();
}

function character9_b() {
  // script for character9: Use inventory on character

if(ACTION== USE) {

	if(GetGlobalInt(45)== 1) {					// if he's distracted

		SetGlobalInt(45, 2);				// triggers event in room rep. exe script

		MoveCharacter(MAIN, 68, 137);
		
		while(GetViewportX() > 0) {
		
			if(GetViewportY() > 0) {
			
				SetViewport(GetViewportX() - 2, GetViewportY() - 1);
			}
	
			else {
			  
				SetViewport(GetViewportX() - 2, 0);
			}
	
			Wait(1);
		}

		while(IsOverlayValid(WorkerIdleSpeech)) {
			
			Wait(1);
		}

		ReleaseCharacterView(WORKER);
		SetCharacterView(WORKER, 28);
		AnimateCharacter(WORKER, 6, 7, 1);
		
		MoveCharacterBlocking(MAIN, 68, 137, 0);
		character[MAIN].loop= 3;
		
		if(TalkieIdle== 1) {
		
			if(IsOverlayValid(TalkieIdleSpeech)) {
			  
				RemoveOverlay(TalkieIdleSpeech);
			}
	
			ReleaseCharacterView(TALKIE);
		}

		

		SetTimer(1, 0);
		SetTimer(2, 0);
		Wait(10);
		SetMusicMasterVolume(30);
		SetMusicRepeat(1);
		PlayMusic(9);
		
		Wait(10);
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(10);
		
		while(IsOverlayValid(WorkerIdleSpeech)) {
		
			Wait(1);
		}

		TalkieIdle= 0;
		WorkerIdle= 0;
		Wait(10);
		int temp= DisplaySpeechBackground(WORKER, "... nothing good happens when I get distracted!");
		SetCharacterView(WORKER, 112);
		AnimateCharacter(WORKER, 1, 5, 1);
		Wait(60);
		SetCharacterView(MAIN, 3);
		AnimateCharacterEx(MAIN, 11, 7, 0, 0, 1);
		ObjectOn(6);
		ReleaseCharacterView(MAIN);
		character[MAIN].loop= 3;
		
		while(IsOverlayValid(temp)) {
		
			Wait(1);
		}
		
		ReleaseCharacterView(WORKER);
		SetCharacterView(WORKER, 28);
		AnimateCharacter(WORKER, 6, 7, 1);
		Wait(10);
		DisplaySpeech(MAIN, "OMG!! You whacked your hand!.");
		Wait(60);
		SetCharacterView(WORKER, 28);
		AnimateCharacterEx(WORKER, 11, 5, 0, 0, 1);
		Wait(30);
		ReleaseCharacterView(WORKER);
		SetCharacterView(WORKER, 113);
		SetCharacterSpeechView(WORKER, 114);
		character[WORKER].loop= 1;
		temp= DisplaySpeechBackground(WORKER, "WAAAAAAAAA-");
		ChangeCharacterView(WORKER, 114);
		AnimateCharacter(WORKER, character[WORKER].loop, 5, 1);
		Wait(30);
		
		if(IsOverlayValid(temp)) {
		
			RemoveOverlay(temp);
		}
		Wait(10);
		temp= DisplaySpeechBackground(WORKER, "-AAAAAAAAAAAA-!");
		ReleaseCharacterView(WORKER);
		character[WORKER].loop= 2;
		AnimateCharacter(WORKER, character[WORKER].loop, 5, 1);
		Wait(30);
		
		if(IsOverlayValid(temp)) {
		
			RemoveOverlay(temp);
		}

		Wait(10);
		temp= DisplaySpeechBackground(WORKER, "-AAAAAAAHHH!");
		ReleaseCharacterView(WORKER);
		character[WORKER].loop= 1;
		AnimateCharacter(WORKER, character[WORKER].loop, 5, 1);
		Wait(60);
		SetGlobalInt(45, 2);					// final state for distraction
		FadeOut(1);
		SetScreenTransition(TRANSITION_FADE);
		SetGlobalInt(13, 2);					// set cutscene to ketchup on worker
		
		character[WORKER].room= -1;
		SetGlobalInt(23, 1);					// set state to ketchup used
		RestoreWalkableArea(2);
		DisableRegion(1);					// remove warning region
		Wait(30);
		StopMusic();
		SetMusicMasterVolume(90);
		Wait(30);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
		NewRoom(22);
	}
	
	else {
	
		FaceLocation(MAIN, mouse.x, mouse.y);
		Wait(10);
		SetMusicMasterVolume(30);
		PlayMusic(11);
		Wait(10);
		
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		Wait(30);
	
		DisplaySpeechNoBlock(MAIN, "He'd fall for that one...", 1);
		DisplaySpeechNoBlock(MAIN, "... but I can't let him see me do it!", 2);
		Wait(30);
		SetMusicMasterVolume(90);
		Wait(10);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
}
}

function character7_c() {
  // script for character7: Use inventory on character

MoveCharacter(MAIN, 180, 127);

DisableRegion(3);					// no hireling idle needed

while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, 0);
	Wait(1);
}

if(HirelingIdle== 1) {

	SetTimer(2, 0);
	ReleaseCharacterView(HIRELING);
	
	if(IsOverlayValid(HIRELING)) {
	  
		RemoveOverlay(HirelingIdleSpeech);
	}
	
	HirelingIdle= 0;
}
  
MoveCharacterBlocking(MAIN, 180, 127, 0);
character[MAIN].loop= 1;
Wait(10);
SetMusicMasterVolume(30);
Wait(10);
GUIOff(2);
StartCutscene(5);

Wait(30);
DisplaySpeech(MAIN, "I'd like to get one of those hotdogs now...");
DisplaySpeech(MAIN, "... here's the money!");
Wait(10);
MoveCharacterBlocking(MAIN, 149, 119, 0);
character[MAIN].loop= 1;
Wait(10);
character[MAIN].loop= 12;
character[MAIN].frame= 1;
Wait(10);
LoseInventory(31);
character[MAIN].loop= 1;
character[MAIN].frame= 0;
Wait(10);
DisplaySpeech(HIRELING, "Yes, sir! ... Here you go!");
Wait(10);
PlaySound(22);
ReleaseCharacterView(HIRELING);
AnimateCharacterEx(HIRELING, 4, 5, 0, 0, 1);
character[HIRELING].loop= 1;
Wait(10);
character[MAIN].loop= 1;
Wait(5);
character[MAIN].loop= 12;
character[MAIN].frame= 1;
Wait(15);
PlaySound(4);
AddInventory(24);
SetGlobalInt(56, 1);					// he's bought a hotdog, so he can pickup ketchup
character[MAIN].loop= 1;
character[MAIN].frame= 0;

character[HIRELING].loop= 0;
character[HIRELING].frame= 0;

Wait(10);
character[MAIN].loop= 0;
Wait(5);
MoveCharacterBlocking(MAIN, 180, 127, 0);
character[MAIN].loop= 1;
Wait(10);
DisplaySpeech(HIRELING, "Enjoy!");

Wait(10);
SetDialogOption(4, 1, 2);
SetDialogOption(4, 2, 2);
SetTimer(2, 500);
SetMusicMasterVolume(90);
EnableRegion(3);
Wait(10);

GUIOn(2);
EndCutscene();

}

function character17_b() {
  // script for character17: Use inventory on character
  
}

function character17_c() {
  // script for character17: Use inventory on character


MoveCharacter(MAIN, 117, 107);

while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, GetViewportY());
	Wait(1);
}
  
MoveCharacterBlocking(MAIN, 117, 107, 0);
character[MAIN].loop= 2;

if(CliffIdle== 1) {

	CliffIdle= 0;	
	
	if(IsOverlayValid(CliffIdleSpeech)) {
	  
		RemoveOverlay(CliffIdleSpeech);
	}
	
	ReleaseCharacterView(CLIFF);
}

Wait(20);
GUIOff(2);
StartCutscene(5);

Wait(20);
SetCharacterView(MAIN, 68);
SetCharacterSpeechView(MAIN, 67);
Wait(20);
DisplaySpeech(MAIN, "Guess what I'M having for lunch today...");
Wait(10);

if(GetGlobalInt(18)== 0) {					// tv off

	SetCharacterView(CLIFF, 13);
	AnimateCharacterEx(CLIFF, 4, 5, 0, 0, 1);
	ChangeCharacterView(CLIFF, 95);
	SetCharacterIdle(CLIFF, 92, 5);
	character[CLIFF].loop= 1;
	ReleaseCharacterView(CLIFF);
	StopMusic();
	Wait(10);
}

else {

	character[CLIFF].loop= 1;
	ChangeCharacterView(CLIFF, 95);
	SetCharacterIdle(CLIFF, 92, 5);
	ReleaseCharacterView(CLIFF);
	Wait(10);
}

Wait(10);
SetCharacterSpeechView(MAIN, 2);
DisplaySpeech(MAIN, "... a 7-LAYER hotdog.");
SetCharacterSpeechView(MAIN, 67);
DisplaySpeech(MAIN, "... a triumph of fine junk-food dining!");
SetCharacterView(MAIN, 68);
Wait(20);
DisplaySpeech(MAIN, "I'll TRADE you this calorie-laden monstrosity...");
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 2);
Wait(10);
DisplaySpeech(MAIN, "... for whatever you've got in that cooler!");

if(GetGlobalInt(18)== 0) {						// if tv is off

	Wait(20);
	SetCharacterView(CLIFF, 90);
	Wait(10);
	character[CLIFF].frame= 3;
	int temp= DisplaySpeechBackground(CLIFF, "... hmm.");
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	ReleaseCharacterView(CLIFF);
	Wait(40);
	DisplaySpeech(CLIFF, "... that doesn't seem appealing to me!");
	Wait(20);
	
	ChangeCharacterView(CLIFF, 13);
	SetCharacterIdle(CLIFF, 15, 5);
	AnimateCharacterEx(CLIFF, 5, 5, 0, 0, 1);
	character[CLIFF].loop= 0;
	
	Wait(20);
	SetCharacterView(MAIN, 72);
	SetCharacterSpeechView(MAIN, 62);
	DisplaySpeech(MAIN, "... curses!");
	SetCharacterView(MAIN, 72);
	Wait(20);
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
}

else {

	SetCharacterView(CLIFF, 96);
	SetCharacterSpeechView(CLIFF, 97);
	Wait(40);
	DisplaySpeech(CLIFF, "... a deal has been struck!");
	Wait(10);
	character[MAIN].loop= 13;
	character[MAIN].frame= 1;
	Wait(15);
	LoseInventory(24);
	SetGlobalInt(24, 1);					// set cliff's state to having hotdog, for cooler
	SetDialogOption(15, 2, 2);				// turn off dialog option about cooler
	character[MAIN].loop= 2;
	character[MAIN].frame= 0;
	Wait(10);
	character[CLIFF].loop= 2;
	Wait(20);
} 

GUIOn(2);
EndCutscene();
}

function character8_d() {
  // script for character8: Use inventory on character
  
if(ACTION== GIVE || ACTION== USE) {  

	MoveCharacterBlocking(MAIN, 193, 129, 0);
	character[MAIN].loop= 2;
	SetCharacterIdle(TRAINER, -1, 1);			// disable his idle 
	Wait(20);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(10);
	SetCharacterView(MAIN, 74);
	SetCharacterSpeechView(MAIN, 67);
	Wait(20);
	DisplaySpeech(MAIN, "I've got this card for a free personal--");
	SetCharacterView(TRAINER, 145);
	SetCharacterSpeechView(TRAINER, 146);
	Wait(10);
	DisplaySpeech(TRAINER, "... Personal training session!");
	Wait(10);
	MoveCharacter(MAIN, 239, 130);
	SetCharacterView(TRAINER, 147);
	SetCharacterSpeechView(TRAINER, 148);
	Wait(10);
	DisplaySpeech(TRAINER, "With me?");
	MoveCharacterBlocking(MAIN, 239, 130, 0);
	character[MAIN].loop= 3;
	Wait(20);
	character[MAIN].loop= 7;
	character[MAIN].frame= 1;
	Wait(15);
	LoseInventory(26);
	
	SetGlobalInt(9, 2);					// set state to having free card
	SetDialogOption(5, 11, 2);				// not going on tours anymore
	SetDialogOption(5, 10, 1);				// so he can ask about resuming his workout
	
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
	Wait(10);
	SetCharacterView(TRAINER, 145);
	SetCharacterSpeechView(TRAINER, 146);
	Wait(20);
	DisplaySpeech(TRAINER, "ALRIGHT!");
	SetCharacterView(TRAINER, 145);
	Wait(10);
	MoveCharacterBlocking(MAIN, 193, 129, 0);
	Wait(10);
	DisplaySpeech(MAIN, "Let's just get this over with, ok?");
	Wait(30);
	ChangeCharacterView(TRAINER, 39);			// change to his walking view
	character[TRAINER].y= 116;				// fix his height
	SetCharacterIdle(TRAINER, 41, 5);			// change his idle view
	SetCharacterSpeechView(TRAINER, 40);
	Wait(20);
	DisplaySpeech(TRAINER, "Let's do this!");
	Wait(10);
	MoveCharacterDirect(TRAINER, 110, 120);
	MoveCharacter(MAIN, 110, 120);
	MoveCharacterBlocking(TRAINER, 110, 120, 1);
	MoveCharacterBlocking(TRAINER, 150, 100, 1);
	character[TRAINER].room= 24;
	MoveCharacterBlocking(MAIN, 130, 120, 0);
	MoveCharacterBlocking(MAIN, 150, 100, 1);
	
	GUIOn(4);
	NewRoom(24);
}
}

function character4_c() {
  // script for character4: Use inventory on character

MoveCharacterBlocking(MAIN, 136, 128, 0);
character[MAIN].loop= 2;

if(GrandpaIdle== 1) {

	if(IsOverlayValid(GrandpaIdleSpeech)) {
	 
		RemoveOverlay(GrandpaIdleSpeech);
	}
	
	ReleaseCharacterView(GRANDPA);
}

SetTimer(1, 0);

Wait(10);
SetMusicMasterVolume(30);
Wait(10);
StartCutscene(5);
GUIOff(2);

Wait(30);
SetCharacterView(MAIN, 74);
SetCharacterSpeechView(MAIN, 67);
Wait(20);
DisplaySpeech(MAIN, "I found your hearing aid...");
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 2);
Wait(10);
DisplaySpeech(MAIN, "... you left it in Thurston's room!");
Wait(10);
DisplaySpeech(GRANDPA, "I DID...?");
Wait(30);
PlaySound(22);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(10);
LoseInventory(36);	
Wait(5);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(30);
ReleaseCharacterView(GRANDPA);
AnimateCharacterEx(GRANDPA, 5, 7, 0, 0, 1);
Wait(60);
AnimateCharacterEx(GRANDPA, 5, 7, 0, 1, 1);
character[GRANDPA].loop= 1;
ReleaseCharacterView(GRANDPA);
SetGlobalInt(4, 3);				// hearing aid, no batteries
Wait(10);
DisplaySpeech(GRANDPA, "... THIS DOESN'T HAVE ANY BATTERIES!");
Wait(20);
PlaySound(23);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(10);
AddInventory(36);
Wait(5);
character[MAIN].loop= 6;
character[MAIN].frame= 0;
Wait(10);
SetCharacterView(MAIN, 74);
Wait(20);
DisplaySpeech(GRANDPA, "CAN'T YOU ROUND UP A COUPLE BATTERIES?");
Wait(10);
SetCharacterView(MAIN, 72);
SetCharacterSpeechView(MAIN, 60);
Wait(20);
DisplaySpeechNoBlock(MAIN, "All this for a dollar...", 1);
Wait(20);
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 2);
SetDialogOption(17, 5, 1);			// turn on dialog option about batteries
Wait(10);
SetMusicMasterVolume(90);
Wait(10);

GUIOn(2);
EndCutscene();
}

function character2_a() {
  // script for character2: Use inventory on character

if(GetGlobalInt(1)== 2) {

	FaceLocation(MAIN, mouse.x, mouse.y);
	Wait(5);
	DisplaySpeechNoBlock(MAIN, "I should wait until she's finished vacuuming.", 1);
}
  
else if(IsObjectOn(4)== 1) {			// if cage door is open and mom is downstairs
	
	MoveCharacterBlocking(MAIN, 230, 110, 0);
	character[MAIN].loop= 2;
	SetTimer(1, 0);					// no idle animations during cutscene
	ReleaseCharacterView(KNUCKLES);
	Wait(20);
	
	GUIOff(2);
	StartCutscene(5);
	Wait(30);
	PlayMusic(7);
	Wait(30);
	
	if(GetGlobalInt(43)== 0) {
	  
		DisplaySpeech(MAIN, "... you want some seed, Knuckles?");
		Wait(10);
		MoveCharacterBlocking(MAIN, 200, 118, 0);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 2;
		Wait(10);
		DisplaySpeech(MAIN, "Then come on out of your cage and get it!");
		Wait(15);
		character[MAIN].loop= 6;
		character[MAIN].frame= 2;
		PlaySound(23);
		Wait(10);
		ObjectOn(5);
		LoseInventory(11);
		SetGlobalInt(26, 1);					// set state to knuckles has his seeds
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		Wait(40);
		SetCharacterView(KNUCKLES, 21);
		Wait(15);
		ReleaseCharacterView(KNUCKLES);
		Wait(20);
		SetCharacterView(KNUCKLES, 21);
		Wait(15);
		ReleaseCharacterView(KNUCKLES);
		Wait(40);
	}
	
	else if(GetGlobalInt(43)== 3) {
	
		DisplaySpeech(MAIN, "... are you still hungry?");
		Wait(10);
		MoveCharacterBlocking(MAIN, 200, 118, 0);
		character[MAIN].loop= 0;
		Wait(5);
		character[MAIN].loop= 2;
		Wait(10);
		DisplaySpeech(MAIN, "Then come on out of your cage and get it!");
		Wait(15);
		character[MAIN].loop= 6;
		character[MAIN].frame= 2;
		PlaySound(23);
		Wait(10);
		ObjectOn(5);
		LoseInventory(11);
		SetGlobalInt(26, 1);					// set state to knuckles has his seeds
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		Wait(40);
		SetCharacterView(KNUCKLES, 21);
		Wait(15);
		ReleaseCharacterView(KNUCKLES);
		Wait(20);
		SetCharacterView(KNUCKLES, 21);
		Wait(15);
		ReleaseCharacterView(KNUCKLES);
		Wait(40);
	}
	
	PlaySound(11);
	DisplaySpeech(KNUCKLES, "Squaaaaaaaaaawwwwwwwk!");
	Wait(10);
	SetCharacterSpeed(KNUCKLES, 20);
	ChangeCharacterView(KNUCKLES, 31);
	RestoreWalkableArea(5);
	FollowCharacterEx(KNUCKLES, MAIN, 0, 0);
	Wait(20);
	SetCharacterSpeed(MAIN, 15);
	DisplaySpeechBackground(MAIN, "Ouch!  Ow!  Oooh!");
	MoveCharacterBlocking(MAIN, 92, 112, 0);
	MoveCharacterBlocking(MAIN, 97, 105, 1);
	character[MAIN].loop=3;
	Wait(5);
	SetWalkBehindBase(4, 200);
	character[MAIN].frame= 1;
	character[MAIN].y+=4;
	character[MAIN].x+=3;
	Wait(5);
	character[MAIN].y+= 4;
	character[MAIN].x+= 3;
	Wait(5);
	character[MAIN].frame= 2;
	character[MAIN].y+=4;
	character[MAIN].x+=3;
	Wait(5);
	character[MAIN].y+= 4;
	character[MAIN].x+= 3;
	Wait(5);
	character[MAIN].frame= 1;
	character[MAIN].y+=4;
	character[MAIN].x+=3;
	Wait(5);
	character[MAIN].y+=4;
	character[MAIN].x+=3;
	Wait(5);
	character[MAIN].y+=4;
	character[MAIN].x+=3;
	Wait(5);
	character[MAIN].y+=4;
	character[MAIN].x+=3;
	
	if(GetGlobalInt(43)== 0) {
	  
		SetCharacterTransparency(MAIN, 100);
		Wait(20);
		FollowCharacter(KNUCKLES, -1);
		MoveCharacterBlocking(KNUCKLES, 203, 36, 1);
		MoveCharacterBlocking(KNUCKLES, 237, 112, 1);
		SetCharacterSpeed(KNUCKLES, 5);
		ChangeCharacterView(KNUCKLES, 19);
		RemoveWalkableArea(5);
		Wait(40);
		PlaySound(11);
		DisplaySpeech(KNUCKLES, "Squawk.");
		Wait(20);
		AnimateCharacter(KNUCKLES, 4, 5, 1);
		Wait(80);
	}
	
	SetGlobalInt(43, 1);					// set state to out of cage
	SetDialogOption(1, 20, 1);				// turn on dialog option with mom
	
	NewRoom(3);
}

else {

	FaceCharacter(MAIN, KNUCKLES);
	Wait(5);
	DisplaySpeech(MAIN, "I should open his cage first.");
}
}



function character11_a() {
  // script for character11: Talk to character

if(GetGlobalInt(34)== 1) {					// if he's outside looking for noises

	MoveCharacter(MAIN, mouse.x, mouse.y);
}

else {

	FaceCharacter(MAIN, STEVE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's not able to communicate right now.", 1);
}
}


function inventory36_a() {
  // script for inventory36: Use inventory on this item

DisplaySpeechNoBlock(MAIN, "It should work fine now!", 1);
Wait(10);
PlaySound(22);  
AddInventory(37);
LoseInventory(36);
LoseInventory(20);

}

function inventory20_a() {
  // script for inventory20: Use inventory on this item

DisplaySpeechNoBlock(MAIN, "It should work now.", 1);
Wait(10);
PlaySound(22);  
AddInventory(37);
LoseInventory(36);
LoseInventory(20);


}

function character4_d() {
  // script for character4: Use inventory on character
  
MoveCharacterBlocking(MAIN, 136, 128, 0);
character[MAIN].loop= 2;

if(GrandpaIdle== 1) {

	if(IsOverlayValid(GrandpaIdleSpeech)) {
	 
		RemoveOverlay(GrandpaIdleSpeech);
	}
	
	ReleaseCharacterView(GRANDPA);
}

SetTimer(1, 0);
Wait(10);
SetMusicMasterVolume(30);
Wait(10);
StartCutscene(5);
GUIOff(2);

Wait(30);
SetCharacterView(MAIN, 74);
SetCharacterSpeechView(MAIN, 67);
Wait(20);
DisplaySpeech(MAIN, "Ok, here's your hearing aid...");
SetCharacterView(MAIN, 72);
SetCharacterSpeechView(MAIN, 60);
Wait(10);
DisplaySpeech(MAIN, "... WITH batteries this time...");
Wait(10);
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 2);
Wait(20);
PlaySound(22);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(10);
LoseInventory(37);	
SetGlobalInt(4, 4);						// set grandpa's state to having hearing aid
Wait(5);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(30);
AnimateCharacterEx(GRANDPA, 5, 7, 0, 0, 1);
ChangeCharacterView(GRANDPA, 210);
SetCharacterSpeechView(GRANDPA, 211);
SetCharacterIdle(GRANDPA, 212, 4);
character[GRANDPA].loop= 1;
Wait(10);
DisplaySpeech(GRANDPA, "It's a miracle, I can hear again!");
Wait(10);
DisplaySpeech(MAIN, "Now, about that DOLLAR you owe me...");
DisplaySpeech(MAIN, "... time to pay the piper!");
Wait(20);
DisplaySpeech(GRANDPA, "You need a dollar...?");
Wait(30);
DisplaySpeech(GRANDPA, "You just had to ask, boy!");
Wait(20);
PlaySound(4);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(10);
AddInventory(31);
Wait(5);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(10);
SetMusicMasterVolume(90);
SetDialogOption(4, 2, 2);					// turn off old hotdog dialog option with hireling
SetDialogOption(4, 7, 1);					// turn on new one
SetTimer(1, 200);
Wait(10);

GUIOn(2);
EndCutscene();
}

function character2_b() {
  // script for character2: Talk to character
  
MoveCharacterBlocking(MAIN, 313, 116, 0);
character[MAIN].loop= 1;
Wait(20);

GUIOff(2);
StartCutscene(5);

Wait(20);
DisplaySpeech(MAIN, "Hey Knuckles...");
PlaySound(11);
DisplaySpeechNoBlock(KNUCKLES, "Squuaaaaaawk.", 1);
Wait(20);

GUIOn(2);
EndCutscene();

}

function character10_b() {
  // script for character10: Talk to character


MoveCharacter(MAIN, 347, 114);

if(GetViewportX() < 140) {

	while(GetViewportX() < 140) {
	
		  SetViewport(GetViewportX() + 2, 0);
		  Wait(1);
	}
}
	
else if(GetViewportX() > 140) {

	while(GetViewportX() > 140) {
	
		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}
}

MoveCharacterBlocking(MAIN, 347, 114, 0);
character[MAIN].loop= 1;

if(CoffeeIdle== 1) {

	while(character[COFFEE].animating) {
	
		Wait(1);
	}
	
	
	CoffeeIdle= 0;
}

if(HirelingIdle== 1) {

	if(IsOverlayValid(HirelingIdleSpeech)) {
	  
		RemoveOverlay(HirelingIdleSpeech);
	}
	
	ReleaseCharacterView(HIRELING);
	HirelingIdle= 0;
}

if(BirdIdle== 1) {

	BirdIdle= 0;
	ObjectOff(3);
	MoveObjectDirect(3, 385, 26, 10);
}

SetTimer(1, 0);
SetTimer(2, 0);
Wait(10);
GUIOff(2);
StartCutscene(5);
Wait(20);

DisplaySpeech(MAIN, "Excuse me...");
DisplaySpeech(COFFEE, "... yes? ");
SetGlobalInt(69, 1);				// set state to talked to once
	
Wait(20);	
EndCutscene();
RunDialog(10);
}

function character2_c() {
  // script for character2: Interact character

if(ACTION== USE) {

	if(IsObjectOn(4)== 1) {						// if cage door is open
	  
		MoveCharacterBlocking(MAIN, 247, 109, 0);
		character[MAIN].loop= 3;
		Wait(10);
		StartCutscene(5);
		GUIOff(2);
		
		Wait(20);
		character[MAIN].loop= 7;
		character[MAIN].frame= 1;
		Wait(10);
		PlaySound(11);
		DisplaySpeechNoBlock(KNUCKLES, "Squuaaaaaawk.", 1);
		Wait(5);
		character[MAIN].loop= 3;
		character[MAIN].frame= 0;
		MoveCharacterBlocking(KNUCKLES, 270, 34, 0);
		MoveCharacterBlocking(MAIN, 313, 116, 0);
		character[MAIN].loop= 0;
		Wait(10);
		DisplaySpeech(MAIN, "He doesn't really let me touch him...");
		Wait(10);
		MoveCharacterBlocking(MAIN, 313, 116, 0);
		character[MAIN].loop= 0;
		Wait(10);
		character[MAIN].loop= 1;
		Wait(10);
		MoveCharacter(KNUCKLES, 264, 45);
		DisplaySpeechNoBlock(MAIN, "... but he knows who's boss!", 1);
		Wait(20);
		
		GUIOn(2);
		EndCutscene();
	}
	
	else {
	 
		FaceCharacter(MAIN, KNUCKLES);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I should open the cage door first.", 1);
	}
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceCharacter(MAIN, KNUCKLES);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... I don't want to get him angry!", 1);
}

else if(ACTION== GIVE) {

	FaceCharacter(MAIN, KNUCKLES);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's very self-sufficient.", 1);
}
}

function character12_c() {
  // script for character12: Talk to character

MoveCharacter(MAIN, 365, 108);

while(GetViewportX() < 220) {

	SetViewport(GetViewportX() + 2, 0);
	Wait(1);
}

MoveCharacterBlocking(MAIN, 365, 108, 0);
character[MAIN].loop= 3;
Wait(20);
GUIOff(2);
StartCutscene(5);

Wait(20);
DisplaySpeech(MAIN, "Hey bird!");
Wait(20);
DisplaySpeech(MAIN, "Give me that cane!");
Wait(60);  
ObjectOn(3);
MoveObjectDirect(3, 385, 91, 5);
Wait(5);
PlaySound(21);
ObjectOff(3);
MoveObjectDirect(3, 385, 26, 10);
Wait(20);
DisplaySpeechNoBlock(MAIN, "I don't think he's listening to me.", 1);
Wait(20);

GUIOn(2);
EndCutscene();
}

function character5_a() {
  // script for character5: Talk to character

if(GetGlobalInt(66)== 1) {					// haven't talked to grandma yet  
  
	MoveCharacterBlocking(MAIN, 266, 127, 0);
	character[MAIN].loop= 1;
	
	if(GrandmaIdle> 0 && GrandmaIdle!= 3) {
	
		if(IsOverlayValid(GrandmaIdleSpeech)) {
		
			RemoveOverlay(GrandmaIdleSpeech);
		}

		ReleaseCharacterView(GRANDMA);
		character[GRANDMA].loop= 1;
		SetCharacterBaseline(GRANDMA, 126);			// she's now behind the counter normally
	}
	
	SetTimer(2, 0);
	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(20);
	DisplaySpeech(MAIN, "Hey Grandma.", 1);
	Wait(10);

	if(GrandmaIdle> 0) {
	
		GrandmaIdle= 0;
	}

	else {
	  
		ReleaseCharacterView(GRANDMA);
		AnimateCharacterEx(GRANDMA, 4, 5, 0, 1, 0);
		character[GRANDMA].loop= 1;
		SetCharacterBaseline(GRANDMA, 126);			// she's now behind the counter normally
		Wait(10);
	}
	
	character[GRANDMA].loop= 0;
	Wait(5);
	character[GRANDMA].loop= 2;
	Wait(10);
	DisplaySpeech(GRANDMA, "Hey Jackson...");
	Wait(10);
	
	EndCutscene();
	RunDialog(9);	
}

}

function character17_d() {
  // script for character17: Use inventory on character

MoveCharacter(MAIN, 154, 111);

while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, GetViewportY());
	Wait(1);
}
  
MoveCharacterBlocking(MAIN, 154, 111, 0);
character[MAIN].loop= 2;
Wait(10);  
  
character[MAIN].loop= 13;
character[MAIN].frame= 1;
Wait(10);
ObjectOn(2);
LoseInventory(19);
LoseInventory(38);
Wait(5);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
}

function character15_a() {
  // script for character15: Pick up character

if(character[TALKIE].room== 13) {
  
	if(GetGlobalInt(23)== 0) {					// ketchup hasn't been used
	
		MoveCharacter(MAIN, mouse.x, mouse.y);
	}
	
	else if(GetGlobalInt(23)== 1) {
	
		MoveCharacter(MAIN, 144, 116);
		
		while(GetViewportX() < 0) {
	
			if(GetViewportY() > 0) {
			  
				SetViewport(GetViewportX() - 2, GetViewportY() - 1);
			}
	
			else {
			
				SetViewport(GetViewportX() - 2, GetViewportY());
			}
	
			Wait(1);
		}

		if(TalkieIdle== 1) {
		
			if(IsOverlayValid(TalkieIdleSpeech)) {
			
				RemoveOverlay(TalkieIdleSpeech);
			}
	
			ReleaseCharacterView(TALKIE);
			TalkieIdle= 0;
		}
	
		SetTimer(1, 0);
		MoveCharacterBlocking(MAIN, 144, 116, 0);
		character[MAIN].loop= 2;
		Wait(30);
		SetMusicMasterVolume(90);
		PlayMusic(11);
		Wait(30);
		
		Wait(20);
		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		
		Wait(30);
		character[MAIN].loop= 6;
		character[MAIN].frame= 2;
		Wait(5);
		PlaySound(33);
		DisplaySpeech(TALKIE, "... KEEP YOUR HANDS OFF ME!");
		Wait(5);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "That is a noisy one...", 1);
		SetGlobalInt(23, 2);
		Wait(30);
		SetMusicMasterVolume(30);
		Wait(30);
		StopMusic();
		SetMusicMasterVolume(90);
		SetTimer(1, 100);
		Wait(30);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
	
	else if(GetGlobalInt(23)== 2) {
	  
		MoveCharacter(MAIN, 144, 116);
		
		while(GetViewportX() < 0) {
	
			if(GetViewportY() > 0) {
			  
				SetViewport(GetViewportX() - 2, GetViewportY() - 1);
			}
	
			else {
			
				SetViewport(GetViewportX() - 2, GetViewportY());
			}
	
			Wait(1);
		}

		if(TalkieIdle== 1) {
		
			if(IsOverlayValid(TalkieIdleSpeech)) {
			
				RemoveOverlay(TalkieIdleSpeech);
			}
	
			ReleaseCharacterView(TALKIE);
			TalkieIdle= 0;
		}
	
		MoveCharacterBlocking(MAIN, 144, 116, 0);
		character[MAIN].loop= 2;
		
		SetTimer(1, 0);					// disable talkie idle talking
		Wait(30);
		SetMusicMasterVolume(90);
		PlayMusic(10);
		Wait(30);

		GUIOff(2);
		GUIOn(4);
		StartCutscene(5);
		
		Wait(20);
		DisplaySpeech(MAIN, "... you're coming with me, whether you like it or not!");
		Wait(10);
		character[MAIN].loop= 6;
		character[MAIN].frame= 2;
		Wait(15);
		PlaySound(33);
		DisplaySpeech(TALKIE, "... no, NO, GET AWAY!");
		character[TALKIE].room= -1;
		AddInventory(32);
		character[MAIN].loop= 2;
		character[MAIN].frame= 0;
		SetGlobalInt(23, 3);					// final room state
		Wait(30);
		SetMusicMasterVolume(30);
		Wait(30);
		StopMusic();
		SetMusicMasterVolume(90);
		Wait(30);
		
		GUIOn(2);
		GUIOff(4);
		EndCutscene();
	}
}

else if(character[TALKIE].room== 15) {
	
	FaceCharacter(MAIN, TALKIE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... that's a good spot for it.", 1);
}
}

function character15_b() {
  // script for character15: Look at character

if(character[TALKIE].room== 13) {
	  
	FaceCharacter(MAIN, TALKIE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... I guess it's watching over the lot.", 1);
}

else if(character[TALKIE].room== 15) {

	FaceCharacter(MAIN, TALKIE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I've got it sitting in the vent now.", 1);
}
}

function character15_c() {
  // script for character15: Interact character
  
if(character[TALKIE].room== 13) {  
  
	if(ACTION== USE) {
	
		if(GetGlobalInt(23)== 0) {			// worker still there
		
			FaceCharacter(MAIN, TALKIE);
			Wait(10);
			DisplaySpeechNoBlock(MAIN, "I'm not close enough to use it...", 1);
		}

		else {						// worker not there
		
			MoveCharacterBlocking(MAIN, 144, 116, 0);
			character[MAIN].loop= 2;
			Wait(10);
			SetMusicMasterVolume(90);
			PlayMusic(11);
			Wait(10);
			
			GUIOff(2);
			GUIOn(4);
			StartCutscene(5);
			
			Wait(10);
			DisplaySpeech(MAIN, "... is that all you have to say?");
			Wait(20);
			PlaySound(33);
			DisplaySpeech(TALKIE, "I'LL SHOW YOU WHAT PAIN IS!");
			Wait(30);
			SetMusicMasterVolume(30);
			Wait(30);
			
			GUIOn(2);
			GUIOff(4);
			EndCutscene();
		}
	}
	
	else if(ACTION== PUSH || ACTION== PULL) {
	
		FaceCharacter(MAIN, TALKIE);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "He doesn't appear susceptible to physical attacks.", 1);
	}
	
	else if(ACTION== OPEN) {
	
		FaceCharacter(MAIN, TALKIE);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I don't see a way to open it.", 1);
	}
	
	else if(ACTION== CLOSE) {
	
		FaceCharacter(MAIN, TALKIE);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I don't see a way to open it.", 1);
	}

	else if(ACTION== GIVE) {
	
		FaceCharacter(MAIN, TALKIE);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I couldn't give him away.", 1);
	}
}

else if(character[TALKIE].room== 15) {

	if(ACTION== USE) {
  
		if(GetGlobalInt(34)== 0) {						// if he hasn't done the robe bit
		  
			MoveCharacterBlocking(MAIN, 33, 160, 0);
			character[MAIN].loop= 2;
			Wait(10);
			SetMusicMasterVolume(30);
			SetMusicRepeat(1);
			PlayMusic(11);
			SetMusicRepeat(0);
			Wait(10);
			GUIOff(2);
			GUIOn(4);							// turn on "screen" GUI for scrolling
			StartCutscene(5);
			
			Wait(20);
			DisplaySpeech(MAIN, "... is that all you have to say?");
			Wait(20);
			PlaySound(33);
			DisplaySpeech(TALKIE, "... I'LL SHOW YOU WHAT PAIN IS!");
			
			while(GetViewportY() != 0) {
			
				SetViewport(0, (GetViewportY() - 2));
				Wait(1);
			}
			
			Wait(10);
			character[TALKIE].loop= 1;
			DisplaySpeechAt(16, 20, 50, TALKIE, "I'LL SHOW YOU WHAT PAIN IS!");
			character[MAIN].loop= 3;
			Wait(5);
			DisplaySpeechAt(120, 20, 50, TALKIE, "I'LL SHOW YOU WHAT PAIN IS!");
			Wait(5);
			DisplaySpeechAt(25, 10, 50, TALKIE, "I'LL SHOW YOU WHAT PAIN IS!");
			Wait(20);
			character[TALKIE].loop= 0;
			SetCharacterTransparency(MAIN, 100);
			SetGlobalInt(42, 3);						// flag to check for cutscene
			NewRoom(19);
		}
		
		else {
		
			FaceCharacter(MAIN, TALKIE);
			Wait(10);
			DisplaySpeechNoBlock(MAIN, "He doesn't need more mockery.", 1);
		}
	}
	
	else if(ACTION== PUSH || ACTION== PULL) {
	
		FaceCharacter(MAIN, TALKIE);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "He doesn't appear susceptible to physical attacks.", 1);
	}
	
	else if(ACTION== OPEN) {
	
		FaceCharacter(MAIN, TALKIE);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I don't see a way to open that.", 1);
	}
	
	else if(ACTION== CLOSE) {
	
		FaceCharacter(MAIN, TALKIE);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I don't see a way to open that.", 1);
	}
	
	else if(ACTION== GIVE) {
	
		FaceCharacter(MAIN, TALKIE);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I couldn't give him away.", 1);
	}	
}
}

function character5_b() {
  // script for character5: Use inventory on character

if(ACTION== USE || ACTION== GIVE) {
  
	MoveCharacterBlocking(MAIN, 256, 128, 0);
	character[MAIN].loop= 1;
	Wait(10);
	SetMusicMasterVolume(30);
	Wait(10);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(20);
	DisplaySpeech(MAIN, "Hey Grandma...", 1);
	Wait(10);
	SetTimer(2, -1);						// disable random idles
	ReleaseCharacterView(GRANDMA);
	character[GRANDMA].loop= 1;
	SetCharacterBaseline(GRANDMA, 126);				// she's now behind the counter normally
	Wait(10);
	character[GRANDMA].loop= 0;
	Wait(5);
	character[GRANDMA].loop= 2;
	SetCharacterView(GRANDMA, 125);
	Wait(20);
	DisplaySpeech(GRANDMA, "Hey Jackson.");
	SetCharacterView(GRANDMA, 125);
	SetCharacterView(MAIN, 74);
	SetCharacterSpeechView(MAIN, 67);
	Wait(10);
	DisplaySpeech(MAIN, "... I think I found the missing ingredient for your brownies!");
	SetCharacterView(GRANDMA, 43);
	character[GRANDMA].frame= 2;
	int temp= DisplaySpeechBackground(GRANDMA, "Wha--!");
	
	while(IsOverlayValid(temp)) {
	
		Wait(1);
	}
	
	ReleaseCharacterView(GRANDMA);
	Wait(5);
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	character[MAIN].loop= 5;
	character[MAIN].frame= 2;
	Wait(15);
	LoseInventory(7);
	SetGlobalInt(30, 2);						// set grandma's state to having secret ingredient
	character[MAIN].loop= 1;
	character[MAIN].frame= 0;
	Wait(40);
	DisplaySpeech(GRANDMA, "... but where did you fi--");
	SetCharacterView(GRANDMA, 127);
	SetCharacterSpeechView(GRANDMA, 128);
	Wait(10);
	DisplaySpeech(GRANDMA, "Err, I mean...");
	Wait(20);
	ReleaseCharacterView(GRANDMA);
	SetCharacterSpeechView(GRANDMA, 43);
	Wait(40);
	DisplaySpeech(GRANDMA, "This could be a suitable replacement for my secret ingredient!");
	Wait(10);
	DisplaySpeech(MAIN, "Soo... you'll make your brownies today, right?");
	SetCharacterView(GRANDMA, 125);
	SetCharacterSpeechView(GRANDMA, 43);
	Wait(20);
	DisplaySpeech(GRANDMA, "Sure! Let me just finish chopping these vegetables...");
	DisplaySpeech(GRANDMA, "... then I'll get started on the brownies!");
	SetCharacterView(GRANDMA, 125);
	Wait(20);
	SetCharacterView(MAIN, 74);
	SetCharacterSpeechView(MAIN, 67);
	Wait(10);
	DisplaySpeech(MAIN, "Sweet!");
	Wait(10);
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);
	DisplaySpeech(GRANDMA, "... AND, since you were such a big help for me...");
	DisplaySpeech(GRANDMA, "... go tell your Grandfather to give you a DOLLAR!");
	SetCharacterView(GRANDMA, 127);
	SetCharacterSpeechView(GRANDMA, 128);
	Wait(10);
	DisplaySpeech(GRANDMA, "That can be a little present from me to you...");
	SetCharacterView(GRANDMA, 125);
	SetCharacterSpeechView(GRANDMA, 43);
	Wait(10);
	SetCharacterView(MAIN, 63);
	SetCharacterSpeechView(MAIN, 64);
	Wait(20);
	DisplaySpeech(MAIN, "... but Grandpa lost his--");
	SetCharacterView(MAIN, 63);
	DisplaySpeech(GRANDMA, "Oh don't worry, I know he's good for it!");
	ReleaseCharacterView(GRANDMA);
	Wait(10);
	DisplaySpeech(GRANDMA, "Now run along, I've got a lot of cooking to do!");
	Wait(10);
	character[GRANDMA].loop= 0;
	Wait(5);
	character[GRANDMA].loop= 1;
	Wait(20);
	
	ReleaseCharacterView(MAIN);
	SetCharacterSpeechView(MAIN, 2);

	SetCharacterBaseline(GRANDMA, 131);				// set baseline back for chopping animation
	AnimateCharacterEx(GRANDMA, 4, 5, 0, 0, 1);			// animate her cutting
	AnimateCharacter(GRANDMA, 5, 5, 1);
	SetTimer(2, 500);
	SetDialogOption(2, 11, 1);					// turn on dialog option asking grandpa for dollar
	SetDialogOption(17, 7, 1);					// turn on dialog option asking grandpa for dollar
	SetDialogOption(9, 4, 0);
	SetDialogOption(9, 7, 1);					// turn on right dialog option about brownies with grandma
	SetGlobalInt(62, 1);				// grandma now has coffee drink
	Wait(10);
	SetMusicMasterVolume(90);
	Wait(10);
	
	GUIOn(2);
	EndCutscene();
}
}


function character9_c() {
  // script for character9: Look at character
  
FaceCharacter(MAIN, WORKER);
Wait(10);
DisplaySpeechNoBlock(MAIN, "He looks busy...", 1);
}

function character12_d() {
  // script for character12: Interact character
  
if(ACTION== USE) {

	FaceCharacter(MAIN, BIRD);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... I can't reach him up there!", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceCharacter(MAIN, BIRD);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... I can't touch him up there!", 1);
}

else if(ACTION== GIVE) {

	FaceCharacter(MAIN, BIRD);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "There must be something he'd prefer besides cane.", 1);
}
}

function inventory18_a() {
  // script for inventory18: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It's a shiny quarter.", 1);
}

function inventory30_a() {
  // script for inventory30: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "'Kaboom! High Performance Dietary Supplement'", 1);
DisplaySpeechNoBlock(MAIN, "'... WARNING: not to be mixed with other stimulants.", 2);
}

function character12_e() {
  // script for character12: Use inventory on character
  
FaceCharacter(MAIN, BIRD);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I throw like a girl...", 1);
}

function inventory29_a() {
  // script for inventory29: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It's a coupon for Kaboom! that was in the paper.", 1);
}

function inventory26_a() {
  // script for inventory26: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "'Good for one FREE personal training session at 25 Hour Fitness!'", 1);
}

function character3_c() {
  // script for character3: Pick up character
  
if(character[CAT].room== 4 && GetGlobalInt(6)== 0) {			// if cat sleeping in laundry room

	MoveCharacterBlocking(MAIN, 120, 117, 0);
	character[MAIN].loop= 2;
	Wait(10);
	PlayMusic(11);
	Wait(30);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(20);
	DisplaySpeech(MAIN, "Hey, Rufus...");
	Wait(10);
	ReleaseCharacterView(CAT);
	
	if(IsObjectOn(4)== 0) {				// washing machine off, restart rufus snoring
		
		StopAmbientSound(1);
	}
	
	AnimateCharacter(CAT, 8, 5, 1);
	Wait(80);
	DisplaySpeechBackground(CAT, "... harumph.");
	Wait(40);
	SetCharacterBaseline(CAT, 150);					// so he's on top of open dryer
	AnimateCharacterEx(CAT, 7, 4, 0, 0, 1);
	SetCharacterBaseline(CAT, 0);
	ReleaseCharacterView(CAT);
	MoveCharacterBlocking(CAT, character[CAT].x, character[CAT].y + 10, 1);
	Wait(20);
	MoveCharacterPath(CAT, 218, 125);
	Wait(20);
	FaceCharacter(MAIN, CAT);
	MoveCharacterPath(CAT, 273, 116);
	MoveCharacterPath(CAT, 350, 116);
	Wait(10);
	character[MAIN].loop= 0;
	Wait(10);
	DisplaySpeech(MAIN, "Ok, well I'll, uh...");
	character[MAIN].loop= 2;
	Wait(10);
	DisplaySpeech(MAIN, "... see you later, then!");
	character[CAT].room= 3;
	SetGlobalInt(44, 1);						// start cutscene of him in livingroom
	Wait(20);
	SetCharacterTransparency(MAIN, 100);
	NewRoom(3);
}

if(GetGlobalInt(6)== 2) {							// if rufus past mom

	MoveCharacterBlocking(MAIN, 403, 129, 0);
	character[MAIN].loop= 1;
	Wait(10);
	PlayMusic(11);
	GUIOff(2);
	StartCutscene(5);
	
	Wait(10);
	DisplaySpeech(MAIN, "C'mon Rufus...");
	Wait(10);
	ReleaseCharacterView(CAT);
	FaceCharacter(CAT, MAIN);
	Wait(10);
	ReleaseCharacterView(CAT);
	MoveCharacter(CAT, 73, 104);
	
	while(GetViewportX() > 0) {
	
		SetViewport(GetViewportX() - 2, 0);
		Wait(1);
	}

	MoveCharacterBlocking(CAT, 73, 104, 0);
	Wait(10);
	SetCharacterView(CAT, 9);
	AnimateCharacter(CAT, 0, 5, 1);
	
	if(character[GRANDPA].room== 3) {				// if grandpa's around
	
		Wait(10);
		PlayMusic(8);
		Wait(10);
		DisplaySpeech(GRANDPA, "HEY, RUFUS!");
		Wait(10);
		ReleaseCharacterView(CAT);
		character[CAT].loop= 2;
		Wait(10);
		DisplaySpeech(GRANDPA, "... CHECK THIS ACTION OUT!");
		Wait(10);
		ReleaseCharacterView(GRANDPA);
		AnimateCharacter(GRANDPA, 11, 5, 0);
		Wait(60);
		DisplaySpeechBackground(CAT, "Meeeooooowwwwrr!");
		SetCharacterSpeed(CAT, 15);
		ReleaseCharacterView(CAT);
		Wait(10);
		PlaySound(46);
		MoveCharacter(CAT, 411, 67);
		
		while(GetViewportX() < 220) {
		
			SetViewport(GetViewportX() + 2, 0);
			Wait(1);
		}

		MoveCharacterBlocking(CAT, 411, 67, 0);
		character[CAT].room= 4;
		SetCharacterSpeed(CAT, 11);
		SetGlobalInt(6, 0);					// set state to back in laundry room
		Wait(20);
		character[GRANDPA].loop= 2;
		ReleaseCharacterView(GRANDPA);
		
		while(GetViewportX() > 0) {
		
			SetViewport(GetViewportX() - 2, 0);
			Wait(1);
		}
		
		Wait(10);
		character[GRANDPA].loop= 1;
		Wait(10);
		DisplaySpeech(GRANDPA, "... THAT'S ONE WEIRD CAT!");
		Wait(30);
		
		while(GetViewportX() < 220) {
		
			SetViewport(GetViewportX() + 2, 0);
			Wait(1);
		}
		
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "... that's one weird Grandparent.", 1);
		Wait(30);
		
		GUIOn(2);
		EndCutscene();
	}

	else {
	
		SetGlobalInt(6, 3);					// set state to past grandpa
		
		while(GetViewportX() < 220) {
		
			SetViewport(GetViewportX() + 2, 0);
			Wait(1);
		}
		
		Wait(20);
		
		GUIOn(2);
		EndCutscene();
	}
}

else if(GetGlobalInt(6)== 3) {					// rufus in kitchen
	
	MoveCharacterBlocking(MAIN, 150, 104, 0);
	character[MAIN].loop= 1;
	Wait(10);
	GUIOff(2);
	StartCutscene(5);
	Wait(10);
	DisplaySpeech(MAIN, "... here Rufus!");
	Wait(10);
	
	if(IsObjectOn(2) && GetGlobalInt(62)== 1) {			// if doorstop is down

		PlayMusic(10);
		Wait(10);
		ReleaseCharacterView(CAT);
		FaceCharacter(CAT, MAIN);
		Wait(10);	
		ReleaseCharacterView(CAT);  
		MoveCharacterBlocking(CAT, 67, 91, 0);
		MoveCharacterBlocking(CAT, 99, 83, 1);
		character[CAT].room= 10;
		SetGlobalInt(6, 4);					// set state to cutscene with Grandma
		Wait(20);
		SetCharacterTransparency(MAIN, 100);
		NewRoom(10);
	}

	else {
	
		PlayMusic(11);
		Wait(10);
		ReleaseCharacterView(CAT);
		FaceCharacter(CAT, MAIN);
		Wait(10);
		ReleaseCharacterView(CAT);
		MoveCharacterBlocking(CAT, 67, 91, 0);
		Wait(10);
		character[CAT].loop= 2;
		Wait(20);
		character[CAT].loop= 0;
		Wait(5);
		character[CAT].loop= 1;
		Wait(20);
		character[CAT].loop= 0;
		Wait(20);
		SetCharacterSpeed(CAT, 15);
		MoveCharacter(CAT, 411, 67);
		Wait(30);
		DisplaySpeechBackground(CAT, "-snort-");
		Wait(10);
		
		while(GetViewportX() < 220) {
		
			SetViewport(GetViewportX() + 2, 0);
			Wait(1);
		}
		
		MoveCharacterBlocking(CAT, 411, 67, 0);
		character[CAT].room= 4;
		SetGlobalInt(6, 0);					// set state to back in laundry room
		SetCharacterSpeed(CAT, 11);
		
		while(GetViewportX() > 0) {
		
			SetViewport(GetViewportX() - 2, 0);
			Wait(1);
		}

		Wait(10);
		DisplaySpeechNoBlock(MAIN, "... he was out of options.", 1);
		Wait(30);
		
		GUIOn(2);
		EndCutscene();
	}
}
}

function character12_f() {
  // script for character12: Use inventory on character
  
FaceCharacter(MAIN, BIRD);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I need some sort of ranged weapon...", 1);
}

function character12_g() {
  // script for character12: Use inventory on character
  
MoveCharacter(MAIN, 340, 115);

while(GetViewportX() < 200) {

	SetViewport(GetViewportX() + 2, GetViewportY());
	Wait(1);
}

MoveCharacterBlocking(MAIN, 340, 115, 0);
character[MAIN].loop= 2;

if(BirdIdle== 1) {

	ObjectOff(3);
	MoveObjectDirect(3, 385, 26, 10);
	BirdIdle= 0;
}

SetTimer(1, 0);
SetTimer(2, 0);

Wait(20);
GUIOff(2);
StartCutscene(5);

Wait(10);
SetCharacterView(MAIN, 68);
SetCharacterSpeechView(MAIN, 67);
Wait(20);
DisplaySpeech(MAIN, "... would you trade that cane for some seed?");
Wait(10);
character[MAIN].loop= 6;
character[MAIN].frame= 2;
Wait(10);
ObjectOn(4);
Wait(5);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(10);
SetCharacterView(MAIN, 68);
Wait(60);
ObjectOn(3);
MoveObjectDirect(3, 385, 91, 5);
Wait(5);
PlaySound(21);
ObjectOff(3);
MoveObjectDirect(3, 385, 26, 10);
Wait(20);
SetCharacterView(MAIN, 74);
Wait(20);
DisplaySpeech(MAIN, "Guess he's not interested.");
Wait(10);
character[MAIN].loop= 9;
character[MAIN].frame= 1;
Wait(15);
ObjectOff(4);
Wait(5);
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 2);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
Wait(20);
SetTimer(1, 400);
SetTimer(2, 700);

GUIOn(2);
EndCutscene();
}

function character8_e() {
  // script for character8: Use inventory on character
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
DisplaySpeechNoBlock(MAIN, "He doesn't look like he reads the paper much.", 1);
}

function inventory11_a() {
  // script for inventory11: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "I grabbed a handful.", 1);
}

function inventory17_a() {
  // script for inventory17: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It has some grease on it now.", 1);
}

function inventory34_a() {
  // script for inventory34: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It's a solid looking piece of wood.", 1);
}

function inventory36_b() {
  // script for inventory36: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "Hmm... It doesn't have any batteries...", 1);
}

function inventory20_b() {
  // script for inventory20: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "I know they have some juice left in them.", 1);
}

function character2_d() {
  // script for character2: Pick up character
  
if(IsObjectOn(4)== 1) {						// if cage door is open
  
	MoveCharacterBlocking(MAIN, 247, 109, 0);
	character[MAIN].loop= 3;
	Wait(10);
	StartCutscene(5);
	GUIOff(2);
	Wait(30);
	SetMusicMasterVolume(30);
	
	Wait(30);
	character[MAIN].loop= 7;
	character[MAIN].frame= 1;
	Wait(5);
	PlaySound(11);
	DisplaySpeechNoBlock(KNUCKLES, "Squuaaaaaawk.", 1);
	Wait(5);
	character[MAIN].loop= 3;
	character[MAIN].frame= 0;
	MoveCharacterBlocking(KNUCKLES, 270, 34, 0);
	MoveCharacterBlocking(MAIN, 313, 116, 0);
	character[MAIN].loop= 0;
	Wait(30);
	DisplaySpeech(MAIN, "He doesn't really let me touch him...");
	Wait(10);
	MoveCharacterBlocking(MAIN, 313, 116, 0);
	character[MAIN].loop= 0;
	Wait(5);
	character[MAIN].loop= 1;
	Wait(10);
	MoveCharacter(KNUCKLES, 264, 45);
	DisplaySpeechNoBlock(MAIN, "... but he knows who's boss!", 1);
	Wait(30);
	SetMusicMasterVolume(90);
	Wait(30);
	
	GUIOn(2);
	EndCutscene();
}

else {
 
	FaceCharacter(MAIN, KNUCKLES);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I should open the cage door first.", 1);
}
}

function character8_f() {
  // script for character8: Use inventory on character
  
FaceLocation(MAIN, mouse.x, mouse.y);
Wait(5);
ReleaseCharacterView(TRAINER);
SetCharacterSpeechView(TRAINER, 146);
DisplaySpeech(TRAINER, "That's some powerful supplement you got there!");
SetCharacterSpeechView(TRAINER, 26);
}


function inventory19_a() {
  // script for inventory19: Interact inventory item
  

}

function inventory38_a() {
  // script for inventory38: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "'Gamekeep Mix, Volume 1'", 1);
}


function inventory7_a() {
  // script for inventory7: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "Chocolate and caffeine, what a combination!", 1);
}

function inventory39_a() {
  // script for inventory39: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It's the CD player, sans disc.", 1);
}

function inventory39_b() {
  // script for inventory39: Interact inventory item
  
if(ACTION== USE) {

	if(GetGlobalInt(54)== 0) {			// batteries in player

		DisplaySpeech(MAIN, "There's no CD to listen to.", 1);
	}
	
	else if (GetGlobalInt(54)== 1) {
	
		DisplaySpeech(MAIN, "It doesn't have any batteries.", 1);
	}
}

else if(ACTION== OPEN) {

	if(GetGlobalInt(54)== 0) {			// batteries in player

		StopMoving(MAIN);
		Wait(20);
		
		GUIOff(2);
		StartCutscene(5);
		
		Wait(20);
		DisplaySpeech(MAIN, "Maybe there's something else I can grab from this...");
		Wait(10);
		AddInventory(20);
		DisplaySpeechNoBlock(MAIN, "... these batteries might be useful!", 1);
		Wait(20);
	}
	
	else if(GetGlobalInt(54)== 1) {
	
		DisplaySpeechNoBlock(MAIN, "There's nothing more to take out of it.", 1);
	}
}
}

function inventory32_a() {
  // script for inventory32: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "He was starting to get on my nerves...", 1);
}

function inventory33_a() {
  // script for inventory33: Look at inventory item
  
DisplaySpeechNoBlock(MAIN, "It's filled with ice to keep it cool.", 1);
}

function character17_g() {
  // script for character17: Use inventory on character
  
MoveCharacter(MAIN, 154, 111);

while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, GetViewportY());
	Wait(1);
}
  
MoveCharacterBlocking(MAIN, 154, 111, 0);
character[MAIN].loop= 2;
Wait(10);  
  
character[MAIN].loop= 13;
character[MAIN].frame= 1;
Wait(10);
ObjectOn(2);
LoseInventory(38);
LoseInventory(39);
Wait(5);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
}

function character15_d() {
  // script for character15: Talk to character

if(character[TALKIE].room== 13) {

	if(GetGlobalInt(23)== 0) {
	
		FaceCharacter(MAIN, TALKIE);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "it's not close enough to converse with...", 1);
	}
	
	if(GetGlobalInt(23)== 1) {
	
		FaceCharacter(MAIN, TALKIE);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "... it's not in the mood for a rational discussion.", 1);
	}	
}


else if(character[TALKIE].room== 15) {
  
	if(GetGlobalInt(34)== 0) {						// if he hasn't done the robe bit
	  
		MoveCharacterBlocking(MAIN, 33, 160, 0);
		character[MAIN].loop= 2;
		Wait(10);
		SetMusicMasterVolume(30);
		SetMusicRepeat(1);
		PlayMusic(11);
		SetMusicRepeat(0);
		Wait(10);
		GUIOff(2);
		GUIOn(4);							// turn on "screen" GUI for scrolling
		StartCutscene(5);
		
		Wait(30);
		DisplaySpeech(MAIN, "... is that all you have to say?");
		Wait(30);
		PlaySound(33);
		DisplaySpeech(TALKIE, "... I'LL SHOW YOU WHAT PAIN IS!");
		
		while(GetViewportY() != 0) {
		
			SetViewport(0, (GetViewportY() - 2));
			Wait(1);
		}
		
		Wait(10);
		character[TALKIE].loop= 1;
		DisplaySpeechAt(16, 20, 50, TALKIE, "I'LL SHOW YOU WHAT PAIN IS!");
		character[MAIN].loop= 3;
		Wait(5);
		DisplaySpeechAt(120, 20, 50, TALKIE, "I'LL SHOW YOU WHAT PAIN IS!");
		Wait(5);
		DisplaySpeechAt(25, 10, 50, TALKIE, "I'LL SHOW YOU WHAT PAIN IS!");
		Wait(20);
		character[TALKIE].loop= 0;
		SetCharacterTransparency(MAIN, 100);
		SetGlobalInt(42, 3);						// flag to check for cutscene
		NewRoom(19);
	}
	
	else {
	
		FaceCharacter(MAIN, TALKIE);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "It doesn't need more mockery.", 1);
	}
}
}

function inventory38_b() {
  // script for inventory38: Use inventory on this item
  
AddInventory(19);
LoseInventory(38);
LoseInventory(39);
}

function inventory39_c() {
  // script for inventory39: Use inventory on this item
  
AddInventory(19);
LoseInventory(38);
LoseInventory(39);
}

function inventory39_d() {
  // script for inventory39: Use inventory on this item
  
DisplaySpeechNoBlock(MAIN, "I may have a better use for them...", 1);
}

function character13_a() {
  // script for character13: Talk to character
  
MoveCharacterBlocking(MAIN, 135, 131, 0);
character[MAIN].loop= 2;

if(MorryIdle== 1) {

	MorryIdle= 0;
	
	if(IsOverlayValid(MorryIdleSpeech)) {
	
		RemoveOverlay(MorryIdleSpeech);
	}
	
	ReleaseCharacterView(MORRY);
}

SetTimer(1, 0);
Wait(20);

GUIOff(2);

Wait(20);
SetCharacterView(MAIN, 72);
SetCharacterSpeechView(MAIN, 60);
Wait(10);
DisplaySpeech(MAIN, "Morry!");
Wait(10);
DisplaySpeech(MORRY, "... did you have a question?");
Wait(20);
ReleaseCharacterView(MAIN);
SetCharacterSpeechView(MAIN, 2);

RunDialog(12);
}

function character8_g() {
  // script for character8: Interact character

if(ACTION== USE) {

	FaceCharacter(MAIN, TRAINER);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... I'm not ready to have a personal trainer.", 1);
}
  
else if(ACTION== PUSH || ACTION== PULL) {

	FaceCharacter(MAIN, TRAINER);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't think I can muscle him around.", 1);
}

else if(ACTION== GIVE) {

	FaceCharacter(MAIN, TRAINER);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... he's focused on fitness.", 1);
}
}


export CoffeeIdle;
export HirelingIdle;
export HirelingIdleSpeech;
export CliffIdle;
export CliffIdleSpeech;
export WorkerIdle;
export WorkerIdleSpeech;
export TalkieIdle;
export TalkieIdleSpeech;
export GrandpaIdle;
export GrandpaIdleSpeech;
export MomIdle;
export MomIdleSpeech;
export GrandmaIdle;
export GrandmaIdleSpeech;
export BirdIdle;
export MorryIdle;
export MorryIdleSpeech;
export AndersonIdle;
export AndersonIdleSpeech;
export SteveIdle;
export SteveIdleSpeech;
export TrainerIdle;
export TrainerIdleSpeech;
export ThurstonIdle;
export ThurstonIdleSpeech;

function character1_b() {
  // script for character1: Look at character
  
FaceCharacter(MAIN, MOM);
Wait(10);
DisplaySpeechNoBlock(MAIN, "... she does love to vacuum.", 1);
}

function character12_h() {
  // script for character12: Pick up character
  
FaceCharacter(MAIN, BIRD);
Wait(10);
DisplaySpeechNoBlock(MAIN, "... I can't reach the cane from here.", 1);
}

function character9_d() {
  // script for character9: Interact character
  
if(ACTION== USE) {

	FaceCharacter(MAIN, WORKER);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... he looks gullible.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceCharacter(MAIN, WORKER);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's too big too shove around.", 1);
}

else if(ACTION== GIVE) {

	FaceCharacter(MAIN, WORKER);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's giving it his all.", 1);
}
}

function character9_e() {
  // script for character9: Pick up character
  
FaceCharacter(MAIN, WORKER);
Wait(10);
DisplaySpeechNoBlock(MAIN, "He wouldn't stand for it.", 1);
}

function character1_c() {
  // script for character1: Interact character
  
if(ACTION== USE || ACTION== PUSH || ACTION== PULL) {

	FaceCharacter(MAIN, MOM);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'll let her handle the vacuuming.", 1);
}

else if(ACTION== GIVE) {

	FaceCharacter(MAIN, MOM);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I give her affection all the time.", 1);
}
}

function character1_d() {
  // script for character1: Pick up character
  
FaceCharacter(MAIN, MOM);
Wait(10);
DisplaySpeechNoBlock(MAIN, "No need to take over the vacuuming...", 1);
}

function character17_h() {
  // script for character17: Look at character

if(GetGlobalInt(18)== 0) {
  
	FaceCharacter(MAIN, CLIFF);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He looks spry and chipper this morning...", 1);
}

else {

	FaceCharacter(MAIN, CLIFF);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's entranced with the programming.", 1);	
}
}

function character17_i() {
  // script for character17: Interact character
  
if(ACTION== USE) {

	FaceCharacter(MAIN, CLIFF);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's only really good for GM'ing...", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceCharacter(MAIN, CLIFF);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's very sensitive to that sort of thing.", 1);	
}

if(ACTION== GIVE) {

	FaceCharacter(MAIN, CLIFF);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... he doesn't want my attention.", 1);
}
}

function character17_j() {
  // script for character17: Pick up character
  
FaceCharacter(MAIN, CLIFF);
Wait(10);
DisplaySpeechNoBlock(MAIN, "He's very sensitive to that sort of thing.", 1);	}

function character10_c() {
  // script for character10: Look at character
  
FaceCharacter(MAIN, COFFEE);
Wait(10);
DisplaySpeechNoBlock(MAIN, "He's taking in a beverage at the park.", 1);
}

function character10_d() {
  // script for character10: Interact character
  
if(ACTION== USE) {

	FaceCharacter(MAIN, COFFEE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's sitting down right now.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceCharacter(MAIN, COFFEE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't know him that well.", 1);
}

else if(ACTION== GIVE) {

	FaceCharacter(MAIN, COFFEE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't think he needs anything.", 1);
}
}

function character10_e() {
  // script for character10: Pick up character
  
FaceCharacter(MAIN, COFFEE);
Wait(10);
DisplaySpeechNoBlock(MAIN, "He's sitting down right now.", 1);
}

function character7_d() {
  // script for character7: Interact character
  
if(ACTION== USE) {

	FaceCharacter(MAIN, HIRELING);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I should talk to him...", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceCharacter(MAIN, HIRELING);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's behind the counter.", 1);
}

else if(ACTION== GIVE) {

	FaceCharacter(MAIN, HIRELING);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's interested in money.", 1);
}
}

function character7_e() {
  // script for character7: Pick up character
  
FaceCharacter(MAIN, HIRELING);
Wait(10);
DisplaySpeechNoBlock(MAIN, "He's behind the counter.", 1);
}

function character4_e() {
  // script for character4: Look at character

if(GetGlobalInt(4)== 0) {				// sitting downstairs on couch
  
	FaceCharacter(MAIN, GRANDPA);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's not very mobile without the cane.", 1);
}

else {							// upstairs

	FaceCharacter(MAIN, GRANDPA);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's content stretching his legs.", 1);
}
}

function character4_f() {
  // script for character4: Interact character
  
if(GetGlobalInt(4)== 0) {				// sitting downstairs on couch

	if(ACTION== USE) {
  
		FaceCharacter(MAIN, GRANDPA);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "He's useless without his hearing aid.", 1);
	}
	
	if(ACTION== PUSH || ACTION== PULL) {
  
		FaceCharacter(MAIN, GRANDPA);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I'd rather just find his cane...", 1);
	}
	
	if(ACTION== GIVE) {
  
		FaceCharacter(MAIN, GRANDPA);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "... it's better to ignore him.", 1);
	}
}

else if(GetGlobalInt(4)== 2) {				// upstairs

	if(ACTION== USE) {
  
		FaceCharacter(MAIN, GRANDPA);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "He's useless without his hearing aid.", 1);
	}
	
	if(ACTION== PUSH || ACTION== PULL) {
  
		FaceCharacter(MAIN, GRANDPA);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "... I don't need to move him.", 1);
	}
	
	if(ACTION== GIVE) {
  
		FaceCharacter(MAIN, GRANDPA);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "Generally, he's self-sufficient...", 1);
	}
}

else if(GetGlobalInt(4)== 4) {				// upstairs with hearing aids

	if(ACTION== USE) {
  
		FaceCharacter(MAIN, GRANDPA);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "I don't think he needs more attention.", 1);
	}
	
	if(ACTION== PUSH || ACTION== PULL) {
  
		FaceCharacter(MAIN, GRANDPA);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "... I don't need to move him.", 1);
	}
	
	if(ACTION== GIVE) {
  
		FaceCharacter(MAIN, GRANDPA);
		Wait(10);
		DisplaySpeechNoBlock(MAIN, "Generally, he's self-sufficient...", 1);
	}
}
}

function character4_g() {
  // script for character4: Pick up character
  
if(GetGlobalInt(4)== 0) {

	FaceCharacter(MAIN, GRANDPA);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "Finding his cane would be easier...", 1);
}

else {

	FaceCharacter(MAIN, GRANDPA);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... I'm not giving out piggy-backs.", 1);
}
}

function character5_c() {
  // script for character5: Look at character
  
FaceCharacter(MAIN, GRANDMA);
Wait(10);
DisplaySpeechNoBlock(MAIN, "She's busy chopping on the cutting board...", 1);
}

function character5_d() {
  // script for character5: Interact character
  
if(ACTION== USE) {

	FaceCharacter(MAIN, GRANDMA);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I don't want to interfere.", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {
	
	FaceCharacter(MAIN, GRANDMA);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm trying to stay out of her way.", 1);
}

else if(ACTION== GIVE) {

	FaceCharacter(MAIN, GRANDMA);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... if I were her ingredient, she'd be interested.", 1);
}
}

function character5_e() {
  // script for character5: Pick up character
  
FaceCharacter(MAIN, GRANDMA);
Wait(10);
DisplaySpeechNoBlock(MAIN, "No need to try that.", 1);
}

function character8_h() {
  // script for character8: Look at character

if(GetGlobalInt(9)== 0) {
  
	FaceCharacter(MAIN, TRAINER);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's definitely alert.", 1);
}

else {

	FaceCharacter(MAIN, TRAINER);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He really looks excited...", 1);
}
}

function character8_i() {
  // script for character8: Pick up character
  
}

function character8_j() {
  // script for character8: Pick up character
  
FaceCharacter(MAIN, TRAINER);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'm not ready for a personal trainer!", 1);
}

function character2_e() {
  // script for character2: Look at character
  
if(GetGlobalInt(43)== 0 || GetGlobalInt(43)== 3) {

	FaceCharacter(MAIN, KNUCKLES);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He has a lot of toys to play with in his cage.", 1);
}

else {

	FaceCharacter(MAIN, KNUCKLES);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... he's feeding.", 1);
}
}

function character3_d() {
  // script for character3: Look at character
  
if(GetGlobalInt(6)== 0) {

	FaceCharacter(MAIN, CAT);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's sleeping right now.", 1);
}

else if(GetGlobalInt(6)== 2) {

	FaceCharacter(MAIN, CAT);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... he's past where Mom was vacuuming.", 1);
}

else if(GetGlobalInt(6)== 3) {

	FaceCharacter(MAIN, CAT);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... he's over by the kitchen door.", 1);
}

else {

	FaceCharacter(MAIN, CAT);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "What a handsome kitty!", 1);
}
}

function character11_b() {
  // script for character11: Look at character

if(GetGlobalInt(34)== 0) {
  
	FaceCharacter(MAIN, STEVE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's intructing the class.", 1);
}

else if(GetGlobalInt(34)== 1) {

	FaceCharacter(MAIN, STEVE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... he's looking agitated.", 1);
}

else if(GetGlobalInt(34)== 2) {

	FaceCharacter(MAIN, STEVE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He looks a little high-strung.", 1);
}

else if(GetGlobalInt(34)== 3) {

	FaceCharacter(MAIN, STEVE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's KO'd.", 1);
}
}

function character11_c() {
  // script for character11: Interact character
  
if(ACTION== USE) {

	FaceCharacter(MAIN, STEVE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He skilled in hand-to-hand combat!", 1);
}

else if(ACTION== PUSH || ACTION== PULL) {

	FaceCharacter(MAIN, STEVE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He'd smash me!", 1);
}

else if(ACTION== GIVE) {

	FaceCharacter(MAIN, STEVE);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He doesn't look very receptive.", 1);
}
}

function character11_d() {
  // script for character11: Pick up character

FaceCharacter(MAIN, STEVE);
Wait(10);
DisplaySpeechNoBlock(MAIN, "He'd smash me if I'd try that!", 1);
}

function character13_b() {
  // script for character13: Look at character
  
FaceCharacter(MAIN, MORRY);
Wait(10);
DisplaySpeechNoBlock(MAIN, "He looks frustratingly calm!", 1);
}

function character13_c() {
  // script for character13: Interact character

if(ACTION== USE) {

	FaceCharacter(MAIN, MORRY);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "I'm not touching his sweaty, naked skin!", 1);
}
  
else if(ACTION== PUSH || ACTION== PULL) {

	FaceCharacter(MAIN, MORRY);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "He's too big to move around!", 1);
}

else if(ACTION== GIVE) {

	FaceCharacter(MAIN, MORRY);
	Wait(10);
	DisplaySpeechNoBlock(MAIN, "... he's not interested in anything.", 1);
}
}

function character13_d() {
  // script for character13: Pick up character
  
FaceCharacter(MAIN, MORRY);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'm not touching his sweaty, naked skin!", 1);
}

function character16_b() {
  // script for character16: Look at character
  
FaceCharacter(MAIN, ANDERSON);
Wait(10);
DisplaySpeechNoBlock(MAIN, "I'm not sure what he was thinking.", 1);
}


function character17_e() {
  // script for character17: Use inventory on character
  
MoveCharacter(MAIN, 154, 111);

while(GetViewportX() > 0) {

	SetViewport(GetViewportX() - 2, GetViewportY());
	Wait(1);
}
  
MoveCharacterBlocking(MAIN, 154, 111, 0);
character[MAIN].loop= 2;
Wait(10);  
  
character[MAIN].loop= 13;
character[MAIN].frame= 1;
Wait(10);
ObjectOn(2);
LoseInventory(38);
LoseInventory(39);
Wait(5);
character[MAIN].loop= 2;
character[MAIN].frame= 0;
}

function character13_e() {
  // script for character13: Use inventory on character
  
FaceCharacter(MAIN, MORRY);
Wait(10);
DisplaySpeechNoBlock(MAIN, "He could use cooling down.", 1);
}

$$$!$$$ EOF *** DO NOT REMOVE THIS LINE ***
